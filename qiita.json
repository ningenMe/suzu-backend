[{"rendered_body":"\u003ch1 data-sourcepos=\"1:1-1:89\"\u003e\n\u003cspan id=\"コードレビューで普段意識していることしてもらっていること\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC%E3%81%A7%E6%99%AE%E6%AE%B5%E6%84%8F%E8%AD%98%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8%E3%81%97%E3%81%A6%E3%82%82%E3%82%89%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコードレビューで普段意識していること、してもらっていること\u003c/h1\u003e\n\u003ch2 data-sourcepos=\"3:1-3:15\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\u003cp data-sourcepos=\"4:1-4:18\"\u003eこんにちは。\u003c/p\u003e\n\u003cp data-sourcepos=\"6:1-6:124\"\u003eこの記事は \u003ca href=\"https://qiita.com/advent-calendar/2022/spring\"\u003eSpring Advent Calendar 2022\u003c/a\u003e の 19 日目の記事です。\u003c/p\u003e\n\u003cp data-sourcepos=\"8:1-8:334\"\u003e本記事では僕が普段レビュワーとして、コードレビューで気をつけていること。またレビュワーをするようになった経験からレビュイーとしてPullRequestを作る際に気をつけていること、PullRequestを作ってもらう際にお願いしていること、を書きます。\u003c/p\u003e\n\u003cp data-sourcepos=\"11:1-11:248\"\u003e直近では半年で650個ぐらいのPRを見ていて、エンジニアリングをする時間の中でコードレビューの比率が上がってきたこともあり、その中で色々思ったり工夫した点を書いていきます。\u003c/p\u003e\n\u003cp data-sourcepos=\"14:1-14:214\"\u003eなお普段はspring-bootで構成されるアプリケーションのソースを読むことが大半のため、spring-bootに焦点があたった内容に少し偏るかもしれません。悪しからず。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"18:1-18:12\"\u003e\n\u003cspan id=\"大前提\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%A7%E5%89%8D%E6%8F%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e大前提\u003c/h2\u003e\n\u003cp data-sourcepos=\"20:1-20:183\"\u003eこれはレビュワーに立つ経験が少ないときは気づいていなかったことですが、コードは書く量より読む量の方が多いのである............。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"24:1-24:32\"\u003e\n\u003cspan id=\"pullrequest-pr-について\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#pullrequest-pr-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePullRequest (PR) について\u003c/h2\u003e\n\u003ch3 data-sourcepos=\"26:1-26:52\"\u003e\n\u003cspan id=\"できるだけdiffの小さいprだと嬉しい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%A0%E3%81%91diff%E3%81%AE%E5%B0%8F%E3%81%95%E3%81%84pr%E3%81%A0%E3%81%A8%E5%AC%89%E3%81%97%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eできるだけdiffの小さいPRだと嬉しい\u003c/h3\u003e\n\u003cp data-sourcepos=\"27:1-27:276\"\u003e大前提ですが、小さいPRほど嬉しいです。差分を小さいほどレビュワーのコストは小さく、またスピード感のあるレビューができるため早くマージもでき、レビュワーレビュイーお互いにとってwin-winです。\u003c/p\u003e\n\u003cp data-sourcepos=\"29:1-29:87\"\u003eこれはコードレビューする側、される側両方の努力が必要です。\u003c/p\u003e\n\u003cp data-sourcepos=\"31:1-31:407\"\u003eレビューする側は、そもそもの実装の単位を小さくしてもらうために、チケットを細かく分割して誘導や、あらかじめ実装前に実装者とコミュニケーションをとり、認識を合わせましょう。レビュワーが受け身で待ってPRが大きくて見れない、というのは少しディスコミュニケーションな感じがします。\u003c/p\u003e\n\u003cp data-sourcepos=\"33:1-33:115\"\u003e例. apiの実装の際、リポジトリ層やコントローラーでPRを分けて出してもらう。など。\u003c/p\u003e\n\u003cp data-sourcepos=\"35:1-35:218\"\u003eまたレビューされる側も、実装途中でdiffを確認し、あまりにも大きいPRになりそうなら途中でPRを一度出してマージするなど、粒度を意識した実装をしましょう。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"37:1-37:27\"\u003e\n\u003cspan id=\"大きいprはダメ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%A7%E3%81%8D%E3%81%84pr%E3%81%AF%E3%83%80%E3%83%A1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e大きいPRはダメ？\u003c/h3\u003e\n\u003cp data-sourcepos=\"38:1-38:169\"\u003eそんなことはないと思っています。意味のあるまとまりや、機械的な変更なら、diffが大きくなることは良いと思っています。\u003c/p\u003e\n\u003cp data-sourcepos=\"40:1-40:112\"\u003e例. パッケージ(ディレクトリ)名の変更で、配下のファイル全てに変更が入るなど。\u003c/p\u003e\n\u003cp data-sourcepos=\"42:1-42:265\"\u003eまた、アトミックに変更しないとテストが通らない大きなPRというのも場面としては存在するとは思います。必要な範囲の中でできる限りPRを小さくする意識を全員で持つのが大事かなと思います。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"44:1-44:64\"\u003e\n\u003cspan id=\"テストを通しながら小さな差分を積み重ねる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E9%80%9A%E3%81%97%E3%81%AA%E3%81%8C%E3%82%89%E5%B0%8F%E3%81%95%E3%81%AA%E5%B7%AE%E5%88%86%E3%82%92%E7%A9%8D%E3%81%BF%E9%87%8D%E3%81%AD%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eテストを通しながら小さな差分を積み重ねる\u003c/h3\u003e\n\u003cp data-sourcepos=\"45:1-45:876\"\u003eたまに、PRを作ったもののテストが通せないという人がいます。そういう事態を防ぐために、コミット単位ぐらいで良いので、こまめにテストを回しましょう。常にテストが通る単位でコミットを重ねると、どの履歴に戻ってもgreenな状態で修正が楽だと思います。またそういう所作をしてなかった時のトラブルシュートとしては、まずテストが通らないことを相談する前に、派生元のコミットまで戻ってテストを動かしてみましょう。自分のコミットの追加によりテストが落ちたのか、そうでないのかの切り分けをするのが良いです。(すぐ有識者に聞いてしまう方が良い場面もあるとは思うので、質問がダメというわけではないのが難しいところ...)\u003c/p\u003e\n\u003ch3 data-sourcepos=\"48:1-48:116\"\u003e\n\u003cspan id=\"でも実装始めたらdiffは大きくなるものだし一気に実装した方が効率良いのでは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A7%E3%82%82%E5%AE%9F%E8%A3%85%E5%A7%8B%E3%82%81%E3%81%9F%E3%82%89diff%E3%81%AF%E5%A4%A7%E3%81%8D%E3%81%8F%E3%81%AA%E3%82%8B%E3%82%82%E3%81%AE%E3%81%A0%E3%81%97%E4%B8%80%E6%B0%97%E3%81%AB%E5%AE%9F%E8%A3%85%E3%81%97%E3%81%9F%E6%96%B9%E3%81%8C%E5%8A%B9%E7%8E%87%E8%89%AF%E3%81%84%E3%81%AE%E3%81%A7%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eでも実装始めたらdiffは大きくなるものだし、一気に実装した方が効率良いのでは？\u003c/h3\u003e\n\u003cp data-sourcepos=\"49:1-49:178\"\u003e実装を一足飛びにやるのは効率が良いとは自分も思います。ただそれを1つのブランチでまとめてしまうのは話が別かなと感じます。\u003c/p\u003e\n\u003cp data-sourcepos=\"51:1-51:511\"\u003e例えばAPIを1本、ルーティング部分からdb側の処理まで書くような場合に、一旦動くところまで書いてしまうのはアリだと思います。ただその後、意味のある単位でコミットを分けたり、ブランチを分けてPRを出すことが必要で、まず依存の深い方やコアな部分からPRをマージしていくことでコードレビューも局所に集中でき、また粒度を意識した実装にもつながるかなと思います。\u003c/p\u003e\n\u003cp data-sourcepos=\"53:1-53:297\"\u003e40ファイルのchangeとかで、ロジック沢山だと、レビューできないことはないものの修正も無限に発生し、コメントの往復も1週間以上続いたりとレビュワーレビュイーともに疲弊してしまうみたいなパターンをよくみます。\u003c/p\u003e\n\u003cp data-sourcepos=\"55:1-55:193\"\u003ediffがどれぐらいだと多いか、というのは主観ですが、自分は10file changeを超えるようなPRはほとんど出すことがないかなというような所感です。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"58:1-58:70\"\u003e\n\u003cspan id=\"大枠を先にコミットして骨格を作る意識を持つ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%A7%E6%9E%A0%E3%82%92%E5%85%88%E3%81%AB%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%97%E3%81%A6%E9%AA%A8%E6%A0%BC%E3%82%92%E4%BD%9C%E3%82%8B%E6%84%8F%E8%AD%98%E3%82%92%E6%8C%81%E3%81%A4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e大枠を先にコミットして、骨格を作る意識を持つ\u003c/h3\u003e\n\u003cp data-sourcepos=\"59:1-59:145\"\u003eレビューやPRというよりは実装の話になりますが、IFだけを先に合わせたスケルトンを作ろうという話です。\u003c/p\u003e\n\u003cp data-sourcepos=\"61:1-62:363\"\u003e実際10file以下のPRのみで構成しようと思うと少し難しさがあると思います。なのでまずは骨子だけで良いので、サービスクラスのガワや、モデリングのガワだけを作っていき、実装上での各クラスのリレーションや、メソッドのIFだけを先に確定させていくのが大事です。\u003cbr\u003e\n極論この時点では戻り値は全部nullなどの適当なもので良いので、IFだけ合わせて行って残りをTODOで丸投げしていくのが大事です。こうすることで、常に小さいPRの集合で実装を組んでいくことができる、かつ大枠も先に見えるので、ブレが少ないものが出来上がります。\u003c/p\u003e\n\u003cp data-sourcepos=\"64:1-64:210\"\u003eDDDとかだとドメインモデルから構築するのが一般的かなと思いますが、その過程の中でもモデリングのリレーションだけ先に決めるようなイメージですね。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"68:1-68:61\"\u003e\n\u003cspan id=\"実装は果たして簡単なタスクだろうか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A3%85%E3%81%AF%E6%9E%9C%E3%81%9F%E3%81%97%E3%81%A6%E7%B0%A1%E5%8D%98%E3%81%AA%E3%82%BF%E3%82%B9%E3%82%AF%E3%81%A0%E3%82%8D%E3%81%86%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実装は果たして、簡単なタスクだろうか？\u003c/h3\u003e\n\u003cp data-sourcepos=\"71:1-72:190\"\u003e上記を踏まえて、実装は果たして簡単なものでしょうか？\u003cbr\u003e\n1つのDBテーブルをCRUDするAPIをレビュワーのことも気にせず実装するだけなら、そのクオリティはさておき難易度は高くないかもしれません。\u003c/p\u003e\n\u003cp data-sourcepos=\"74:1-74:227\"\u003eただ、常に小さいPRになるように心がけ、また先に骨子を作るような、大枠をイメージした上でパーツを組んでいくような実装をすることは果たして簡単でしょうか...？\u003c/p\u003e\n\u003cp data-sourcepos=\"77:1-77:57\"\u003e結論としては「そんなことはない」です。\u003c/p\u003e\n\u003cp data-sourcepos=\"80:1-80:186\"\u003eアプリアーキテクチャと呼ばれるような、実装レベルの設計は実装者もレビュワーも理解していないとなかなか難しいところがあります。\u003c/p\u003e\n\u003cp data-sourcepos=\"82:1-82:152\"\u003e意図的に小さいPRを作る、というのもアプリアーキテクチャの理解度が低い場合は少しハードルが高いでしょう。\u003c/p\u003e\n\u003cp data-sourcepos=\"84:1-84:174\"\u003eそんなことを気にするなら動くものをさっさと作って頑張ってレビューしてもらう方が良い、という反論もあるかもしれません。\u003c/p\u003e\n\u003cp data-sourcepos=\"86:1-86:195\"\u003eこれはプロジェクトなど業務においては正しい場面もあるかもしれないですが、純粋に質を高めるという観点では少し辛いところではあります。\u003c/p\u003e\n\u003cp data-sourcepos=\"88:1-88:62\"\u003e大きいPR、本当に丁寧にレビューできますか？\u003c/p\u003e\n\u003cp data-sourcepos=\"90:1-90:155\"\u003eまた、そういうPRを出してもいいというチームは、レビュワーの方は本当にちゃんと見てくれていますでしょうか？\u003c/p\u003e\n\u003cp data-sourcepos=\"93:1-93:182\"\u003eチーム文化的なところも大きいので一概にgood/badは言えないですが、コードの品質に重きをどこまで置くか次第なのかなあと思います。\u003c/p\u003e\n\u003cp data-sourcepos=\"97:1-97:219\"\u003eこれは設計などが上流の過程と称される一方で、実装が下流と称されてしまう部分に対しての警鐘の意味も込めて、実装は難しいという話をしたかった感じです。\u003c/p\u003e\n\u003cp data-sourcepos=\"100:1-100:359\"\u003eちなみに、一連の流れ全部を書いてもらわないと部分的な処理だけではレビューできない、という意見もあるのかなと思うのですが、その場合はそもそもどういうPRが来るかレビューする側もちゃんと想定できていない、というのが一つ原因にあるのかなと思います。\u003c/p\u003e\n\u003cp data-sourcepos=\"102:1-102:424\"\u003e実装自体はクリエイティブな部分もあるので、完全にオーケストレーションするのは難しいと思いますが、一方でPRで初めて実装者側の意図や思想を知る、というのは手戻りが多くなるケースが多いと思うので、先にお互い実装するものをイメージ合わせた上でPRのフェーズに入る、というのが大事かなと思います。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"105:1-105:49\"\u003e\n\u003cspan id=\"レビュイーは説明を書きましょう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AC%E3%83%93%E3%83%A5%E3%82%A4%E3%83%BC%E3%81%AF%E8%AA%AC%E6%98%8E%E3%82%92%E6%9B%B8%E3%81%8D%E3%81%BE%E3%81%97%E3%82%87%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eレビュイーは説明を書きましょう\u003c/h3\u003e\n\u003cp data-sourcepos=\"106:1-107:9\"\u003eこれはまあ作法的な部分もあるんですが、作ったPRに対して実装者側の説明が多いとレビュワーとしては嬉しいという感じです。\u003cbr\u003e\n例えば\u003c/p\u003e\n\u003cul data-sourcepos=\"108:3-112:0\"\u003e\n\u003cli data-sourcepos=\"108:3-108:49\"\u003e設計書のドキュメントを記載する\u003c/li\u003e\n\u003cli data-sourcepos=\"109:3-109:87\"\u003eDBなどが絡む場合は、ddlやスキーマのドキュメントを記載する\u003c/li\u003e\n\u003cli data-sourcepos=\"110:3-110:100\"\u003eまた、会社や業務などの場合は、仕様書などのドキュメントを記載する\u003c/li\u003e\n\u003cli data-sourcepos=\"111:3-112:0\"\u003e何かしらの技術調査の場合は、調査した資料を記載する\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"113:1-113:156\"\u003eなど。まあ関連する情報は全部載せてほしいって感じですね。実装の際参考にした記事などもあると嬉しいですね。\u003c/p\u003e\n\u003cp data-sourcepos=\"115:1-115:233\"\u003eまた、実装に対して、セルフコメントをつけるは結構有用かなと思います。実装に残すほどのコメントではないときに、PRで自分でインラインコメントをつける感じですね。\u003c/p\u003e\n\u003cp data-sourcepos=\"117:1-117:250\"\u003e後はセルフレビューを行うことも大事かなと思います。PRを作った後すぐコードレビュー依頼を出すのではなく、一度自分もレビュワー目線になって自分のPRを見てみるという感じです。\u003c/p\u003e\n\u003cp data-sourcepos=\"119:1-119:160\"\u003e些細なtypoや、改行忘れなど非本質なミスはレビューの中でノイズになってしまうので、予め排除できると良いですね。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"121:1-121:36\"\u003e\n\u003cspan id=\"コードレビューについて\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコードレビューについて\u003c/h2\u003e\n\u003ch3 data-sourcepos=\"123:1-123:37\"\u003e\n\u003cspan id=\"機械的なコメントを残す\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A9%9F%E6%A2%B0%E7%9A%84%E3%81%AA%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92%E6%AE%8B%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e機械的なコメントを残す\u003c/h3\u003e\n\u003cp data-sourcepos=\"124:1-124:159\"\u003eよくあるやつですが [nits], [must] , [ask] とかをコメントのprefixとして徹底すると意図が伝わりやすくて良いと思います。\u003c/p\u003e\n\u003cul data-sourcepos=\"126:1-127:0\"\u003e\n\u003cli data-sourcepos=\"126:1-127:0\"\u003e\u003ca href=\"https://qiita.com/kamihork/items/be0d7bdad8ae5a8082fb\" class=\"autolink\" id=\"reference-02a28025382c5b4eeb83\"\u003ehttps://qiita.com/kamihork/items/be0d7bdad8ae5a8082fb\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 data-sourcepos=\"128:1-128:22\"\u003e\n\u003cspan id=\"作法レビュー\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%9C%E6%B3%95%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e作法レビュー\u003c/h3\u003e\n\u003cp data-sourcepos=\"129:1-130:373\"\u003eコードレビューは自分の中で4種類ぐらいはタイプがあるかなと思っています。\u003cbr\u003e\nここでは適当に「作法レビュー」「頑張りレビュー」「ドメインレビュー」「スキルフルレビュー」と名前をつけてあげていきます。(他にも色々コンテキストがあるような気がします、4つに分類される、って言いたいわけではなくパッと思いつくのが4種類あったって感じです)\u003c/p\u003e\n\u003cp data-sourcepos=\"133:1-133:51\"\u003eここでは「作法レビュー」について。\u003c/p\u003e\n\u003cp data-sourcepos=\"135:1-135:207\"\u003e作法というと気難しさがありますが、いわゆる機械的に見れるやつですね。レビュワーとしても楽なので初手これを見ます。非本質なことが多いですが。\u003c/p\u003e\n\u003cul data-sourcepos=\"137:3-154:0\"\u003e\n\u003cli data-sourcepos=\"137:3-138:102\"\u003eコーディングルールを守れているか？\n\u003cul data-sourcepos=\"138:5-138:102\"\u003e\n\u003cli data-sourcepos=\"138:5-138:102\"\u003eこれはチーム特有のルールがある場合に守れているか、という感じです\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"139:3-140:107\"\u003eフォーマッタ違反していないか\n\u003cul data-sourcepos=\"140:5-140:107\"\u003e\n\u003cli data-sourcepos=\"140:5-140:107\"\u003eこれはciで見るべきなのでレビューで見てたらおかしいというのもあります\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"141:3-142:36\"\u003etypoしていないかどうか\n\u003cul data-sourcepos=\"142:5-142:36\"\u003e\n\u003cli data-sourcepos=\"142:5-142:36\"\u003eIDEで見ると大体わかる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"143:3-145:59\"\u003e\n\u003ccode\u003eNo Newline at End of File\u003c/code\u003e 。改行忘れ。\n\u003cul data-sourcepos=\"144:5-145:59\"\u003e\n\u003cli data-sourcepos=\"144:5-144:108\"\u003eeditorconfigを入れたりエディタでなんとかしたりと仕組みで防げるやつですね\u003c/li\u003e\n\u003cli data-sourcepos=\"145:5-145:59\"\u003e\u003ca href=\"https://qiita.com/naru0504/items/82f09881abaf3f4dc171\" class=\"autolink\" id=\"reference-985b0adb66b51ba0dfe9\"\u003ehttps://qiita.com/naru0504/items/82f09881abaf3f4dc171\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"146:3-148:134\"\u003esnake_case などの文体\n\u003cul data-sourcepos=\"147:5-148:134\"\u003e\n\u003cli data-sourcepos=\"147:5-147:288\"\u003eクラス名はパスカルケース、変数名はキャメルケース、など。なんでもいいのでそのリポジトリ内で秩序を持って統一できてるのが大事だと思います。名前は疎かにしてはいけないので地味なようでかなり大事\u003c/li\u003e\n\u003cli data-sourcepos=\"148:5-148:134\"\u003estaticなものや環境変数は大文字スネークケースにする、など (goだとそんなこともないですが...)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"149:3-151:162\"\u003eコピペミス\n\u003cul data-sourcepos=\"150:5-151:162\"\u003e\n\u003cli data-sourcepos=\"150:5-150:178\"\u003eyamlとかでよくあるやつですね。開発環境用のものをそのままコピペして、本番用にしたりして、微妙に修正が漏れてたりとか。\u003c/li\u003e\n\u003cli data-sourcepos=\"151:5-151:162\"\u003e「devのファイルとの差分はここです」みたいなものをインラインコメントで残していくのが所作としてはおすすめ。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"152:3-154:0\"\u003e使ってない変数を消す\n\u003cul data-sourcepos=\"153:5-154:0\"\u003e\n\u003cli data-sourcepos=\"153:5-154:0\"\u003eエディタとか、コンパイラが叱ってくれるもののレビューする際にも機械的に見れるはずです\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"155:1-156:180\"\u003eなど。\u003cbr\u003e\nまだまだあると思いますが、いわゆるある程度答えが決まってて、明らかなミスっぽいものを探すのが作法レビューという感じです。\u003c/p\u003e\n\u003cp data-sourcepos=\"158:1-159:63\"\u003eちなみにこれはそこまでスキルを問わないと思うので、基本的にはレビュイー側も自分で極力見つけて、このやりとりは発生しないようにできるのが望ましいかなと思います。\u003cbr\u003e\n本質のレビューから入れるのが理想的ですね。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"161:1-161:25\"\u003e\n\u003cspan id=\"頑張りレビュー\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%A0%91%E5%BC%B5%E3%82%8A%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e頑張りレビュー\u003c/h3\u003e\n\u003cp data-sourcepos=\"162:1-163:111\"\u003e「頑張りレビュー」について。\u003cbr\u003e\nこれは少し定義がふわっとしてるんですが、頑張って行うレビューにあたります。\u003c/p\u003e\n\u003cul data-sourcepos=\"165:1-168:0\"\u003e\n\u003cli data-sourcepos=\"165:1-165:103\"\u003e例. テストの実装の際に、テスト用のsqlファイルが間違っていないかどうか\u003c/li\u003e\n\u003cli data-sourcepos=\"166:1-166:127\"\u003e例. テストの期待値が決まっているケースに対して、意図通りのassertが行われているかどうか\u003c/li\u003e\n\u003cli data-sourcepos=\"167:1-168:0\"\u003e例. フロントでのエラー文言を実装する際に、仕様書通りに一言一句正しいかどうか。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"169:1-170:192\"\u003eなど。\u003cbr\u003e\n少し表現が難しいのですが、ちゃんと見る必要があるものの大変だったり、スルーしてしまう人がたまにいるようなレビューという感じです。\u003c/p\u003e\n\u003cp data-sourcepos=\"172:1-172:210\"\u003e自分の経験の中だと、例えば一気通貫したintegration-testなどを書くと、inputとoutputが両方複雑になることが多いので、「頑張りレビュー」がよく発生します。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"174:1-174:28\"\u003e\n\u003cspan id=\"ドメインレビュー\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eドメインレビュー\u003c/h3\u003e\n\u003cp data-sourcepos=\"175:1-175:123\"\u003e「ドメインレビュー」はまあその名の通りで、ドメイン知識をフル活用するレビューです。\u003c/p\u003e\n\u003cul data-sourcepos=\"177:1-187:0\"\u003e\n\u003cli data-sourcepos=\"177:1-178:178\"\u003e業務側の仕様書通りになっているか\n\u003cul data-sourcepos=\"178:3-178:178\"\u003e\n\u003cli data-sourcepos=\"178:3-178:178\"\u003eこれはいわゆる開発者側の設計書通りかどうか、ではなく、業務側の仕様書や企画書通りの動きになるか、という意味合いです。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"179:1-180:223\"\u003e開発者側の設計通りになっているかどうか\n\u003cul data-sourcepos=\"180:3-180:223\"\u003e\n\u003cli data-sourcepos=\"180:3-180:223\"\u003e開発者の設計通りになっているかももちろん含まれます。実装側だけ眺めてると設計書通りになっていなかったり処理が漏れていることに気づかなかったりします\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"181:1-182:319\"\u003e正常形やエラーのハンドリングは適切か\n\u003cul data-sourcepos=\"182:3-182:319\"\u003e\n\u003cli data-sourcepos=\"182:3-182:319\"\u003eドメインと関係ないようで、かなり大事です。特にマイクロサービス文脈だと、ここでこのエラーが起きた場合に、どこまで影響があるんだっけ？とか伝播の度合いを意識したりするので、ドメイン知識がかなり必要になってきます。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"183:1-187:0\"\u003eデータの値域について\n\u003cul data-sourcepos=\"184:3-187:0\"\u003e\n\u003cli data-sourcepos=\"184:3-184:259\"\u003e自チームで定義しているドメインデータの場合は実装にある値が全てですが、例えば他領域のデータを参照する場合に、とりうる値が想定している範囲で収まっているか、を確認したりと。\u003c/li\u003e\n\u003cli data-sourcepos=\"185:3-187:0\"\u003e例. \u003ccode\u003etype\u003c/code\u003e というデータ は \u003ccode\u003ehoge\u003c/code\u003e か \u003ccode\u003efuga\u003c/code\u003e かの2種類の値を取るつもりの実装をしていたが、実は\u003ccode\u003epiyo\u003c/code\u003e も取りうるので考慮しましょう、みたいな。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 data-sourcepos=\"188:1-188:31\"\u003e\n\u003cspan id=\"スキルフルレビュー\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B9%E3%82%AD%E3%83%AB%E3%83%95%E3%83%AB%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eスキルフルレビュー\u003c/h3\u003e\n\u003cp data-sourcepos=\"189:1-189:200\"\u003e「スキルフルレビュー」雑多な言い方ですが、言語特有の知識だったり、セキュリティやネットワークなどCSそのものの知識が必要なレビューです。\u003c/p\u003e\n\u003cp data-sourcepos=\"191:1-192:161\"\u003e僕も全然知識ないので悩ましいところですが、いわゆる一番本質的なレビューかなと思います。\u003cbr\u003e\n一番と言いましたが、業務だとドメインレビューの方が大事な場面も多いかもです。(何が本質かは場面によって変わる)\u003c/p\u003e\n\u003cul data-sourcepos=\"194:1-233:0\"\u003e\n\u003cli data-sourcepos=\"194:1-195:107\"\u003e(java特有ですが) 不要にnullableにしていないか\n\u003cul data-sourcepos=\"195:3-195:107\"\u003e\n\u003cli data-sourcepos=\"195:3-195:107\"\u003elombokで\u003ca href=\"/NonNull\" class=\"user-mention js-hovercard\" title=\"NonNull\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"NonNull\"\u003e@NonNull\u003c/a\u003eをつけたり、kotlinだと意味のないoptionalはやめよう、という感じ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"196:1-197:55\"\u003e(java特有ですが) finalをつけているかどうか\n\u003cul data-sourcepos=\"197:3-197:55\"\u003e\n\u003cli data-sourcepos=\"197:3-197:55\"\u003eimmutableを徹底しているかどうかですね\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"198:1-200:96\"\u003e(java特有ですが) streamを適切に使えているか\n\u003cul data-sourcepos=\"199:3-200:96\"\u003e\n\u003cli data-sourcepos=\"199:3-199:136\"\u003efor文でガチャガチャするよりはstreamで処理する方がimmutableに自然に扱えてベターなことが多いです\u003c/li\u003e\n\u003cli data-sourcepos=\"200:3-200:96\"\u003ejavaじゃないにしても、immutableにlistを扱うという観点では同じですね\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"201:1-207:75\"\u003e計算量・パフォーマンスは適切か\n\u003cul data-sourcepos=\"202:3-207:75\"\u003e\n\u003cli data-sourcepos=\"202:3-202:76\"\u003e競技プログラミング的な計算量がまず挙げられますね\u003c/li\u003e\n\u003cli data-sourcepos=\"203:3-203:214\"\u003eまた、実際はweb文脈だと計算量というよりはパフォーマンスが大事なので、sqlの発行回数とか、外部apiのリクエスト回数を見たりすることも多いと思います\u003c/li\u003e\n\u003cli data-sourcepos=\"204:3-204:255\"\u003edbとのコネクションを使う処理は、sqlではO(1)相当のようなものでもアプリケーション目線では定数倍がちょっと重い、みたいな感覚でいるとokな感じがします。ケースバイケースですが。\u003c/li\u003e\n\u003cli data-sourcepos=\"205:3-205:46\"\u003eバルクで処理できないか、など\u003c/li\u003e\n\u003cli data-sourcepos=\"206:3-207:75\"\u003eロックまわりは変ではないか、とかも\n\u003cul data-sourcepos=\"207:5-207:75\"\u003e\n\u003cli data-sourcepos=\"207:5-207:75\"\u003eこれはレビューだけで見るの難しいときもあります\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"208:1-211:151\"\u003eDRY原則を守れているか\n\u003cul data-sourcepos=\"209:3-211:151\"\u003e\n\u003cli data-sourcepos=\"209:3-209:163\"\u003e論争になりがちなので断定的には言いづらいですが、まあdryにする必要がある、かつ可能なところはやりましょうと。\u003c/li\u003e\n\u003cli data-sourcepos=\"210:3-210:163\"\u003eなんでもdryにした方がいいって話をしたいのではなく、コード全体を把握したレビューをしましょう、の意味合いです\u003c/li\u003e\n\u003cli data-sourcepos=\"211:3-211:151\"\u003e結局コード内で共通化するべきか否か、というのはソース全体をある程度把握していないと判断がつきづらい\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"212:1-213:193\"\u003eアプリアーキテクチャの設計通りになっているか\n\u003cul data-sourcepos=\"213:3-213:193\"\u003e\n\u003cli data-sourcepos=\"213:3-213:193\"\u003eディレクトリ構成や、モジュールの依存関係、また実装されたものがレイヤー責務外れていないかなど(controllerからsql直接投げてないかとか)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"214:1-219:148\"\u003eモデリングが適切かどうか\n\u003cul data-sourcepos=\"215:3-219:148\"\u003e\n\u003cli data-sourcepos=\"215:3-215:85\"\u003eこれがコードレビューの中でかなり大事なパートに感じます\u003c/li\u003e\n\u003cli data-sourcepos=\"216:3-216:151\"\u003e例. あるデータとデータの関係が 1:1なのか、あるいは1:nなのか、またそれを的確に実装に落とし込めているか\u003c/li\u003e\n\u003cli data-sourcepos=\"217:3-217:116\"\u003etrue/falseの2値で表現しようとしてるが、実は3値あるものなのでenumが適切ではないか\u003c/li\u003e\n\u003cli data-sourcepos=\"218:3-218:163\"\u003e新しくステータスのような遷移が起きるデータを定義する際に、そのステータス達は排反な表現になっているかどうか\u003c/li\u003e\n\u003cli data-sourcepos=\"219:3-219:148\"\u003eなどなど。モデリングもミスが大きな歪みを生むのでここを重点的にレビューするのが大事かなと思います\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"220:1-222:117\"\u003eスレッドセーフかどうか\n\u003cul data-sourcepos=\"221:3-222:117\"\u003e\n\u003cli data-sourcepos=\"221:3-222:117\"\u003e(spring boot特有かもですが) diコンテナに乗るクラスに状態を持たせていないか、など\n\u003cul data-sourcepos=\"222:5-222:117\"\u003e\n\u003cli data-sourcepos=\"222:5-222:117\"\u003eこういうのはフレームワークと言語知識がないと見落とすので、難しいと感じます\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"223:1-233:0\"\u003e脆弱性がないかどうか\n\u003cul data-sourcepos=\"224:3-233:0\"\u003e\n\u003cli data-sourcepos=\"224:3-224:144\"\u003eこれも大事です。重点的に見ます。(まあ脆弱性ちゃんとわかったら苦労しないので難しいところですが)\u003c/li\u003e\n\u003cli data-sourcepos=\"225:3-227:103\"\u003e自由文字入力が、sqlに到達するかどうか\n\u003cul data-sourcepos=\"226:5-227:103\"\u003e\n\u003cli data-sourcepos=\"226:5-226:283\"\u003e例えばソートしてレスポンス返すようなAPIで、asc/descをリクエストで指定するような仕様の場合にasc/descをリクエストで文字列でもらう想定でそのままsqlに使っている、みたいなパターンとかが挙げられます\u003c/li\u003e\n\u003cli data-sourcepos=\"227:5-227:103\"\u003eenumに直したり、エスケープしましょうね、という基本の話ではあります\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"228:3-230:120\"\u003eapiに認証・認可がかかっているかどうか\n\u003cul data-sourcepos=\"229:5-230:120\"\u003e\n\u003cli data-sourcepos=\"229:5-229:192\"\u003e直叩きできるようになってるので危険、とか認証はされてるけど認可されてないからログインしたら誰でも人のリソースをみれる、とか。\u003c/li\u003e\n\u003cli data-sourcepos=\"230:5-230:120\"\u003eブラウザ側だけ制御して守るのは意味ないってのが共通認識じゃない時がたまにある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"231:3-233:0\"\u003e個人情報を扱っていないか、扱っている場合マスキングしているか\n\u003cul data-sourcepos=\"232:5-233:0\"\u003e\n\u003cli data-sourcepos=\"232:5-233:0\"\u003e会社のルールにもよるけど、識別子に対して生文で使っていいんだっけ？みたいな所作もレビューポイント\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"234:1-234:141\"\u003eなど。まだまだレビュー観点はありますが、とりあえず意識的に見るだけでもこれぐらいはあるなあと。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"236:1-236:15\"\u003e\n\u003cspan id=\"マインド\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%9E%E3%82%A4%E3%83%B3%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eマインド\u003c/h2\u003e\n\u003cp data-sourcepos=\"237:1-237:90\"\u003eここからはチーム開発におけるマインドの部分に焦点を当てます。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"239:1-239:73\"\u003e\n\u003cspan id=\"レビューできなくてもコードレビューに参加しよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%8F%E3%81%A6%E3%82%82%E3%82%B3%E3%83%BC%E3%83%89%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AB%E5%8F%82%E5%8A%A0%E3%81%97%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eレビューできなくてもコードレビューに参加しよう\u003c/h3\u003e\n\u003cp data-sourcepos=\"240:1-240:168\"\u003eコードレビューはテックリードや、ベテランの方がするものという認識の人が、一定数いたりしそう？自分は昔そうでした。\u003c/p\u003e\n\u003cp data-sourcepos=\"242:1-242:237\"\u003e結論これはよくなかったなと感じています。コードレビューはレビューする側だけでなく、レビューを学んだり、人が指摘されているのを見て自分に跳ね返す場でもあるなと。\u003c/p\u003e\n\u003cp data-sourcepos=\"244:1-244:201\"\u003eまず大前提として、コードレビューをしないとコードレビューはなかなかできるようになりません。実装と同じく、やらないと身につかないのです。\u003c/p\u003e\n\u003cp data-sourcepos=\"246:1-246:200\"\u003eまた、コードレビューの経験や、レビューしやすいPRへの意識を持つことで、実装をする際にもクオリティの向上や、気づきが生まれると思います。\u003c/p\u003e\n\u003cp data-sourcepos=\"248:1-248:428\"\u003eまたコードレビューは実装を題材にしたコミュニケーションの場でもあるので、わからない部分は質問をしたり、すごい実装を見たら褒めたりなど、活発に全員で行っていけるのが理想的かなと思います。関心がないと学ぶフェーズまで辿り着けないんですよね。(忙しかったり工数が厳しいと難しいこともありますが)\u003c/p\u003e\n\u003cp data-sourcepos=\"250:1-250:183\"\u003eあとコードレビューに参加することで、他の人が言われていた指摘を事前に防ぐことができるなどナレッジの横展開の側面もあります。\u003c/p\u003e\n\u003cp data-sourcepos=\"253:1-253:432\"\u003eあと一番大事なこととして、コードリーディングを増やすのが大事というのがあります。リポジトリ内で詳細を把握しているソースや大枠を把握している範囲を増やすことは、その後の実装の際にもかなり活きて来ます。似た処理があの辺にあったな、とか。パッケージ構成はここと同じ感じになるはず、とかそういう。\u003c/p\u003e\n\u003cp data-sourcepos=\"255:1-255:296\"\u003e関係ないリポジトリでも読めるならたくさんソースを読むのがおすすめです。PRという話に限らずソースリーディングはかなり大事だなと思います。読んだことない処理は書けなかったり、思いつかないことが多いです。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"257:1-257:64\"\u003e\n\u003cspan id=\"レビュワー側はマージまでの速度を高めよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AC%E3%83%93%E3%83%A5%E3%83%AF%E3%83%BC%E5%81%B4%E3%81%AF%E3%83%9E%E3%83%BC%E3%82%B8%E3%81%BE%E3%81%A7%E3%81%AE%E9%80%9F%E5%BA%A6%E3%82%92%E9%AB%98%E3%82%81%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eレビュワー側はマージまでの速度を高めよう\u003c/h3\u003e\n\u003cp data-sourcepos=\"258:1-258:313\"\u003eレビュワーが基本的には立場的にパワーを持ってしまうことが多いと思うのですが、PRをマージするにはレビュイーの努力だけではなくレビュワーの努力もかなり大事と思います。レビュワーの動きこそが、PRをマージまで運ぶのです\u003c/p\u003e\n\u003cul data-sourcepos=\"260:1-277:0\"\u003e\n\u003cli data-sourcepos=\"260:1-265:101\"\u003e完璧を求めず、マージしちゃうのも大事\n\u003cul data-sourcepos=\"261:3-265:101\"\u003e\n\u003cli data-sourcepos=\"261:3-261:118\"\u003e1つのPRでやりとりが多いと疲弊しますし、レビュイーのモチベーションも下がります\u003c/li\u003e\n\u003cli data-sourcepos=\"262:3-262:172\"\u003e非本質だったりクリティカルではないミスなら、後でさらに修正を加えてもらう前提で一旦マージするのも大事だと思います\u003c/li\u003e\n\u003cli data-sourcepos=\"263:3-263:131\"\u003eいっぱいやり取りしてapproveも集まって来たのに、些細なミスを指摘されると辛い、みたいな。\u003c/li\u003e\n\u003cli data-sourcepos=\"264:3-264:102\"\u003e大きいPRは特に、一旦マージすることを目標としないと差分が多くて辛い\u003c/li\u003e\n\u003cli data-sourcepos=\"265:3-265:101\"\u003e微妙な修正はTODO送りにしたりバックログにどんどん入れていきましょう\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"266:1-269:197\"\u003eそのためのリリースブランチ\n\u003cul data-sourcepos=\"267:3-269:197\"\u003e\n\u003cli data-sourcepos=\"267:3-267:124\"\u003e一時的なマージを許容できるように、ブランチ戦略でカバーするのが良いかなと思います\u003c/li\u003e\n\u003cli data-sourcepos=\"268:3-269:197\"\u003eリリースブランチを育てていくみたいなのが、小さいPRをたくさん作るのと相性いいかなと思います\n\u003cul data-sourcepos=\"269:5-269:197\"\u003e\n\u003cli data-sourcepos=\"269:5-269:197\"\u003e小さいPRを作る戦略は、テストはもちろん通る状態でマージしていくものの、アプリケーションとしては成り立っていない状態も多々あるので\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"270:1-277:0\"\u003eマージのテンポは開発効率につながる\n\u003cul data-sourcepos=\"271:3-277:0\"\u003e\n\u003cli data-sourcepos=\"271:3-271:96\"\u003ePRを作ってからマージをするまでの速度がかなり大事かなと思います\u003c/li\u003e\n\u003cli data-sourcepos=\"272:3-272:196\"\u003e早くマージしないと、他の人の作業がブランチへ入っていくので、ブランチの状態に変換が入ってしまい、レビュイー側の負担が増えてしまう\u003c/li\u003e\n\u003cli data-sourcepos=\"273:3-273:132\"\u003e小さいPRを積み重ねることで、差分がすぐブランチへ吸収されていき、多人数開発にも強くなる\u003c/li\u003e\n\u003cli data-sourcepos=\"274:3-277:0\"\u003eレビュワーは早くPRを見ましょう\n\u003cul data-sourcepos=\"275:5-277:0\"\u003e\n\u003cli data-sourcepos=\"275:5-277:0\"\u003eチーム文化にもよりますが、レビュー依頼がきたら極力早くレビューをすること。レビュイー側の動きを止めないような意識が大事です。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 data-sourcepos=\"278:1-278:15\"\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h2\u003e\n\u003cp data-sourcepos=\"279:1-281:210\"\u003e以上、コードレビュー論でした。\u003cbr\u003e\nかなり長文になってしまいました。\u003cbr\u003e\n主観が強いので的外れな部分もあるかもしれないですが、テックリードをする立場の人や同じようなロールの方にとって参考になる部分があれば幸いです。\u003c/p\u003e\n\u003cp data-sourcepos=\"283:1-283:15\"\u003eではでは。\u003c/p\u003e\n","body":"# コードレビューで普段意識していること、してもらっていること\n\n## はじめに\nこんにちは。\n\nこの記事は [Spring Advent Calendar 2022](https://qiita.com/advent-calendar/2022/spring) の 19 日目の記事です。\n\n本記事では僕が普段レビュワーとして、コードレビューで気をつけていること。またレビュワーをするようになった経験からレビュイーとしてPullRequestを作る際に気をつけていること、PullRequestを作ってもらう際にお願いしていること、を書きます。\n\n\n直近では半年で650個ぐらいのPRを見ていて、エンジニアリングをする時間の中でコードレビューの比率が上がってきたこともあり、その中で色々思ったり工夫した点を書いていきます。\n\n\nなお普段はspring-bootで構成されるアプリケーションのソースを読むことが大半のため、spring-bootに焦点があたった内容に少し偏るかもしれません。悪しからず。\n\n\n\n## 大前提\n\nこれはレビュワーに立つ経験が少ないときは気づいていなかったことですが、コードは書く量より読む量の方が多いのである............。\n\n\n\n## PullRequest (PR) について\n\n### できるだけdiffの小さいPRだと嬉しい\n大前提ですが、小さいPRほど嬉しいです。差分を小さいほどレビュワーのコストは小さく、またスピード感のあるレビューができるため早くマージもでき、レビュワーレビュイーお互いにとってwin-winです。\n\nこれはコードレビューする側、される側両方の努力が必要です。\n\nレビューする側は、そもそもの実装の単位を小さくしてもらうために、チケットを細かく分割して誘導や、あらかじめ実装前に実装者とコミュニケーションをとり、認識を合わせましょう。レビュワーが受け身で待ってPRが大きくて見れない、というのは少しディスコミュニケーションな感じがします。\n\n例. apiの実装の際、リポジトリ層やコントローラーでPRを分けて出してもらう。など。\n\nまたレビューされる側も、実装途中でdiffを確認し、あまりにも大きいPRになりそうなら途中でPRを一度出してマージするなど、粒度を意識した実装をしましょう。\n\n### 大きいPRはダメ？\nそんなことはないと思っています。意味のあるまとまりや、機械的な変更なら、diffが大きくなることは良いと思っています。\n\n例. パッケージ(ディレクトリ)名の変更で、配下のファイル全てに変更が入るなど。\n\nまた、アトミックに変更しないとテストが通らない大きなPRというのも場面としては存在するとは思います。必要な範囲の中でできる限りPRを小さくする意識を全員で持つのが大事かなと思います。\n\n### テストを通しながら小さな差分を積み重ねる\nたまに、PRを作ったもののテストが通せないという人がいます。そういう事態を防ぐために、コミット単位ぐらいで良いので、こまめにテストを回しましょう。常にテストが通る単位でコミットを重ねると、どの履歴に戻ってもgreenな状態で修正が楽だと思います。またそういう所作をしてなかった時のトラブルシュートとしては、まずテストが通らないことを相談する前に、派生元のコミットまで戻ってテストを動かしてみましょう。自分のコミットの追加によりテストが落ちたのか、そうでないのかの切り分けをするのが良いです。(すぐ有識者に聞いてしまう方が良い場面もあるとは思うので、質問がダメというわけではないのが難しいところ...)\n\n\n### でも実装始めたらdiffは大きくなるものだし、一気に実装した方が効率良いのでは？\n実装を一足飛びにやるのは効率が良いとは自分も思います。ただそれを1つのブランチでまとめてしまうのは話が別かなと感じます。\n\n例えばAPIを1本、ルーティング部分からdb側の処理まで書くような場合に、一旦動くところまで書いてしまうのはアリだと思います。ただその後、意味のある単位でコミットを分けたり、ブランチを分けてPRを出すことが必要で、まず依存の深い方やコアな部分からPRをマージしていくことでコードレビューも局所に集中でき、また粒度を意識した実装にもつながるかなと思います。\n\n40ファイルのchangeとかで、ロジック沢山だと、レビューできないことはないものの修正も無限に発生し、コメントの往復も1週間以上続いたりとレビュワーレビュイーともに疲弊してしまうみたいなパターンをよくみます。\n\ndiffがどれぐらいだと多いか、というのは主観ですが、自分は10file changeを超えるようなPRはほとんど出すことがないかなというような所感です。\n\n\n### 大枠を先にコミットして、骨格を作る意識を持つ\nレビューやPRというよりは実装の話になりますが、IFだけを先に合わせたスケルトンを作ろうという話です。\n\n実際10file以下のPRのみで構成しようと思うと少し難しさがあると思います。なのでまずは骨子だけで良いので、サービスクラスのガワや、モデリングのガワだけを作っていき、実装上での各クラスのリレーションや、メソッドのIFだけを先に確定させていくのが大事です。\n極論この時点では戻り値は全部nullなどの適当なもので良いので、IFだけ合わせて行って残りをTODOで丸投げしていくのが大事です。こうすることで、常に小さいPRの集合で実装を組んでいくことができる、かつ大枠も先に見えるので、ブレが少ないものが出来上がります。\n\nDDDとかだとドメインモデルから構築するのが一般的かなと思いますが、その過程の中でもモデリングのリレーションだけ先に決めるようなイメージですね。\n\n\n\n### 実装は果たして、簡単なタスクだろうか？\n\n\n上記を踏まえて、実装は果たして簡単なものでしょうか？\n1つのDBテーブルをCRUDするAPIをレビュワーのことも気にせず実装するだけなら、そのクオリティはさておき難易度は高くないかもしれません。\n\nただ、常に小さいPRになるように心がけ、また先に骨子を作るような、大枠をイメージした上でパーツを組んでいくような実装をすることは果たして簡単でしょうか...？\n\n\n結論としては「そんなことはない」です。\n\n\nアプリアーキテクチャと呼ばれるような、実装レベルの設計は実装者もレビュワーも理解していないとなかなか難しいところがあります。\n\n意図的に小さいPRを作る、というのもアプリアーキテクチャの理解度が低い場合は少しハードルが高いでしょう。\n\nそんなことを気にするなら動くものをさっさと作って頑張ってレビューしてもらう方が良い、という反論もあるかもしれません。\n\nこれはプロジェクトなど業務においては正しい場面もあるかもしれないですが、純粋に質を高めるという観点では少し辛いところではあります。\n\n大きいPR、本当に丁寧にレビューできますか？\n\nまた、そういうPRを出してもいいというチームは、レビュワーの方は本当にちゃんと見てくれていますでしょうか？\n\n\nチーム文化的なところも大きいので一概にgood/badは言えないですが、コードの品質に重きをどこまで置くか次第なのかなあと思います。\n\n\n\nこれは設計などが上流の過程と称される一方で、実装が下流と称されてしまう部分に対しての警鐘の意味も込めて、実装は難しいという話をしたかった感じです。\n\n\nちなみに、一連の流れ全部を書いてもらわないと部分的な処理だけではレビューできない、という意見もあるのかなと思うのですが、その場合はそもそもどういうPRが来るかレビューする側もちゃんと想定できていない、というのが一つ原因にあるのかなと思います。\n\n実装自体はクリエイティブな部分もあるので、完全にオーケストレーションするのは難しいと思いますが、一方でPRで初めて実装者側の意図や思想を知る、というのは手戻りが多くなるケースが多いと思うので、先にお互い実装するものをイメージ合わせた上でPRのフェーズに入る、というのが大事かなと思います。\n\n\n### レビュイーは説明を書きましょう\nこれはまあ作法的な部分もあるんですが、作ったPRに対して実装者側の説明が多いとレビュワーとしては嬉しいという感じです。\n例えば\n  - 設計書のドキュメントを記載する\n  - DBなどが絡む場合は、ddlやスキーマのドキュメントを記載する\n  - また、会社や業務などの場合は、仕様書などのドキュメントを記載する\n  - 何かしらの技術調査の場合は、調査した資料を記載する\n\nなど。まあ関連する情報は全部載せてほしいって感じですね。実装の際参考にした記事などもあると嬉しいですね。\n\nまた、実装に対して、セルフコメントをつけるは結構有用かなと思います。実装に残すほどのコメントではないときに、PRで自分でインラインコメントをつける感じですね。\n\n後はセルフレビューを行うことも大事かなと思います。PRを作った後すぐコードレビュー依頼を出すのではなく、一度自分もレビュワー目線になって自分のPRを見てみるという感じです。\n\n些細なtypoや、改行忘れなど非本質なミスはレビューの中でノイズになってしまうので、予め排除できると良いですね。\n\n## コードレビューについて\n\n### 機械的なコメントを残す\nよくあるやつですが [nits], [must] , [ask] とかをコメントのprefixとして徹底すると意図が伝わりやすくて良いと思います。\n\n- https://qiita.com/kamihork/items/be0d7bdad8ae5a8082fb\n\n### 作法レビュー\nコードレビューは自分の中で4種類ぐらいはタイプがあるかなと思っています。\nここでは適当に「作法レビュー」「頑張りレビュー」「ドメインレビュー」「スキルフルレビュー」と名前をつけてあげていきます。(他にも色々コンテキストがあるような気がします、4つに分類される、って言いたいわけではなくパッと思いつくのが4種類あったって感じです)\n\n\nここでは「作法レビュー」について。\n\n作法というと気難しさがありますが、いわゆる機械的に見れるやつですね。レビュワーとしても楽なので初手これを見ます。非本質なことが多いですが。\n\n  - コーディングルールを守れているか？\n    - これはチーム特有のルールがある場合に守れているか、という感じです\n  - フォーマッタ違反していないか\n    - これはciで見るべきなのでレビューで見てたらおかしいというのもあります\n  - typoしていないかどうか\n    - IDEで見ると大体わかる\n  - `No Newline at End of File` 。改行忘れ。\n    - editorconfigを入れたりエディタでなんとかしたりと仕組みで防げるやつですね\n    - https://qiita.com/naru0504/items/82f09881abaf3f4dc171\n  - snake_case などの文体\n    - クラス名はパスカルケース、変数名はキャメルケース、など。なんでもいいのでそのリポジトリ内で秩序を持って統一できてるのが大事だと思います。名前は疎かにしてはいけないので地味なようでかなり大事\n    - staticなものや環境変数は大文字スネークケースにする、など (goだとそんなこともないですが...)\n  - コピペミス\n    - yamlとかでよくあるやつですね。開発環境用のものをそのままコピペして、本番用にしたりして、微妙に修正が漏れてたりとか。\n    - 「devのファイルとの差分はここです」みたいなものをインラインコメントで残していくのが所作としてはおすすめ。\n  - 使ってない変数を消す\n    - エディタとか、コンパイラが叱ってくれるもののレビューする際にも機械的に見れるはずです\n\nなど。\nまだまだあると思いますが、いわゆるある程度答えが決まってて、明らかなミスっぽいものを探すのが作法レビューという感じです。\n\nちなみにこれはそこまでスキルを問わないと思うので、基本的にはレビュイー側も自分で極力見つけて、このやりとりは発生しないようにできるのが望ましいかなと思います。\n本質のレビューから入れるのが理想的ですね。\n\n### 頑張りレビュー\n「頑張りレビュー」について。\nこれは少し定義がふわっとしてるんですが、頑張って行うレビューにあたります。\n\n- 例. テストの実装の際に、テスト用のsqlファイルが間違っていないかどうか\n- 例. テストの期待値が決まっているケースに対して、意図通りのassertが行われているかどうか\n- 例. フロントでのエラー文言を実装する際に、仕様書通りに一言一句正しいかどうか。\n\nなど。\n少し表現が難しいのですが、ちゃんと見る必要があるものの大変だったり、スルーしてしまう人がたまにいるようなレビューという感じです。\n\n自分の経験の中だと、例えば一気通貫したintegration-testなどを書くと、inputとoutputが両方複雑になることが多いので、「頑張りレビュー」がよく発生します。\n\n### ドメインレビュー\n「ドメインレビュー」はまあその名の通りで、ドメイン知識をフル活用するレビューです。\n\n- 業務側の仕様書通りになっているか\n  - これはいわゆる開発者側の設計書通りかどうか、ではなく、業務側の仕様書や企画書通りの動きになるか、という意味合いです。\n- 開発者側の設計通りになっているかどうか\n  - 開発者の設計通りになっているかももちろん含まれます。実装側だけ眺めてると設計書通りになっていなかったり処理が漏れていることに気づかなかったりします\n- 正常形やエラーのハンドリングは適切か\n  - ドメインと関係ないようで、かなり大事です。特にマイクロサービス文脈だと、ここでこのエラーが起きた場合に、どこまで影響があるんだっけ？とか伝播の度合いを意識したりするので、ドメイン知識がかなり必要になってきます。\n- データの値域について\n  - 自チームで定義しているドメインデータの場合は実装にある値が全てですが、例えば他領域のデータを参照する場合に、とりうる値が想定している範囲で収まっているか、を確認したりと。\n  - 例. `type` というデータ は `hoge` か `fuga` かの2種類の値を取るつもりの実装をしていたが、実は`piyo` も取りうるので考慮しましょう、みたいな。\n\n\n### スキルフルレビュー\n「スキルフルレビュー」雑多な言い方ですが、言語特有の知識だったり、セキュリティやネットワークなどCSそのものの知識が必要なレビューです。\n\n僕も全然知識ないので悩ましいところですが、いわゆる一番本質的なレビューかなと思います。\n一番と言いましたが、業務だとドメインレビューの方が大事な場面も多いかもです。(何が本質かは場面によって変わる)\n\n- (java特有ですが) 不要にnullableにしていないか \n  - lombokで@NonNullをつけたり、kotlinだと意味のないoptionalはやめよう、という感じ\n- (java特有ですが) finalをつけているかどうか\n  - immutableを徹底しているかどうかですね\n- (java特有ですが) streamを適切に使えているか\n  - for文でガチャガチャするよりはstreamで処理する方がimmutableに自然に扱えてベターなことが多いです\n  - javaじゃないにしても、immutableにlistを扱うという観点では同じですね\n- 計算量・パフォーマンスは適切か\n  - 競技プログラミング的な計算量がまず挙げられますね\n  - また、実際はweb文脈だと計算量というよりはパフォーマンスが大事なので、sqlの発行回数とか、外部apiのリクエスト回数を見たりすることも多いと思います\n  - dbとのコネクションを使う処理は、sqlではO(1)相当のようなものでもアプリケーション目線では定数倍がちょっと重い、みたいな感覚でいるとokな感じがします。ケースバイケースですが。\n  - バルクで処理できないか、など\n  - ロックまわりは変ではないか、とかも\n    - これはレビューだけで見るの難しいときもあります\n- DRY原則を守れているか\n  - 論争になりがちなので断定的には言いづらいですが、まあdryにする必要がある、かつ可能なところはやりましょうと。\n  - なんでもdryにした方がいいって話をしたいのではなく、コード全体を把握したレビューをしましょう、の意味合いです\n  - 結局コード内で共通化するべきか否か、というのはソース全体をある程度把握していないと判断がつきづらい\n- アプリアーキテクチャの設計通りになっているか\n  - ディレクトリ構成や、モジュールの依存関係、また実装されたものがレイヤー責務外れていないかなど(controllerからsql直接投げてないかとか)\n- モデリングが適切かどうか\n  - これがコードレビューの中でかなり大事なパートに感じます\n  - 例. あるデータとデータの関係が 1:1なのか、あるいは1:nなのか、またそれを的確に実装に落とし込めているか\n  - true/falseの2値で表現しようとしてるが、実は3値あるものなのでenumが適切ではないか\n  - 新しくステータスのような遷移が起きるデータを定義する際に、そのステータス達は排反な表現になっているかどうか\n  - などなど。モデリングもミスが大きな歪みを生むのでここを重点的にレビューするのが大事かなと思います\n- スレッドセーフかどうか\n  - (spring boot特有かもですが) diコンテナに乗るクラスに状態を持たせていないか、など\n    - こういうのはフレームワークと言語知識がないと見落とすので、難しいと感じます\n- 脆弱性がないかどうか\n  - これも大事です。重点的に見ます。(まあ脆弱性ちゃんとわかったら苦労しないので難しいところですが)\n  - 自由文字入力が、sqlに到達するかどうか\n    - 例えばソートしてレスポンス返すようなAPIで、asc/descをリクエストで指定するような仕様の場合にasc/descをリクエストで文字列でもらう想定でそのままsqlに使っている、みたいなパターンとかが挙げられます\n    - enumに直したり、エスケープしましょうね、という基本の話ではあります\n  - apiに認証・認可がかかっているかどうか\n    - 直叩きできるようになってるので危険、とか認証はされてるけど認可されてないからログインしたら誰でも人のリソースをみれる、とか。\n    - ブラウザ側だけ制御して守るのは意味ないってのが共通認識じゃない時がたまにある\n  - 個人情報を扱っていないか、扱っている場合マスキングしているか\n    - 会社のルールにもよるけど、識別子に対して生文で使っていいんだっけ？みたいな所作もレビューポイント\n\nなど。まだまだレビュー観点はありますが、とりあえず意識的に見るだけでもこれぐらいはあるなあと。\n\n## マインド\nここからはチーム開発におけるマインドの部分に焦点を当てます。\n\n### レビューできなくてもコードレビューに参加しよう\nコードレビューはテックリードや、ベテランの方がするものという認識の人が、一定数いたりしそう？自分は昔そうでした。\n\n結論これはよくなかったなと感じています。コードレビューはレビューする側だけでなく、レビューを学んだり、人が指摘されているのを見て自分に跳ね返す場でもあるなと。\n\nまず大前提として、コードレビューをしないとコードレビューはなかなかできるようになりません。実装と同じく、やらないと身につかないのです。\n\nまた、コードレビューの経験や、レビューしやすいPRへの意識を持つことで、実装をする際にもクオリティの向上や、気づきが生まれると思います。\n\nまたコードレビューは実装を題材にしたコミュニケーションの場でもあるので、わからない部分は質問をしたり、すごい実装を見たら褒めたりなど、活発に全員で行っていけるのが理想的かなと思います。関心がないと学ぶフェーズまで辿り着けないんですよね。(忙しかったり工数が厳しいと難しいこともありますが)\n\nあとコードレビューに参加することで、他の人が言われていた指摘を事前に防ぐことができるなどナレッジの横展開の側面もあります。\n\n\nあと一番大事なこととして、コードリーディングを増やすのが大事というのがあります。リポジトリ内で詳細を把握しているソースや大枠を把握している範囲を増やすことは、その後の実装の際にもかなり活きて来ます。似た処理があの辺にあったな、とか。パッケージ構成はここと同じ感じになるはず、とかそういう。\n\n関係ないリポジトリでも読めるならたくさんソースを読むのがおすすめです。PRという話に限らずソースリーディングはかなり大事だなと思います。読んだことない処理は書けなかったり、思いつかないことが多いです。\n\n### レビュワー側はマージまでの速度を高めよう\nレビュワーが基本的には立場的にパワーを持ってしまうことが多いと思うのですが、PRをマージするにはレビュイーの努力だけではなくレビュワーの努力もかなり大事と思います。レビュワーの動きこそが、PRをマージまで運ぶのです\n\n- 完璧を求めず、マージしちゃうのも大事\n  - 1つのPRでやりとりが多いと疲弊しますし、レビュイーのモチベーションも下がります\n  - 非本質だったりクリティカルではないミスなら、後でさらに修正を加えてもらう前提で一旦マージするのも大事だと思います\n  - いっぱいやり取りしてapproveも集まって来たのに、些細なミスを指摘されると辛い、みたいな。\n  - 大きいPRは特に、一旦マージすることを目標としないと差分が多くて辛い\n  - 微妙な修正はTODO送りにしたりバックログにどんどん入れていきましょう\n- そのためのリリースブランチ\n  - 一時的なマージを許容できるように、ブランチ戦略でカバーするのが良いかなと思います\n  - リリースブランチを育てていくみたいなのが、小さいPRをたくさん作るのと相性いいかなと思います\n    - 小さいPRを作る戦略は、テストはもちろん通る状態でマージしていくものの、アプリケーションとしては成り立っていない状態も多々あるので\n- マージのテンポは開発効率につながる\n  - PRを作ってからマージをするまでの速度がかなり大事かなと思います\n  - 早くマージしないと、他の人の作業がブランチへ入っていくので、ブランチの状態に変換が入ってしまい、レビュイー側の負担が増えてしまう\n  - 小さいPRを積み重ねることで、差分がすぐブランチへ吸収されていき、多人数開発にも強くなる\n  - レビュワーは早くPRを見ましょう\n    - チーム文化にもよりますが、レビュー依頼がきたら極力早くレビューをすること。レビュイー側の動きを止めないような意識が大事です。\n\n\n## さいごに\n以上、コードレビュー論でした。\nかなり長文になってしまいました。\n主観が強いので的外れな部分もあるかもしれないですが、テックリードをする立場の人や同じようなロールの方にとって参考になる部分があれば幸いです。\n\nではでは。\n","coediting":false,"comments_count":0,"created_at":"2022-12-19T06:19:20+09:00","group":null,"id":"e7bea1bd152c1fdaab8c","likes_count":19,"private":false,"reactions_count":0,"stocks_count":16,"tags":[{"name":"Java","versions":[]},{"name":"プログラミング","versions":[]},{"name":"SpringBoot","versions":[]},{"name":"コードレビュー","versions":[]}],"title":"コードレビューで普段意識していること、してもらっていること","updated_at":"2023-03-08T14:29:04+09:00","url":"https://qiita.com/ningenMe/items/e7bea1bd152c1fdaab8c","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":3540,"team_membership":null,"organization_url_name":null,"slide":false},

{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"バッチ処理の自動テストを書こう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%90%E3%83%83%E3%83%81%E5%87%A6%E7%90%86%E3%81%AE%E8%87%AA%E5%8B%95%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E6%9B%B8%E3%81%93%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eバッチ処理の自動テストを書こう\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\n\u003cp\u003eこんにちは。webエンジニアの \u003ca href=\"https://twitter.com/ningenMe\" rel=\"nofollow noopener\" target=\"_blank\"\u003eningenMe\u003c/a\u003e です。\u003cbr\u003e\u003cbr\u003e\nこの記事は \u003ca href=\"https://qiita.com/advent-calendar/2021/softwaretesting\"\u003eソフトウェアテスト Advent Calendar 2021\u003c/a\u003e の 21日目の記事です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"バッチ処理とは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%90%E3%83%83%E3%83%81%E5%87%A6%E7%90%86%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eバッチ処理とは\u003c/h2\u003e\n\n\u003cp\u003eバッチ処理の定義がちょっと曖昧なので、本文中におけるバッチ処理を定義しておきます。\u003cbr\u003e\u003cbr\u003e\nここでは あるデータソース \u003ccode\u003eA\u003c/code\u003e から データを取得し、なんらかの処理をした後、あるデータソース \u003ccode\u003eB\u003c/code\u003e に永続化するような作業、とします。\u003c/p\u003e\n\n\u003cp\u003eもちろんデータソースというのは、mysqlでもいいし、はたまた外部APIでもいいですし、s3などのオブジェクトストレージでも構いません。\u003cbr\u003e\u003cbr\u003e\nインプットとアウトプットが外部にあって、それをやりとりするイメージです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"前提\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%89%8D%E6%8F%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e前提\u003c/h2\u003e\n\n\u003cp\u003eここで実装に関しては spring-batch と呼ばれるフレームワークで実装されたバッチ処理に対するテストを想定します。\u003cbr\u003e\u003cbr\u003e\nテストのフレームワークは Junit5 です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"まず\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまず\u003c/h2\u003e\n\n\u003cp\u003eテストを書きましょう。\u003cbr\u003e\u003cbr\u003e\nテストのアドカレなのに何を言ってるんだと思われるかもですが、自分が見てきた限りだとバッチ処理に対してテストが薄かったり書かないみたいなチームや開発スタイルにしばしば遭遇します。\u003c/p\u003e\n\n\u003cp\u003eテストを書きましょう。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"integrationテストを書こう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#integration%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E6%9B%B8%E3%81%93%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eintegrationテストを書こう\u003c/h2\u003e\n\n\u003cp\u003eバッチ処理でよく見かけるのが、かなりの項目を結合テストで対処するパターンです。\u003cbr\u003e\u003cbr\u003e\nもちろん結合テスト自体は大事なのですが、ビジネスロジックの細かい挙動や、IOのエラー時の挙動など、ありうるパターンを全部手作業でやろうとするとかなり大変です。\u003cbr\u003e\u003cbr\u003e\nましてやコード凍結した後にバグが見つかったら修正が入って結合テストが全部やり直し、なんてこともしばしば......。\u003cbr\u003e\u003cbr\u003e\nなので、まずはソース内で完結させることができる部分だけでも極力自動テストを書いて、結合テストの負担を減らしましょう。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eintegrationテストで出来ることは極力、結合テストでやろうとしないこと\u003c/code\u003e です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"integrationテストって何\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#integration%E3%83%86%E3%82%B9%E3%83%88%E3%81%A3%E3%81%A6%E4%BD%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eintegrationテストって何？\u003c/h2\u003e\n\n\u003cp\u003eここではアプリケーションを一気通貫で動かす自動テストを指しています。1クラスだけなどの単体テストではなく、バッチの実行単位(あるいは内部の1step)ごとのテストをイメージします。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"結合じゃないとテストできない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E5%90%88%E3%81%98%E3%82%83%E3%81%AA%E3%81%84%E3%81%A8%E3%83%86%E3%82%B9%E3%83%88%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結合じゃないとテストできない？\u003c/h2\u003e\n\n\u003cp\u003eバッチでよく言われるのが、この話なのかなと思ったりしています。 \u003cbr\u003e\nDBを用意できないとか、データを用意できないとか。そういう理由で開発環境で手動テストをたくさんやるみたいな流れが生まれたり。\u003c/p\u003e\n\n\u003cp\u003eこれは本当に良くない。\u003c/p\u003e\n\n\u003cp\u003e近年だと一般的なdbとかが大体dockerで手軽に立てることができます。 \u003cbr\u003e\napiに関してもnginxなどをdockerで立ててしまえば、mockとしては十分です。\u003cbr\u003e\nなのでテストの実行のたびにスタンドアローンなテスト環境(DBや外部のAPIのmock)を整えることができるはずです。\u003c/p\u003e\n\n\u003cp\u003e開発環境に立ってるdbなどを前提としたテストは、テストが状態を持ってしまうことや、冪等性、並列性を考えても本当によくないです。\u003cbr\u003e\u003cbr\u003e\nスタンドアローンなテスト環境を作り、結合テストをやめて極力integrationテストを書きましょう。\u003c/p\u003e\n\n\u003cp\u003e例として spring-bootでのスタンドアローンなテストの作り方を載せておきます。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/ningenMe/items/045620965bf73555d0a7\" id=\"reference-6aaee48b074b01a7278f\"\u003espring-boot + dbunit + dockerでdbのテストを行う\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"状態のassert\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%8A%B6%E6%85%8B%E3%81%AEassert\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e状態のassert\u003c/h2\u003e\n\n\u003cp\u003eテストって基本的には、なんらかのインプットに対して、適切なアウトプットになっているかを確認する部分が大きいと思います。\u003cbr\u003e\u003cbr\u003e\nバッチ処理のテストでも、なんらかのデータソースをインプットとし、最終的に永続化されるデータに対して assert が行われるべきです。\u003c/p\u003e\n\n\u003cp\u003edbunitなどのツールを用いてdbのテーブルをassertしたりしましょう。\u003cbr\u003e\n静的なファイルとのデータの突合を意識するべきです。\u003cbr\u003e\u003cbr\u003e\nなんとなく正常終了したらok、ではダメです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"冪等性\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%86%AA%E7%AD%89%E6%80%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e冪等性\u003c/h2\u003e\n\n\u003cp\u003eバッチ処理において、冪等性はかなり大事です。\u003cbr\u003e\nもちろん結合テストでも確認したいですが、これこそ自動テストでもある程度確認できるので、自動化しましょう。\u003c/p\u003e\n\n\u003cp\u003e以下にソースのイメージを載せます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etest\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//inputを準備する\u003c/span\u003e\n        \u003cspan class=\"n\"\u003esetupInput\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\n        \u003cspan class=\"c1\"\u003e//バッチを動かす\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eexecBatch\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//outputをassertする\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eassertOutput\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\n        \u003cspan class=\"c1\"\u003e//冪等確認のために再度バッチを動かす\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eexecBatch\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//outputをassertする\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eassertOutput\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eおそらくある程度ソースが書けていれば、上記のように手軽に確認できるはずなのでintegrationテストを自動化する際は入れたほうが安心感が増します。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"コードフリーズ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%BC%E3%83%89%E3%83%95%E3%83%AA%E3%83%BC%E3%82%BA\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコードフリーズ\u003c/h2\u003e\n\n\u003cp\u003eリリースが近づいたら、コミットをこれ以上加えない、という日付を設けてコードをフリーズさせましょう。 \u003c/p\u003e\n\n\u003cp\u003e上記でも話しましたが、開発途中で結合テストをするのは良くないです。 \u003cbr\u003e\nもちろん結合テストでバグが見つかって修正コミットをするのは普通のことです。 \u003cbr\u003e\nただその時は、手動でやってるような結合テストは全部やり直すべきです。 \u003cbr\u003e\n最終的なソースの状態に対して、結合テストが行われるべきです。\u003c/p\u003e\n\n\u003cp\u003e実際のところ、コストとの兼ね合いもありなかなか上記が守られないことが多いです。 \u003cbr\u003e\nなので1ケースでも多く自動テストに組み込み、結合テストを減らし、CIが毎回チェックしてくれるような仕組みを作りましょう。\u003cbr\u003e\u003cbr\u003e\n人間は疲れてくるとテストしなくなります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"個人的な話\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%80%8B%E4%BA%BA%E7%9A%84%E3%81%AA%E8%A9%B1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e個人的な話\u003c/h2\u003e\n\n\u003cp\u003e自分の業務では、最初は手動の結合テストが多め、自動のintegrationテストはほぼない状態でプロジェクトを進めていました。\u003cbr\u003e\nその時はバグがかなり多く出たり、後から改修が増えた結果、工数も大きくなりました。\u003c/p\u003e\n\n\u003cp\u003e途中でプロセス改善を行い、\u003cbr\u003e\n手動の結合テストを少なく、自動のintegrationテストを多くしたところかなりバグが少なくなり、品質が大きく上がりました。\u003cbr\u003e\nまた結果的に工数も少なくなりました。\u003c/p\u003e\n\n\u003cp\u003eやっぱり自動テストに寄せる方が、全体としては品質も工数も担保されると思います。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h2\u003e\n\n\u003cp\u003e具体的なテクニックというよりは、プロセス改善に近い気はします。\u003cbr\u003e\u003cbr\u003e\nJavaに関わらず、どの言語で書くにしてもある程度意識することは同じだと思います。\u003c/p\u003e\n\n\u003cp\u003eチーム内で誰かが(あるいは自分が)手作業でたくさんテストしてたら違和感を持ちましょう！\u003cbr\u003e\n快適な自動テストライフを。\u003c/p\u003e\n\n\u003cp\u003eではでは。\u003c/p\u003e\n","body":"# バッチ処理の自動テストを書こう\n\n\n## はじめに\nこんにちは。webエンジニアの [ningenMe](https://twitter.com/ningenMe) です。  \nこの記事は [ソフトウェアテスト Advent Calendar 2021](https://qiita.com/advent-calendar/2021/softwaretesting) の 21日目の記事です。\n\n\n## バッチ処理とは\nバッチ処理の定義がちょっと曖昧なので、本文中におけるバッチ処理を定義しておきます。  \nここでは あるデータソース `A` から データを取得し、なんらかの処理をした後、あるデータソース `B` に永続化するような作業、とします。\n\nもちろんデータソースというのは、mysqlでもいいし、はたまた外部APIでもいいですし、s3などのオブジェクトストレージでも構いません。  \nインプットとアウトプットが外部にあって、それをやりとりするイメージです。\n\n## 前提\nここで実装に関しては spring-batch と呼ばれるフレームワークで実装されたバッチ処理に対するテストを想定します。  \nテストのフレームワークは Junit5 です。\n\n## まず\nテストを書きましょう。  \nテストのアドカレなのに何を言ってるんだと思われるかもですが、自分が見てきた限りだとバッチ処理に対してテストが薄かったり書かないみたいなチームや開発スタイルにしばしば遭遇します。\n\nテストを書きましょう。\n\n## integrationテストを書こう\nバッチ処理でよく見かけるのが、かなりの項目を結合テストで対処するパターンです。  \nもちろん結合テスト自体は大事なのですが、ビジネスロジックの細かい挙動や、IOのエラー時の挙動など、ありうるパターンを全部手作業でやろうとするとかなり大変です。  \nましてやコード凍結した後にバグが見つかったら修正が入って結合テストが全部やり直し、なんてこともしばしば......。  \nなので、まずはソース内で完結させることができる部分だけでも極力自動テストを書いて、結合テストの負担を減らしましょう。\n\n`integrationテストで出来ることは極力、結合テストでやろうとしないこと` です。\n\n## integrationテストって何？\nここではアプリケーションを一気通貫で動かす自動テストを指しています。1クラスだけなどの単体テストではなく、バッチの実行単位(あるいは内部の1step)ごとのテストをイメージします。\n\n## 結合じゃないとテストできない？\nバッチでよく言われるのが、この話なのかなと思ったりしています。 \nDBを用意できないとか、データを用意できないとか。そういう理由で開発環境で手動テストをたくさんやるみたいな流れが生まれたり。\n\nこれは本当に良くない。\n\n近年だと一般的なdbとかが大体dockerで手軽に立てることができます。 \napiに関してもnginxなどをdockerで立ててしまえば、mockとしては十分です。\nなのでテストの実行のたびにスタンドアローンなテスト環境(DBや外部のAPIのmock)を整えることができるはずです。\n\n開発環境に立ってるdbなどを前提としたテストは、テストが状態を持ってしまうことや、冪等性、並列性を考えても本当によくないです。  \nスタンドアローンなテスト環境を作り、結合テストをやめて極力integrationテストを書きましょう。\n\n\n\n例として spring-bootでのスタンドアローンなテストの作り方を載せておきます。\n\n- [spring-boot + dbunit + dockerでdbのテストを行う](https://qiita.com/ningenMe/items/045620965bf73555d0a7)\n\n## 状態のassert\nテストって基本的には、なんらかのインプットに対して、適切なアウトプットになっているかを確認する部分が大きいと思います。  \nバッチ処理のテストでも、なんらかのデータソースをインプットとし、最終的に永続化されるデータに対して assert が行われるべきです。\n\n\ndbunitなどのツールを用いてdbのテーブルをassertしたりしましょう。\n静的なファイルとのデータの突合を意識するべきです。  \nなんとなく正常終了したらok、ではダメです。\n\n\n## 冪等性\nバッチ処理において、冪等性はかなり大事です。\nもちろん結合テストでも確認したいですが、これこそ自動テストでもある程度確認できるので、自動化しましょう。\n\n以下にソースのイメージを載せます。\n\n```java\n\nvoid test() {\n        //inputを準備する\n        setupInput()\n\n        //バッチを動かす\n        execBatch()\n        //outputをassertする\n        assertOutput()\n\n        //冪等確認のために再度バッチを動かす\n        execBatch()\n        //outputをassertする\n        assertOutput()\n        }\n\n```\nおそらくある程度ソースが書けていれば、上記のように手軽に確認できるはずなのでintegrationテストを自動化する際は入れたほうが安心感が増します。\n\n## コードフリーズ\nリリースが近づいたら、コミットをこれ以上加えない、という日付を設けてコードをフリーズさせましょう。 \n\n上記でも話しましたが、開発途中で結合テストをするのは良くないです。 \nもちろん結合テストでバグが見つかって修正コミットをするのは普通のことです。 \nただその時は、手動でやってるような結合テストは全部やり直すべきです。 \n最終的なソースの状態に対して、結合テストが行われるべきです。\n\n実際のところ、コストとの兼ね合いもありなかなか上記が守られないことが多いです。 \nなので1ケースでも多く自動テストに組み込み、結合テストを減らし、CIが毎回チェックしてくれるような仕組みを作りましょう。  \n人間は疲れてくるとテストしなくなります。\n\n## 個人的な話\n自分の業務では、最初は手動の結合テストが多め、自動のintegrationテストはほぼない状態でプロジェクトを進めていました。\nその時はバグがかなり多く出たり、後から改修が増えた結果、工数も大きくなりました。\n\n途中でプロセス改善を行い、\n手動の結合テストを少なく、自動のintegrationテストを多くしたところかなりバグが少なくなり、品質が大きく上がりました。\nまた結果的に工数も少なくなりました。\n\n\nやっぱり自動テストに寄せる方が、全体としては品質も工数も担保されると思います。\n\n\n## さいごに\n具体的なテクニックというよりは、プロセス改善に近い気はします。  \nJavaに関わらず、どの言語で書くにしてもある程度意識することは同じだと思います。\n\nチーム内で誰かが(あるいは自分が)手作業でたくさんテストしてたら違和感を持ちましょう！\n快適な自動テストライフを。\n\nではでは。\n","coediting":false,"comments_count":0,"created_at":"2021-12-21T02:11:44+09:00","group":null,"id":"007ebae6d671dc2145a2","likes_count":2,"private":false,"reactions_count":0,"stocks_count":5,"tags":[{"name":"テスト","versions":[]},{"name":"CI","versions":[]},{"name":"Docker","versions":[]},{"name":"ソフトウェアテスト","versions":[]},{"name":"バッチ処理","versions":[]}],"title":"バッチ処理の自動テストを書こう","updated_at":"2021-12-21T02:14:29+09:00","url":"https://qiita.com/ningenMe/items/007ebae6d671dc2145a2","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":6049,"team_membership":null,"organization_url_name":null,"slide":false},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"terraform-運用失敗談\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#terraform-%E9%81%8B%E7%94%A8%E5%A4%B1%E6%95%97%E8%AB%87\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eterraform 運用失敗談\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\n\u003cp\u003eこんにちは。webエンジニアの \u003ca href=\"https://twitter.com/ningenMe\" rel=\"nofollow noopener\" target=\"_blank\"\u003eningenMe\u003c/a\u003e です。\u003cbr\u003e\u003cbr\u003e\nこの記事は \u003ca href=\"https://qiita.com/advent-calendar/2021/terraform\"\u003eterraform Advent Calendar 2021\u003c/a\u003e の 9日目の記事です。\u003c/p\u003e\n\n\u003cp\u003eterraformの良い使い方の話はたくさん記事があると思ったので、今日は \u003ccode\u003e良くない\u003c/code\u003e 使い方に焦点を当てていきます。\u003cbr\u003e\u003cbr\u003e\nterraformを実際に運用していて思ったバッドプラクティスを挙げていきます。\u003cbr\u003e\nバッドと勝手に表現している部分に気を悪くした方がいたらすみません。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"前提\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%89%8D%E6%8F%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e前提\u003c/h2\u003e\n\n\u003cp\u003eこの記事の本題ではないので是非とかは述べません。一応話する上での前提知識。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAWSリソースを terraform で扱う\u003c/li\u003e\n\u003cli\u003e開発環境はローカルからマージ前に apply をして良い\u003c/li\u003e\n\u003cli\u003e本番環境はマージ後に、github actions からのみ apply をして良い\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"パッケージ構成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E6%A7%8B%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eパッケージ構成\u003c/h2\u003e\n\n\u003cp\u003eこの記事の本題ではないので是非とかは述べません。一応話する上での前提知識。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"shell\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e./\n├── \u003cspan class=\"nb\"\u003eenv\u003c/span\u003e\n│   ├── hoge-component\n│   │   ├── develop \n│   │   │   └── main.tf\n│   │   └── production\n│   │       └── main.tf\n│   ├── fuga-component \n│   │   ├── develop \n│   │   │   └── main.tf\n│   │   └── production\n│   │       └── main.tf\n│   └── piyo-component\n│       ├── develop \n│       │   └── main.tf\n│       └── production\n│           └── main.tf\n├── base\n│   ├── hoge-component\n│   │   └── \u003cspan class=\"k\"\u003e*\u003c/span\u003e.tf\n│   ├── fuga-component \n│   │   └── \u003cspan class=\"k\"\u003e*\u003c/span\u003e.tf\n│   └── piyo-component\n│       └── \u003cspan class=\"k\"\u003e*\u003c/span\u003e.tf\n└── module\n    ├── ecs\n    ├── alb \n    ├── elasticache\n    └── etc..\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e複数コンポーネントが1リポジトリに相乗りした形になっている\n\n\u003cul\u003e\n\u003cli\u003etfstateが複数あるような感じ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eenv配下のmain文を切り替えて環境差分を作っている\u003c/li\u003e\n\u003cli\u003ebase配下でresourceを書いていく\u003c/li\u003e\n\u003cli\u003emodule配下は、各コンポーネントによらない基本的なものの雛形とかを var で渡せる形式で共有して置いている\u003c/li\u003e\n\u003cli\u003e複数コンポーネントは運用者が別なので、複数チームでモノレポを管理しているような状態\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"失敗その1-複数コンポーネント複数チームでモノレポ運用していること\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%B1%E6%95%97%E3%81%9D%E3%81%AE1-%E8%A4%87%E6%95%B0%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E8%A4%87%E6%95%B0%E3%83%81%E3%83%BC%E3%83%A0%E3%81%A7%E3%83%A2%E3%83%8E%E3%83%AC%E3%83%9D%E9%81%8B%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e失敗その1 複数コンポーネント(複数チーム)でモノレポ運用していること\u003c/h3\u003e\n\n\u003cp\u003eここはそもそも失敗と定義していいか怪しい。是非はあると思うし、モノレポで上手くいっているところもたくさんあると思う。\u003cbr\u003e\n辛い部分を挙げると\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eマージやapplyをする際に関わる人が多くなる\n\n\u003cul\u003e\n\u003cli\u003eコミュニケーションコストが大きくなる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e小さいPRでも、一応各コンポーネントのplanを全部見ておこうってなるのでコストが大きい\u003c/li\u003e\n\u003cli\u003emoduleに予想外のコミットが知らない間に積まれてて、自分のチームのコンポーネントにも影響が出ることがある\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eなどです。\u003cbr\u003e\nどれもプロセス改善でなんとか出来ないことはないですが、そもそもモノレポにしなければ考えることもないかなという感じです。\u003c/p\u003e\n\n\u003cp\u003e一応モノレポのメリットを挙げます\u003c/p\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"moduleの記述を共有して使いまわせる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#module%E3%81%AE%E8%A8%98%E8%BF%B0%E3%82%92%E5%85%B1%E6%9C%89%E3%81%97%E3%81%A6%E4%BD%BF%E3%81%84%E3%81%BE%E3%82%8F%E3%81%9B%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003emoduleの記述を共有して使いまわせる\u003c/h4\u003e\n\n\u003cp\u003eとは言ったものの、これに関しては terraform でdry原則とかをコンポーネント跨いでまで意識する必要ないかなというのが感想です。\u003cbr\u003e\u003cbr\u003e\n規模にもよりますが、別に各チームで同じmodule書いたとてそこまで不便なことはないという感じです。記述量も知れてますし。\u003cbr\u003e\u003cbr\u003e\n同じようなインフラになってほしい、というのはわかりますが、アプリケーションソースと違ってロジックを持つわけでもないので、共通化するメリット以上に影響範囲が大きいデメリットが上回るかなと。\u003c/p\u003e\n\n\u003cp\u003eあとmoduleを使い回す かつ リポジトリは分ける、をやるときに、moduleだけのリポジトリを1個構えて gitのサブモジュールにしてしまう、などがやり方として一つあると思います。\u003c/p\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"ciなどを各チームで作らなくて良くなるのでコスト削減できる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ci%E3%81%AA%E3%81%A9%E3%82%92%E5%90%84%E3%83%81%E3%83%BC%E3%83%A0%E3%81%A7%E4%BD%9C%E3%82%89%E3%81%AA%E3%81%8F%E3%81%A6%E8%89%AF%E3%81%8F%E3%81%AA%E3%82%8B%E3%81%AE%E3%81%A7%E3%82%B3%E3%82%B9%E3%83%88%E5%89%8A%E6%B8%9B%E3%81%A7%E3%81%8D%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eciなどを各チームで作らなくて良くなるので、コスト削減できる\u003c/h4\u003e\n\n\u003cp\u003eこれはまあマイクロサービスあるあるに近い話でもあるのでわかりやすい気もします。\u003cbr\u003e\u003cbr\u003e\nただterraformのciってpr時のfmtなどのバリデーション、plan, applyがあれば一旦は事足りるので、そこまでパイプライン大変ではないのですよね。\u003cbr\u003e\nこれのためにモノレポにするのもなんだかなあって感じです。\u003c/p\u003e\n\n\u003cp\u003e結論としては、モノレポが悪いっていうよりはmoduleをコンポーネント跨いでまで共有する必要ないよねって。そこさえ守れば複数チームでモノレポでも良い気がします(殆どモノレポの意味はないですが...)\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"失敗その2-count文を多用したこと\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%B1%E6%95%97%E3%81%9D%E3%81%AE2-count%E6%96%87%E3%82%92%E5%A4%9A%E7%94%A8%E3%81%97%E3%81%9F%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e失敗その2 count文を多用したこと\u003c/h3\u003e\n\n\u003cp\u003e一例を挙げると、下記のような感じです\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"terraform\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eresource\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"aws_cloudwatch_event_rule\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"event_rule\"\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ecount\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejobs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003ename\u003c/span\u003e                \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"event_rule_\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejobs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edescription\u003c/span\u003e         \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"job schedule\"\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eschedule_expression\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejobs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003ecron\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eis_enabled\u003c/span\u003e          \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e何かしらの list を渡して、それに対して countで for文を回すような表現ですね\u003c/p\u003e\n\n\u003cp\u003eここは単純に for-each で書きましょうって感じです。\u003cbr\u003e\ncountで書くと、リソースがindexで振られてしまうので、リストの順番を変えるだけで破壊的な差分が生まれます。\u003c/p\u003e\n\n\u003cp\u003e　　\u003cbr\u003e\n　　\u003c/p\u003e\n\n\u003cp\u003e「countは途中のリソースを消すとインデックスがずれるという致命的な問題を抱えている」\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/minamijoyo/items/3785cad0283e4eb5a188\" id=\"reference-8f73c3e7aba3e91cc9d8\"\u003eTerraformのfor_eachにmapのlistを渡してループしたい\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eの記事でしっかり書かれているので是非。\u003c/p\u003e\n\n\u003cp\u003e改善例を書いておくと下記のような感じです\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"terraform\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eresource\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"aws_cloudwatch_event_rule\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"event_rule\"\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003efor_each\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejob_map\u003c/span\u003e\n\n  \u003cspan class=\"nx\"\u003ename\u003c/span\u003e                \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"event_rule_\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eeach\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003edescription\u003c/span\u003e         \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"job schedule\"\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eschedule_expression\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eeach\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eis_enabled\u003c/span\u003e          \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e詳しい使い方とかは別記事参照\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/wim/articles/terraform_loop\" rel=\"nofollow noopener\" target=\"_blank\"\u003eTerraformでのloop処理の書き方（for, for_each, count)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e個人的には countはリソースを作るか作らないかのif文だけに徹底するのが良いかなと思います。\u003cbr\u003e\u003cbr\u003e\n開発環境だけあるリソースを作りたい、とかの場合ですね。\u003c/p\u003e\n\n\u003cp\u003e詳しい書き方とかは別記事参照\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/mia_0032/items/978449a06699ed1abe15\" id=\"reference-2f582319cb44b7203db8\"\u003eTerraformでcountをifのように使う\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"失敗その3-アプリケーションのリソースを可変長にしなかったこと\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%B1%E6%95%97%E3%81%9D%E3%81%AE3-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E5%8F%AF%E5%A4%89%E9%95%B7%E3%81%AB%E3%81%97%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e失敗その3 アプリケーションのリソースを可変長にしなかったこと\u003c/h3\u003e\n\n\u003cp\u003eこれ言い方がちょっと良くないですね。\u003cbr\u003e\u003cbr\u003e\nユースケースとしては、開発環境だけapiを複数立てて、面を増やしたいみたいなときです。\u003c/p\u003e\n\n\u003cp\u003e例えば下記のようなソースです\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"terraform\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eresource\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"aws_ecs_service\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"net_api_ecs_service\"\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ename\u003c/span\u003e            \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"net-api-ecs-service\"\u003c/span\u003e\n  \u003cspan class=\"cm\"\u003e/* 詳細は割愛 */\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e何げないecsのserviceのリソースなんですが、これを先程の for-eachも交えて\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"terraform\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eresource\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"aws_ecs_service\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"net_api_ecs_service\"\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003efor_each\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eservice_name\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ename\u003c/span\u003e            \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eeach\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ekey\u003c/span\u003e\n  \u003cspan class=\"cm\"\u003e/* 詳細は割愛 */\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように書いていた方が嬉しいことがある、って感じです。要素が1個だとしても。\u003cbr\u003e\u003cbr\u003e\nというのも開発の過程で、開発環境が2面必要になった時に、前者の書き方をしていると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"terraform\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eresource\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"aws_ecs_service\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"net_api_ecs_service\"\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ename\u003c/span\u003e            \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"net-api-ecs-service\"\u003c/span\u003e\n  \u003cspan class=\"cm\"\u003e/* 詳細は割愛 */\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eresource\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"aws_ecs_service\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"net_api_ecs_service2\"\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003ename\u003c/span\u003e            \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"net-api-ecs-service2\"\u003c/span\u003e\n  \u003cspan class=\"cm\"\u003e/* 詳細は割愛 */\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eみたいな感じで、ハードコーディングが生まれてしまうパターンがあります。\u003cbr\u003e\u003cbr\u003e\nもちろんちゃんとリファクタすればいいのですが、本番applyの影響とかも考えるとなかなか書き直すのは難しかったりします。\u003cbr\u003e\u003cbr\u003e\nなので最初から可変長にしておこうというのが主題です。\u003cbr\u003e\u003cbr\u003e\nもちろん全部のリソースでそんな先を見越した書き方をするのはナンセンスな気もしますが、ある程度ユースケースが見込めるものは綺麗に書いておけると良いのかなと思います。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"失敗その4-cicdからしかapplyを打てないリソースを作ったこと\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%B1%E6%95%97%E3%81%9D%E3%81%AE4-cicd%E3%81%8B%E3%82%89%E3%81%97%E3%81%8Bapply%E3%82%92%E6%89%93%E3%81%A6%E3%81%AA%E3%81%84%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e失敗その4 ci/cdからしかapplyを打てないリソースを作ったこと\u003c/h3\u003e\n\n\u003cp\u003eちょっと説明が難しいんですが、ciで使ってるサーバーにクレデンシャルとかが乗ってて、その情報を使ってciからしかapply出来ないようなリソースがあることを指します。\u003cbr\u003e\u003cbr\u003e\nつまりはローカルからapplyすると必ず変更が入ってしまうようなリソースですね。\u003c/p\u003e\n\n\u003cp\u003eこういうものが必要になってくること自体はokなんですが、tf-stateを分けておかないと毎回開発の過程で差分が出るので良くないなという話です。\u003cbr\u003e\n開発環境も本番環境も master(main) と差分0を常に保てるようなterraformにしないとね、って感じですね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h2\u003e\n\n\u003cp\u003e以上、失敗談でした、他にもterraformで日々失敗している気がするので、またエピソードが溜まったら続きを書こうかなと思います。\u003cbr\u003e\u003cbr\u003e\nこの記事を見て同じ失敗をする人が減れば幸いです。  \u003c/p\u003e\n\n\u003cp\u003eではでは。\u003c/p\u003e\n","body":"# terraform 運用失敗談\n\n\n## はじめに\nこんにちは。webエンジニアの [ningenMe](https://twitter.com/ningenMe) です。  \nこの記事は [terraform Advent Calendar 2021](https://qiita.com/advent-calendar/2021/terraform) の 9日目の記事です。\n\nterraformの良い使い方の話はたくさん記事があると思ったので、今日は `良くない` 使い方に焦点を当てていきます。  \nterraformを実際に運用していて思ったバッドプラクティスを挙げていきます。\nバッドと勝手に表現している部分に気を悪くした方がいたらすみません。\n\n## 前提\nこの記事の本題ではないので是非とかは述べません。一応話する上での前提知識。\n\n- AWSリソースを terraform で扱う\n- 開発環境はローカルからマージ前に apply をして良い\n- 本番環境はマージ後に、github actions からのみ apply をして良い\n\n## パッケージ構成\nこの記事の本題ではないので是非とかは述べません。一応話する上での前提知識。\n\n```shell\n./\n├── env\n│   ├── hoge-component\n│   │   ├── develop \n│   │   │   └── main.tf\n│   │   └── production\n│   │       └── main.tf\n│   ├── fuga-component \n│   │   ├── develop \n│   │   │   └── main.tf\n│   │   └── production\n│   │       └── main.tf\n│   └── piyo-component\n│       ├── develop \n│       │   └── main.tf\n│       └── production\n│           └── main.tf\n├── base\n│   ├── hoge-component\n│   │   └── *.tf\n│   ├── fuga-component \n│   │   └── *.tf\n│   └── piyo-component\n│       └── *.tf\n└── module\n    ├── ecs\n    ├── alb \n    ├── elasticache\n    └── etc..\n```\n\n- 複数コンポーネントが1リポジトリに相乗りした形になっている\n  - tfstateが複数あるような感じ\n- env配下のmain文を切り替えて環境差分を作っている\n- base配下でresourceを書いていく\n- module配下は、各コンポーネントによらない基本的なものの雛形とかを var で渡せる形式で共有して置いている\n- 複数コンポーネントは運用者が別なので、複数チームでモノレポを管理しているような状態\n\n\n### 失敗その1 複数コンポーネント(複数チーム)でモノレポ運用していること\nここはそもそも失敗と定義していいか怪しい。是非はあると思うし、モノレポで上手くいっているところもたくさんあると思う。\n辛い部分を挙げると\n\n- マージやapplyをする際に関わる人が多くなる\n  - コミュニケーションコストが大きくなる\n- 小さいPRでも、一応各コンポーネントのplanを全部見ておこうってなるのでコストが大きい\n- moduleに予想外のコミットが知らない間に積まれてて、自分のチームのコンポーネントにも影響が出ることがある\n\nなどです。\nどれもプロセス改善でなんとか出来ないことはないですが、そもそもモノレポにしなければ考えることもないかなという感じです。\n\n一応モノレポのメリットを挙げます\n\n#### moduleの記述を共有して使いまわせる\n\nとは言ったものの、これに関しては terraform でdry原則とかをコンポーネント跨いでまで意識する必要ないかなというのが感想です。  \n規模にもよりますが、別に各チームで同じmodule書いたとてそこまで不便なことはないという感じです。記述量も知れてますし。  \n同じようなインフラになってほしい、というのはわかりますが、アプリケーションソースと違ってロジックを持つわけでもないので、共通化するメリット以上に影響範囲が大きいデメリットが上回るかなと。\n\nあとmoduleを使い回す かつ リポジトリは分ける、をやるときに、moduleだけのリポジトリを1個構えて gitのサブモジュールにしてしまう、などがやり方として一つあると思います。\n\n\n#### ciなどを各チームで作らなくて良くなるので、コスト削減できる\nこれはまあマイクロサービスあるあるに近い話でもあるのでわかりやすい気もします。  \nただterraformのciってpr時のfmtなどのバリデーション、plan, applyがあれば一旦は事足りるので、そこまでパイプライン大変ではないのですよね。\nこれのためにモノレポにするのもなんだかなあって感じです。\n\n結論としては、モノレポが悪いっていうよりはmoduleをコンポーネント跨いでまで共有する必要ないよねって。そこさえ守れば複数チームでモノレポでも良い気がします(殆どモノレポの意味はないですが...)\n\n### 失敗その2 count文を多用したこと\n一例を挙げると、下記のような感じです\n\n```terraform\nresource \"aws_cloudwatch_event_rule\" \"event_rule\" {\n  count = length(var.jobs)\n\n  name                = \"event_rule_${var.jobs[count.index].name}\"\n  description         = \"job schedule\"\n  schedule_expression = var.jobs[count.index].cron\n  is_enabled          = true\n}\n```\n何かしらの list を渡して、それに対して countで for文を回すような表現ですね\n\nここは単純に for-each で書きましょうって感じです。\ncountで書くと、リソースがindexで振られてしまうので、リストの順番を変えるだけで破壊的な差分が生まれます。\n\n\n　　\n　　\n\n\n「countは途中のリソースを消すとインデックスがずれるという致命的な問題を抱えている」\n\n- [Terraformのfor_eachにmapのlistを渡してループしたい](https://qiita.com/minamijoyo/items/3785cad0283e4eb5a188)\n\nの記事でしっかり書かれているので是非。\n\n\n改善例を書いておくと下記のような感じです\n\n```terraform\nresource \"aws_cloudwatch_event_rule\" \"event_rule\" {\n  for_each = var.job_map\n\n  name                = \"event_rule_${each.key}\"\n  description         = \"job schedule\"\n  schedule_expression = each.value\n  is_enabled          = true\n}\n```\n\n詳しい使い方とかは別記事参照\n\n- [Terraformでのloop処理の書き方（for, for_each, count)](https://zenn.dev/wim/articles/terraform_loop)\n\n\n\n個人的には countはリソースを作るか作らないかのif文だけに徹底するのが良いかなと思います。  \n開発環境だけあるリソースを作りたい、とかの場合ですね。\n\n\n\n詳しい書き方とかは別記事参照\n\n- [Terraformでcountをifのように使う](https://qiita.com/mia_0032/items/978449a06699ed1abe15)\n\n\n### 失敗その3 アプリケーションのリソースを可変長にしなかったこと\nこれ言い方がちょっと良くないですね。  \nユースケースとしては、開発環境だけapiを複数立てて、面を増やしたいみたいなときです。\n\n例えば下記のようなソースです\n\n```terraform\nresource \"aws_ecs_service\" \"net_api_ecs_service\" {\n  name            = \"net-api-ecs-service\"\n  /* 詳細は割愛 */\n}\n```\n何げないecsのserviceのリソースなんですが、これを先程の for-eachも交えて\n\n```terraform\nresource \"aws_ecs_service\" \"net_api_ecs_service\" {\n  for_each = var.service_name\n  name            = each.key\n  /* 詳細は割愛 */\n}\n```\nのように書いていた方が嬉しいことがある、って感じです。要素が1個だとしても。    \nというのも開発の過程で、開発環境が2面必要になった時に、前者の書き方をしていると\n\n```terraform\nresource \"aws_ecs_service\" \"net_api_ecs_service\" {\n  name            = \"net-api-ecs-service\"\n  /* 詳細は割愛 */\n}\nresource \"aws_ecs_service\" \"net_api_ecs_service2\" {\n  name            = \"net-api-ecs-service2\"\n  /* 詳細は割愛 */\n}\n```\nみたいな感じで、ハードコーディングが生まれてしまうパターンがあります。  \nもちろんちゃんとリファクタすればいいのですが、本番applyの影響とかも考えるとなかなか書き直すのは難しかったりします。  \nなので最初から可変長にしておこうというのが主題です。  \nもちろん全部のリソースでそんな先を見越した書き方をするのはナンセンスな気もしますが、ある程度ユースケースが見込めるものは綺麗に書いておけると良いのかなと思います。\n\n### 失敗その4 ci/cdからしかapplyを打てないリソースを作ったこと\nちょっと説明が難しいんですが、ciで使ってるサーバーにクレデンシャルとかが乗ってて、その情報を使ってciからしかapply出来ないようなリソースがあることを指します。  \nつまりはローカルからapplyすると必ず変更が入ってしまうようなリソースですね。\n\nこういうものが必要になってくること自体はokなんですが、tf-stateを分けておかないと毎回開発の過程で差分が出るので良くないなという話です。\n開発環境も本番環境も master(main) と差分0を常に保てるようなterraformにしないとね、って感じですね。\n\n## さいごに\n以上、失敗談でした、他にもterraformで日々失敗している気がするので、またエピソードが溜まったら続きを書こうかなと思います。  \nこの記事を見て同じ失敗をする人が減れば幸いです。  \n\nではでは。\n","coediting":false,"comments_count":0,"created_at":"2021-12-09T00:59:20+09:00","group":null,"id":"a467fd0dcb5205157cf0","likes_count":15,"private":false,"reactions_count":0,"stocks_count":4,"tags":[{"name":"Terraform","versions":[]},{"name":"マイクロサービス","versions":[]},{"name":"モノリス","versions":[]},{"name":"DRY原則","versions":[]}],"title":"terraform 運用失敗談","updated_at":"2021-12-09T00:59:20+09:00","url":"https://qiita.com/ningenMe/items/a467fd0dcb5205157cf0","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":2501,"team_membership":null,"organization_url_name":null,"slide":false},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"github-actionsを使って特定のディレクトリに差分があるときにテストを行う\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#github-actions%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E7%89%B9%E5%AE%9A%E3%81%AE%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AB%E5%B7%AE%E5%88%86%E3%81%8C%E3%81%82%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AB%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E8%A1%8C%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003egithub actionsを使って特定のディレクトリに差分があるときにテストを行う\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\n\u003cp\u003eこんにちは。webエンジニア社会人をしている \u003ca href=\"https://twitter.com/ningenMe\" rel=\"nofollow noopener\" target=\"_blank\"\u003eningenMe\u003c/a\u003e です。\u003c/p\u003e\n\n\u003cp\u003eタイトル通り、特定のディレクトリのみの差分を検知して、それに応じてciでテストを回します。\u003cbr\u003e\n下記のことを行います。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e指定したディレクトリに差分があるときにのみ、ciでテストを行う\u003c/li\u003e\n\u003cli\u003e逆に、指定されたディレクトリに差分がないときは、ciでテストをスキップする\u003c/li\u003e\n\u003cli\u003eciでテストをスキップしてもマージ可否には影響させないようにする\u003c/li\u003e\n\u003cli\u003egithub actionsで処理を行う\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eユースケースとしては、フロントとバックエンドが共存してるようなwebのモノレポを想定しています。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"github\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#github\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGitHub\u003c/h2\u003e\n\n\u003cp\u003e実際に動くソースはこちら\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ningenMe/github-actions-diff-test-sample\" rel=\"nofollow noopener\" target=\"_blank\"\u003eningenMe/github-actions-diff-test-sample\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e例として、ルートディレクトリに \u003ccode\u003e./frontend\u003c/code\u003e , \u003ccode\u003e./backend\u003c/code\u003e のディレクトリがある前提のリポジトリを考えます。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eci.yml\u003c/code\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eci\u003c/span\u003e\n\u003cspan class=\"na\"\u003eon\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003epull_request\u003c/span\u003e\n\u003cspan class=\"na\"\u003ejobs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003efrontend\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eubuntu-latest\u003c/span\u003e\n    \u003cspan class=\"na\"\u003esteps\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eactions/checkout@v2\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e./.github/workflows/composite/diff\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ediff\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ediff\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ewith\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003esubdir\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003efrontend\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eactions/setup-node@v2\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ewith\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003enode-version\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e14.x\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etest\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eif\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esteps.diff.outputs.diff-count \u0026gt; \u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eworking-directory\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e./frontend\u003c/span\u003e\n        \u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e|\u003c/span\u003e \n          \u003cspan class=\"s\"\u003eyarn install\u003c/span\u003e\n          \u003cspan class=\"s\"\u003eyarn test --watchAll=false\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebackend\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eubuntu-latest\u003c/span\u003e\n    \u003cspan class=\"na\"\u003esteps\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eactions/checkout@v2\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e./.github/workflows/composite/diff\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ediff\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ediff\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ewith\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003esubdir\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ebackend\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eactions/setup-java@v2\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ewith\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003ejava-version\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e11'\u003c/span\u003e\n          \u003cspan class=\"na\"\u003edistribution\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003eadopt'\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etest\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eif\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esteps.diff.outputs.diff-count \u0026gt; \u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eworking-directory\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e./backend\u003c/span\u003e\n        \u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003egradle clean test\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e共通処理はcompositeに切り出しています  \u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ecomposite/diff/action.yml\u003c/code\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ediff\u003c/span\u003e\n\u003cspan class=\"na\"\u003edescription\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ediff\u003c/span\u003e\n\u003cspan class=\"na\"\u003einputs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003esubdir\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003erequired\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"na\"\u003eoutputs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ediff-count\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ steps.diff.outputs.diff-count }}\u003c/span\u003e\n\u003cspan class=\"na\"\u003eruns\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eusing\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ecomposite\u003c/span\u003e\n  \u003cspan class=\"na\"\u003esteps\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ediff\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eenv\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eTARGET_BRANCH\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ github.base_ref }}\u003c/span\u003e\n      \u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e|\u003c/span\u003e\n        \u003cspan class=\"s\"\u003egit fetch origin ${TARGET_BRANCH}\u003c/span\u003e\n        \u003cspan class=\"s\"\u003ecount=`git diff origin/${TARGET_BRANCH} HEAD --name-only --relative=${{ inputs.subdir }} | wc -l`\u003c/span\u003e\n        \u003cspan class=\"s\"\u003eecho \"::set-output name=diff-count::$(echo $count)\"\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eshell\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ebash\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"github-actions上でどうなるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#github-actions%E4%B8%8A%E3%81%A7%E3%81%A9%E3%81%86%E3%81%AA%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003egithub actions上でどうなるか\u003c/h2\u003e\n\n\u003chr\u003e\n\n\u003cul\u003e\n\u003cli\u003ebackendにだけ差分があるとき\n\n\u003cul\u003e\n\u003cli\u003epull request: \u003ca href=\"https://github.com/ningenMe/github-actions-diff-test-sample/pull/2\" rel=\"nofollow noopener\" target=\"_blank\"\u003e#2\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003egithub actions: \u003ca href=\"https://github.com/ningenMe/github-actions-diff-test-sample/pull/2/checks\" rel=\"nofollow noopener\" target=\"_blank\"\u003echecks\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://camo.qiitausercontent.com/5c2c5baef73f50914dcdf8b4b2b68eea7a169b6b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3234363435342f64303165633339622d376636612d656431652d383061372d6166663933373862386366372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2Fd01ec39b-7f6a-ed1e-80a7-aff9378b8cf7.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=05deda421cb8af9cf006a2016195ed40\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/d01ec39b-7f6a-ed1e-80a7-aff9378b8cf7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2Fd01ec39b-7f6a-ed1e-80a7-aff9378b8cf7.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bfa586a4e556c1c06d5a73581085349a 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nbackendのみテストが走る。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cul\u003e\n\u003cli\u003efrontendにだけ差分があるとき\n\n\u003cul\u003e\n\u003cli\u003epull request: \u003ca href=\"https://github.com/ningenMe/github-actions-diff-test-sample/pull/3\" rel=\"nofollow noopener\" target=\"_blank\"\u003e#3\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003egithub actions: \u003ca href=\"https://github.com/ningenMe/github-actions-diff-test-sample/pull/3/checks\" rel=\"nofollow noopener\" target=\"_blank\"\u003echecks\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://camo.qiitausercontent.com/0c63872eabb48ce5b4ee6ffeb18b27734e2ed2d7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3234363435342f31393564343232312d323333362d316437362d363131392d6536336364386464346265322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2F195d4221-2336-1d76-6119-e63cd8dd4be2.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=c15ba7eff033b1b1afc36b3b21364799\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/195d4221-2336-1d76-6119-e63cd8dd4be2.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2F195d4221-2336-1d76-6119-e63cd8dd4be2.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=5749b11b9f7f3a21f4f435873c3176c3 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nfrontendのみテストが走る。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cul\u003e\n\u003cli\u003efrontend/backend両方に差分があるとき\n\n\u003cul\u003e\n\u003cli\u003epull request: \u003ca href=\"https://github.com/ningenMe/github-actions-diff-test-sample/pull/4\" rel=\"nofollow noopener\" target=\"_blank\"\u003e#4\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003egithub actions: \u003ca href=\"https://github.com/ningenMe/github-actions-diff-test-sample/pull/4/checks\" rel=\"nofollow noopener\" target=\"_blank\"\u003echecks\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://camo.qiitausercontent.com/d40536529e3f647102032d7785e9752b3af20284/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3234363435342f32346436303930612d313631362d383134352d636361652d6334303532333034636336372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2F24d6090a-1616-8145-ccae-c4052304cc67.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=49360e0ba1bb020f6492f88fa0ed193a\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/24d6090a-1616-8145-ccae-c4052304cc67.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2F24d6090a-1616-8145-ccae-c4052304cc67.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=b124839d031551753208bffb8a811740 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nfrontend/backend両方にテストが走る。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cul\u003e\n\u003cli\u003efrontend/backend両方に差分がないとき\n\n\u003cul\u003e\n\u003cli\u003epull request: \u003ca href=\"https://github.com/ningenMe/github-actions-diff-test-sample/pull/5\" rel=\"nofollow noopener\" target=\"_blank\"\u003e#5\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003egithub actions: \u003ca href=\"https://github.com/ningenMe/github-actions-diff-test-sample/pull/5/checks\" rel=\"nofollow noopener\" target=\"_blank\"\u003echecks\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://camo.qiitausercontent.com/dd29f128acfa95229f832c49790e543967d9c16e/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3234363435342f36303361663535342d646335612d333662332d613762372d3431323634636236646334342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2F603af554-dc5a-36b3-a7b7-41264cb6dc44.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=255318ff5d3a02fab9424a0f975a3daa\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/603af554-dc5a-36b3-a7b7-41264cb6dc44.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2F603af554-dc5a-36b3-a7b7-41264cb6dc44.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=cdd79aa3e43a582db84d4ef563c74fb2 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n両方テストがスキップされる。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e実行時間を見ると適切にスキップされてるのが分かります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"説明\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AA%AC%E6%98%8E\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e説明\u003c/h2\u003e\n\n\u003cp\u003e基本的には難しいことはしていないです、gitコマンドで頑張って差分を確認します。\u003cbr\u003e\n\u003ccode\u003esubdir\u003c/code\u003eに差分を検知したいディレクトリ名を指定します。\u003cbr\u003e\u003cbr\u003e\n例では\u003ccode\u003efrontend\u003c/code\u003e,\u003ccode\u003ebackend\u003c/code\u003eで分けていますが、他のユースケースでも使えると思います。\u003cbr\u003e\u003cbr\u003e\nまた、job自体はスキップせずstep単位でスキップしているため、スキップしたとしてもマージ可否には関わらないです。 \u003c/p\u003e\n\n\u003cp\u003eここではcompositeでの共通処理に関してはここでは説明しません。  \u003ca href=\"https://docs.github.com/ja/actions/creating-actions/creating-a-composite-run-steps-action\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://docs.github.com/ja/actions/creating-actions/creating-a-composite-run-steps-action\u003c/a\u003e を読むと良さそうです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"先行研究\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%85%88%E8%A1%8C%E7%A0%94%E7%A9%B6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e先行研究\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://zenn.dev/snowcait/articles/18c9137f49e378\" rel=\"nofollow noopener\" target=\"_blank\"\u003eGitHub Actions で変更があるときだけ git commit \u0026amp; push する\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://tech.yutaka0m.com/entry/2020/05/30/327/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eGitHub ActionsでPRの差分ファイルだけテストする方法\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e先行研究も本質的には近いことをやっている気がします。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h2\u003e\n\n\u003cp\u003e処理がオレオレな書き方になってるのがいけてない感じはしますね、より良い改善案が見つかればまた更新しようと思います。\u003cbr\u003e\u003cbr\u003e\nではでは。\u003c/p\u003e\n","body":"# github actionsを使って特定のディレクトリに差分があるときにテストを行う\n\n## はじめに\nこんにちは。webエンジニア社会人をしている [ningenMe](https://twitter.com/ningenMe) です。\n\nタイトル通り、特定のディレクトリのみの差分を検知して、それに応じてciでテストを回します。\n下記のことを行います。\n\n- 指定したディレクトリに差分があるときにのみ、ciでテストを行う\n- 逆に、指定されたディレクトリに差分がないときは、ciでテストをスキップする\n- ciでテストをスキップしてもマージ可否には影響させないようにする\n- github actionsで処理を行う\n\nユースケースとしては、フロントとバックエンドが共存してるようなwebのモノレポを想定しています。\n\n## GitHub\n実際に動くソースはこちら\n\n- [ningenMe/github-actions-diff-test-sample](https://github.com/ningenMe/github-actions-diff-test-sample)\n\n例として、ルートディレクトリに `./frontend` , `./backend` のディレクトリがある前提のリポジトリを考えます。\n\n`ci.yml`\n\n```yaml\nname: ci\non:\n  - pull_request\njobs:\n  frontend:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: ./.github/workflows/composite/diff\n        name: diff\n        id: diff\n        with:\n          subdir: frontend\n      - uses: actions/setup-node@v2\n        with:\n          node-version: 14.x\n      - name: test\n        if: steps.diff.outputs.diff-count \u003e 0\n        working-directory: ./frontend\n        run: | \n          yarn install\n          yarn test --watchAll=false\n  backend:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: ./.github/workflows/composite/diff\n        name: diff\n        id: diff\n        with:\n          subdir: backend\n      - uses: actions/setup-java@v2\n        with:\n          java-version: '11'\n          distribution: 'adopt'\n      - name: test\n        if: steps.diff.outputs.diff-count \u003e 0\n        working-directory: ./backend\n        run: gradle clean test\n```\n\n共通処理はcompositeに切り出しています  \n\n`composite/diff/action.yml`\n\n```yaml\nname: diff\ndescription: diff\ninputs:\n  subdir:\n    required: true\noutputs:\n  diff-count:\n    value: ${{ steps.diff.outputs.diff-count }}\nruns:\n  using: composite\n  steps:\n    - id: diff\n      env:\n        TARGET_BRANCH: ${{ github.base_ref }}\n      run: |\n        git fetch origin ${TARGET_BRANCH}\n        count=`git diff origin/${TARGET_BRANCH} HEAD --name-only --relative=${{ inputs.subdir }} | wc -l`\n        echo \"::set-output name=diff-count::$(echo $count)\"\n      shell: bash\n```\n\n## github actions上でどうなるか\n\n---\n\n- backendにだけ差分があるとき\n  - pull request: [#2](https://github.com/ningenMe/github-actions-diff-test-sample/pull/2)  \n  - github actions: [checks](https://github.com/ningenMe/github-actions-diff-test-sample/pull/2/checks)   \n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/d01ec39b-7f6a-ed1e-80a7-aff9378b8cf7.png)\nbackendのみテストが走る。\n\n\n---\n\n  \n- frontendにだけ差分があるとき\n  - pull request: [#3](https://github.com/ningenMe/github-actions-diff-test-sample/pull/3)  \n  - github actions: [checks](https://github.com/ningenMe/github-actions-diff-test-sample/pull/3/checks)   \n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/195d4221-2336-1d76-6119-e63cd8dd4be2.png)\nfrontendのみテストが走る。\n\n---\n\n\n- frontend/backend両方に差分があるとき\n  - pull request: [#4](https://github.com/ningenMe/github-actions-diff-test-sample/pull/4)  \n  - github actions: [checks](https://github.com/ningenMe/github-actions-diff-test-sample/pull/4/checks)   \n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/24d6090a-1616-8145-ccae-c4052304cc67.png)\nfrontend/backend両方にテストが走る。\n\n\n---\n  \n\n- frontend/backend両方に差分がないとき\n  - pull request: [#5](https://github.com/ningenMe/github-actions-diff-test-sample/pull/5)  \n  - github actions: [checks](https://github.com/ningenMe/github-actions-diff-test-sample/pull/5/checks)   \n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/603af554-dc5a-36b3-a7b7-41264cb6dc44.png)\n両方テストがスキップされる。\n\n------\n\n実行時間を見ると適切にスキップされてるのが分かります。\n\n\n## 説明\n\n基本的には難しいことはしていないです、gitコマンドで頑張って差分を確認します。\n`subdir`に差分を検知したいディレクトリ名を指定します。  \n例では`frontend`,`backend`で分けていますが、他のユースケースでも使えると思います。  \nまた、job自体はスキップせずstep単位でスキップしているため、スキップしたとしてもマージ可否には関わらないです。 \n\n\n\nここではcompositeでの共通処理に関してはここでは説明しません。  https://docs.github.com/ja/actions/creating-actions/creating-a-composite-run-steps-action を読むと良さそうです。\n\n\n## 先行研究\n- [GitHub Actions で変更があるときだけ git commit \u0026 push する](https://zenn.dev/snowcait/articles/18c9137f49e378)  \n- [GitHub ActionsでPRの差分ファイルだけテストする方法](https://tech.yutaka0m.com/entry/2020/05/30/327/)  \n\n先行研究も本質的には近いことをやっている気がします。\n\n\n## さいごに\n\n処理がオレオレな書き方になってるのがいけてない感じはしますね、より良い改善案が見つかればまた更新しようと思います。  \nではでは。\n\n","coediting":false,"comments_count":0,"created_at":"2021-09-18T19:29:46+09:00","group":null,"id":"e2ed82c9c740ad10d480","likes_count":4,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Git","versions":[]},{"name":"テスト","versions":[]},{"name":"CI","versions":[]},{"name":"monorepo","versions":[]},{"name":"GitHubActions","versions":[]}],"title":"github actionsを使って特定のディレクトリに差分があるときにテストを行う","updated_at":"2021-09-18T19:29:46+09:00","url":"https://qiita.com/ningenMe/items/e2ed82c9c740ad10d480","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":3880,"team_membership":null,"organization_url_name":null,"slide":false},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"githubでプルリクエストを作った人を自動でassigneesにする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#github%E3%81%A7%E3%83%97%E3%83%AB%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%9F%E4%BA%BA%E3%82%92%E8%87%AA%E5%8B%95%E3%81%A7assignees%E3%81%AB%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003egithubでプルリクエストを作った人を自動でassigneesにする\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\n\u003cp\u003eこんにちは。webエンジニア社会人をしている \u003ca href=\"https://twitter.com/ningenMe\" rel=\"nofollow noopener\" target=\"_blank\"\u003eningenMe\u003c/a\u003e です。\u003c/p\u003e\n\n\u003cp\u003eタイトル通り、assignees設定を自動化します。\u003cbr\u003e\u003cbr\u003e\n下記のことを行います。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eプルリクエストを作った人を自動で \u003ccode\u003eassignees\u003c/code\u003e にする\u003c/li\u003e\n\u003cli\u003egithub actionsで処理を行う\u003c/li\u003e\n\u003cli\u003eyamlではパースなどを自分で書かずに、\u003ca href=\"https://github.com/actions\" rel=\"nofollow noopener\" target=\"_blank\"\u003eGitHub Actions公式\u003c/a\u003e のものを使う\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"github\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#github\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGitHub\u003c/h2\u003e\n\n\u003cp\u003e実際に動くソースはこちら\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://gist.github.com/ningenMe/3380446f230ad2919e4f5d759961a106\" rel=\"nofollow noopener\" target=\"_blank\"\u003eassignees-sample.yml\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eassignees-sample\u003c/span\u003e\n\n\u003cspan class=\"na\"\u003eon\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003epull_request\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebranches\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e[\u003c/span\u003e \u003cspan class=\"nv\"\u003emain\u003c/span\u003e \u003cspan class=\"pi\"\u003e]\u003c/span\u003e\n\n\u003cspan class=\"na\"\u003ejobs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eassignees\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eubuntu-latest\u003c/span\u003e\n    \u003cspan class=\"na\"\u003esteps\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eactions/checkout@master\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eactions/github-script@v4.1.0\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eif\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003egithub.event_name == 'pull_request'\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ewith\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003egithub-token\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ secrets.GITHUB_TOKEN }}\u003c/span\u003e\n          \u003cspan class=\"na\"\u003escript\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e|\u003c/span\u003e\n            \u003cspan class=\"s\"\u003egithub.issues.addAssignees({\u003c/span\u003e\n              \u003cspan class=\"s\"\u003eowner: context.repo.owner,\u003c/span\u003e\n              \u003cspan class=\"s\"\u003erepo: context.repo.repo,\u003c/span\u003e\n              \u003cspan class=\"s\"\u003eissue_number: context.issue.number,\u003c/span\u003e\n              \u003cspan class=\"s\"\u003eassignees: `${{ github.actor }}`\u003c/span\u003e\n            \u003cspan class=\"s\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"ui上でどうなるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ui%E4%B8%8A%E3%81%A7%E3%81%A9%E3%81%86%E3%81%AA%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eUI上でどうなるか\u003c/h3\u003e\n\n\u003cp\u003ebotがassignしてくれます\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/9adda0605dd0195ee2a91aaa76ca009dd4824f32/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3234363435342f35396436356131662d643635642d313031652d616539322d3033663262373038336137372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2F59d65a1f-d65d-101e-ae92-03f2b7083a77.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=bc29c237bc7141d4383797a7fae60fec\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/59d65a1f-d65d-101e-ae92-03f2b7083a77.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2F59d65a1f-d65d-101e-ae92-03f2b7083a77.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=e36b1620f6b0622a5424985b521e5d03 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePRの右側らへんを見るとassigneesが付いているのがわかります。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/6f0789f90b6477147c1639c2c03a6400c1239ee8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3234363435342f61383462333261662d366435312d643433332d326666362d6561323139313661633639332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2Fa84b32af-6d51-d433-2ff6-ea21916ac693.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cd709bec3528dc031d2d91267960df01\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/a84b32af-6d51-d433-2ff6-ea21916ac693.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F246454%2Fa84b32af-6d51-d433-2ff6-ea21916ac693.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=cfc4c0a4ad07232b514bfc02e0bdb327 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"説明\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AA%AC%E6%98%8E\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e説明\u003c/h2\u003e\n\n\u003cp\u003e説明と言うほど説明することはないです。\u003cbr\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/actions/github-script\" rel=\"nofollow noopener\" target=\"_blank\"\u003eactions/github-script\u003c/a\u003e という便利なものがあるのでそれを活用します。\u003cbr\u003e\nバージョンは 2021/09/14 時点での最新のものを記載しています。\u003cbr\u003e\u003cbr\u003e\n実際に使う場合は \u003ca href=\"https://github.com/actions/github-script/tags\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/actions/github-script/tags\u003c/a\u003e で最新を確認すると良いと思います。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"先行研究\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%85%88%E8%A1%8C%E7%A0%94%E7%A9%B6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e先行研究\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/hkusu/items/39eb92dbd4d6db8a14d8\" id=\"reference-afa68f94b83c793afb49\"\u003eGitHub Actions でプルリクエストの自動アサインをする\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://zenn.dev/snowcait/articles/d6bc5eafd8ab75\" rel=\"nofollow noopener\" target=\"_blank\"\u003ePR の assignees が空だったときに自動アサイン\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e一応上記とはやり方が別になっていると思います。大した処理ではないのでなんでも良い気はします。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h2\u003e\n\n\u003cp\u003e超ライトな記事でした。\u003cbr\u003e\u003cbr\u003e\nではでは。\u003c/p\u003e\n","body":"# githubでプルリクエストを作った人を自動でassigneesにする\n\n## はじめに\nこんにちは。webエンジニア社会人をしている [ningenMe](https://twitter.com/ningenMe) です。\n\nタイトル通り、assignees設定を自動化します。  \n下記のことを行います。\n\n- プルリクエストを作った人を自動で `assignees` にする\n- github actionsで処理を行う\n- yamlではパースなどを自分で書かずに、[GitHub Actions公式](https://github.com/actions) のものを使う\n\n## GitHub\n実際に動くソースはこちら\n\n- [assignees-sample.yml](https://gist.github.com/ningenMe/3380446f230ad2919e4f5d759961a106)\n\n```yaml\nname: assignees-sample\n\non:\n  pull_request:\n    branches: [ main ]\n\njobs:\n  assignees:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@master\n      - uses: actions/github-script@v4.1.0\n        if: github.event_name == 'pull_request'\n        with:\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n          script: |\n            github.issues.addAssignees({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              issue_number: context.issue.number,\n              assignees: `${{ github.actor }}`\n            });\n```\n\n### UI上でどうなるか\nbotがassignしてくれます\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/59d65a1f-d65d-101e-ae92-03f2b7083a77.png)\n\nPRの右側らへんを見るとassigneesが付いているのがわかります。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/246454/a84b32af-6d51-d433-2ff6-ea21916ac693.png)\n\n\n## 説明\n説明と言うほど説明することはないです。  \n[actions/github-script](https://github.com/actions/github-script) という便利なものがあるのでそれを活用します。\nバージョンは 2021/09/14 時点での最新のものを記載しています。  \n実際に使う場合は https://github.com/actions/github-script/tags で最新を確認すると良いと思います。\n\n## 先行研究\n- [GitHub Actions でプルリクエストの自動アサインをする](https://qiita.com/hkusu/items/39eb92dbd4d6db8a14d8)\n- [PR の assignees が空だったときに自動アサイン](https://zenn.dev/snowcait/articles/d6bc5eafd8ab75)\n\n一応上記とはやり方が別になっていると思います。大した処理ではないのでなんでも良い気はします。\n\n\n## さいごに\n\n超ライトな記事でした。  \nではでは。\n","coediting":false,"comments_count":0,"created_at":"2021-09-14T02:12:16+09:00","group":null,"id":"416b3f9e593151360d58","likes_count":1,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"GitHub","versions":[]},{"name":"pullrequest","versions":[]},{"name":"チーム開発","versions":[]},{"name":"GitHubActions","versions":[]}],"title":"githubでプルリクエストを作った人を自動でassigneesにする","updated_at":"2021-09-14T02:12:16+09:00","url":"https://qiita.com/ningenMe/items/416b3f9e593151360d58","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":1704,"team_membership":null,"organization_url_name":null,"slide":false},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"spring-boot--dbunit--dockerでdbのテストを行う\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#spring-boot--dbunit--docker%E3%81%A7db%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E8%A1%8C%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003espring-boot + dbunit + dockerでdbのテストを行う\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\n\u003cp\u003eこんにちは。webエンジニア社会人をしている \u003ca href=\"https://twitter.com/ningenMe\" rel=\"nofollow noopener\" target=\"_blank\"\u003eningenMe\u003c/a\u003e です。\u003c/p\u003e\n\n\u003cp\u003eタイトル通り、spring-bootでdbのテストを行う記事です。\u003cbr\u003e\u003cbr\u003e\n下記のことを行います。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003espring bootでmapperを書いた際のテストを行う\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egradle test\u003c/code\u003e実行時にテスト専用のdbをdockerで立ち上げる\u003c/li\u003e\n\u003cli\u003edbunitを使ってdbのassertionを行う\u003c/li\u003e\n\u003cli\u003espock / junit でテストを行う\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"github\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#github\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGitHub\u003c/h2\u003e\n\n\u003cp\u003e実際に動くソースはこちら\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ningenMe/spring-boot-db-test-sample\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/ningenMe/spring-boot-db-test-sample\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"test用のdocker\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#test%E7%94%A8%E3%81%AEdocker\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etest用のdocker\u003c/h2\u003e\n\n\u003cp\u003eテスト専用のdbをdockerを使って立てます。\u003cbr\u003e\u003cbr\u003e\nテストのdbをどこに用意するかというのは選択肢が色々あると思います(テスト用のdbを開発環境に立てたり、h2のインメモリデータベースなど)、が、今回はdockerで立てる方法を採用します。  \u003c/p\u003e\n\n\u003cp\u003e今回はサンプルとしてmysqlを使用します。\u003cbr\u003e\u003cbr\u003e\n下記のdocker-compose.yamlでmysqlを起動します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eversion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e3'\u003c/span\u003e\n\n\u003cspan class=\"na\"\u003eservices\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003edb\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eimage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003emysql:5.7\u003c/span\u003e\n    \u003cspan class=\"na\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003emysql\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eenvironment\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eMYSQL_DATABASE\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esample\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eMYSQL_ROOT_PASSWORD\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003epassword\u003c/span\u003e\n      \u003cspan class=\"na\"\u003eTZ\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003eAsia/Tokyo'\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecommand\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003emysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\u003c/span\u003e\n    \u003cspan class=\"na\"\u003evolumes\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003e./:/docker-entrypoint-initdb.d\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003e3306:3306\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eテスト用のdbを\u003ccode\u003egradle test\u003c/code\u003e実行時に起動し、\u003ccode\u003egradle test\u003c/code\u003e終了時に破棄するために下記のtaskを \u003ccode\u003ebuild.gradle\u003c/code\u003e に書きます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"groovy\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003etask\u003c/span\u003e \u003cspan class=\"nf\"\u003edockerComposeUp\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003etype:\u003c/span\u003e \u003cspan class=\"n\"\u003eExec\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecommandLine\u003c/span\u003e \u003cspan class=\"s1\"\u003e'docker-compose'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'-f'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'src/test/resources/docker-compose.yaml'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'up'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e'-d'\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edoLast\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eThread\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esleep\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e//5sec\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003etask\u003c/span\u003e \u003cspan class=\"nf\"\u003edockerComposeDown\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003etype:\u003c/span\u003e \u003cspan class=\"n\"\u003eExec\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecommandLine\u003c/span\u003e \u003cspan class=\"s1\"\u003e'docker-compose'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'-f'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'src/test/resources/docker-compose.yaml'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'down'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'--remove-orphans'\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e'--volumes'\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euseJUnitPlatform\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edependsOn\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edockerComposeUp\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efinalizedBy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edockerComposeDown\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e上記のように依存関係を書くことで、\u003ccode\u003egradle test\u003c/code\u003eを実行した際にテスト専用のdbが立ち上がります。\u003cbr\u003e\u003cbr\u003e\nまたdockerが立ち上がり切る前にテストが始まりconnectionでエラーになることがあるので5秒sleepをかけています。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"schemasql\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#schemasql\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eschema.sql\u003c/h2\u003e\n\n\u003cp\u003eテーブル作成用の\u003ccode\u003eschema.sql\u003c/code\u003eファイルを\u003ccode\u003edocker-compose.yaml\u003c/code\u003eと同じ階層に用意しておくことで、実行時にtableも自動で作られます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"sql\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eCREATE\u003c/span\u003e \u003cspan class=\"k\"\u003eTABLE\u003c/span\u003e \u003cspan class=\"nv\"\u003e`users`\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e`id`\u003c/span\u003e           \u003cspan class=\"nb\"\u003einteger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eNOT\u003c/span\u003e \u003cspan class=\"k\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e`name`\u003c/span\u003e         \u003cspan class=\"nb\"\u003evarchar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eNOT\u003c/span\u003e \u003cspan class=\"k\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e`deleted_time`\u003c/span\u003e \u003cspan class=\"nb\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"k\"\u003eNULL\u003c/span\u003e \u003cspan class=\"k\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"k\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e`created_time`\u003c/span\u003e \u003cspan class=\"nb\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"k\"\u003eNOT\u003c/span\u003e \u003cspan class=\"k\"\u003eNULL\u003c/span\u003e \u003cspan class=\"k\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"k\"\u003eCURRENT_TIMESTAMP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e`updated_time`\u003c/span\u003e \u003cspan class=\"nb\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"k\"\u003eNOT\u003c/span\u003e \u003cspan class=\"k\"\u003eNULL\u003c/span\u003e \u003cspan class=\"k\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"k\"\u003eCURRENT_TIMESTAMP\u003c/span\u003e \u003cspan class=\"k\"\u003eON\u003c/span\u003e \u003cspan class=\"k\"\u003eUPDATE\u003c/span\u003e \u003cspan class=\"k\"\u003eCURRENT_TIMESTAMP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ePRIMARY\u003c/span\u003e \u003cspan class=\"k\"\u003eKEY\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e`id`\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eENGINE\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eInnoDB\u003c/span\u003e \u003cspan class=\"k\"\u003eDEFAULT\u003c/span\u003e \u003cspan class=\"n\"\u003eCHARSET\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eutf8\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e今回はサンプル用にusersというテーブルを用意してテストを書いてみます\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"mybatis\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#mybatis\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003emybatis\u003c/h2\u003e\n\n\u003cp\u003esqlはmybatisを用いて記述します。\u003cbr\u003e\nmybatisの接続設定は下記のようにします。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003espring\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003edatasource\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eurl\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ejdbc:mysql://localhost:3306/sample\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eusername\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eroot\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epassword\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003epassword\u003c/span\u003e\n    \u003cspan class=\"na\"\u003edriver-class-name\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ecom.mysql.cj.jdbc.Driver\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eusername\u003c/code\u003e, \u003ccode\u003epassword\u003c/code\u003e をdocker側で設定したものに合わせておきます。\u003cbr\u003e\u003cbr\u003e\nテスト用でしか使わないので環境変数などは使わなくてok。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"mapper\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#mapper\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003emapper\u003c/h2\u003e\n\n\u003cp\u003eテスト用のinsertクエリを書きます。bulkでインサートするクエリを書いてみます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@Mapper\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserMysqlMapper\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@Insert\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n          \u003cspan class=\"s\"\u003e\"\u0026lt;script\u0026gt;\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n          \u003cspan class=\"s\"\u003e\"INSERT INTO \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n          \u003cspan class=\"s\"\u003e\"     users (id, name) \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n          \u003cspan class=\"s\"\u003e\"VALUES \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n          \u003cspan class=\"s\"\u003e\"     \u0026lt;foreach item='user' collection='userDtoList' open='' separator=',' close=''\u0026gt;\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n          \u003cspan class=\"s\"\u003e\"     (#{user.id}, #{user.name}) \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n          \u003cspan class=\"s\"\u003e\"     \u0026lt;/foreach\u0026gt; \"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n          \u003cspan class=\"s\"\u003e\"\u0026lt;/script\u0026gt;\"\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003einsert\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Param\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"userDtoList\"\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nd\"\u003e@NonNull\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"nc\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nc\"\u003eUserDto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003euserDtoList\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"spockでのテスト\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#spock%E3%81%A7%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003espockでのテスト\u003c/h2\u003e\n\n\u003cp\u003edbunitを使ってspockでテストを書いていきます。正常系のテストを1個サンプルとして書いていきます。\u003cbr\u003e\nxmlを使って初期化用、期待値用のテーブルの状態を記述します。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esetup.xml\u003c/code\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"xml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\"1.0\" encoding=\"UTF-8\"?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dataset\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;users\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"1\"\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"user1\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;users\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"2\"\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"user2\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dataset\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eexpect.xml\u003c/code\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"xml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\"1.0\" encoding=\"UTF-8\"?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dataset\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;users\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"1\"\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"user1\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;users\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"2\"\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"user2\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;users\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"3\"\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"user3\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;users\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"4\"\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"user4\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dataset\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003euser1,user2が存在する状態で、user3,user4をinsertするようなテストを書きます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"groovy\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@SpringBootTest\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserMysqlMapperSpec\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eSpecification\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eFILE_PATH\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"src/test/groovy/ningenme/net/sample/mapper\"\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eJdbcTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003ejdbcTemplate\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eUserMysqlMapper\u003c/span\u003e \u003cspan class=\"n\"\u003euserMysqlMapper\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eIDatabaseConnection\u003c/span\u003e \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetup\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejdbcTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetDataSource\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"sample\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003esetProperty\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDatabaseConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ePROPERTY_METADATA_HANDLER\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eMySqlMetadataHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eDatabaseOperation\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eCLEAN_INSERT\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eexecute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eFlatXmlDataSetBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eFile\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFILE_PATH\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/setup.xml\"\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"insert_新規挿入が出来る\"\u003c/span\u003e \u003cspan class=\"o\"\u003e(){\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003ewhen:\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003euser3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eUserDto\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003euser3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetId\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003euser3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user3\"\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003euser4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eUserDto\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003euser4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetId\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"n\"\u003euser4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user4\"\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003euserMysqlMapper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einsert\u003c/span\u003e\u003cspan class=\"o\"\u003e([\u003c/span\u003e\u003cspan class=\"n\"\u003euser3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euser4\u003c/span\u003e\u003cspan class=\"o\"\u003e]);\u003c/span\u003e\n\n        \u003cspan class=\"nl\"\u003ethen:\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003eactual\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDefaultColumnFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eexcludedColumnsTable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreateDataSet\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetTable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users\"\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e\n                \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"deleted_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"created_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"updated_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\n        \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003eexpect\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDefaultColumnFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eexcludedColumnsTable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n                \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eFlatXmlDataSetBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eFile\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFILE_PATH\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/expect.xml\"\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003egetTable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"users\"\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e\n                \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"deleted_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"created_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"updated_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eactual\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eexpect\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enoExceptionThrown\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003esetup\u003c/code\u003e でconnectionを張り、用意していたxmlを使ってテーブルを初期化します。\u003cbr\u003e\u003cbr\u003e\nthen句の中で insertメソッドを実行した後のテーブルと、期待値用のxmlとで比較を行います。  \u003c/p\u003e\n\n\u003cp\u003eこの\u003ccode\u003eassertEquals\u003c/code\u003eがdbテーブルの状態で比較が出来るので便利です。  \u003c/p\u003e\n\n\u003cp\u003eまた比較の際は\u003ccode\u003eexcludedColumnsTable\u003c/code\u003eを使うことで、比較に使いたくないカラムを除外できます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"junitでのテスト\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#junit%E3%81%A7%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ejunitでのテスト\u003c/h2\u003e\n\n\u003cp\u003e一応junitでも同じ内容のテストを書いておきます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nd\"\u003e@SpringBootTest\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserMysqlMapperTest\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n  \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e \u003cspan class=\"no\"\u003eFILE_PATH\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"src/test/java/ningenme/net/sample/mapper\"\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n  \u003cspan class=\"nc\"\u003eJdbcTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003ejdbcTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n  \u003cspan class=\"nc\"\u003eUserMysqlMapper\u003c/span\u003e \u003cspan class=\"n\"\u003euserMysqlMapper\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"nc\"\u003eIDatabaseConnection\u003c/span\u003e \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@BeforeEach\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ebeforeEach\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eSQLException\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eMalformedURLException\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eDatabaseUnitException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejdbcTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetDataSource\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \u003cspan class=\"s\"\u003e\"sample\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003esetProperty\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eDatabaseConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ePROPERTY_METADATA_HANDLER\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eMySqlMetadataHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eDatabaseOperation\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eCLEAN_INSERT\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eexecute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eFlatXmlDataSetBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eFile\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eFILE_PATH\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\"/setup.xml\"\u003c/span\u003e\u003cspan class=\"o\"\u003e)));\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@Test\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003einsert_新規挿入が出来る\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eSQLException\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eDatabaseUnitException\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nc\"\u003eMalformedURLException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//when\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eUserDto\u003c/span\u003e \u003cspan class=\"n\"\u003euser3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserDto\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"n\"\u003euser3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetId\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"n\"\u003euser3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"user3\"\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eUserDto\u003c/span\u003e \u003cspan class=\"n\"\u003euser4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserDto\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"n\"\u003euser4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetId\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n      \u003cspan class=\"n\"\u003euser4\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"user4\"\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euserMysqlMapper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einsert\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eof\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euser4\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n\n\n    \u003cspan class=\"c1\"\u003e//then\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eITable\u003c/span\u003e \u003cspan class=\"n\"\u003eactual\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eDefaultColumnFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eexcludedColumnsTable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreateDataSet\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetTable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"users\"\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e\n            \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"deleted_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\"created_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\"updated_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e});\u003c/span\u003e\n\n    \u003cspan class=\"nc\"\u003eITable\u003c/span\u003e \u003cspan class=\"n\"\u003eexpect\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eDefaultColumnFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eexcludedColumnsTable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eFlatXmlDataSetBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eFile\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eFILE_PATH\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\"/expect.xml\"\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003egetTable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"users\"\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e\n            \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"deleted_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\"created_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\"updated_time\"\u003c/span\u003e\u003cspan class=\"o\"\u003e});\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eassertEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eactual\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eexpect\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@AfterEach\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eafterEach\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"nc\"\u003eSQLException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eiDatabaseConnection\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclose\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"何が嬉しいか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%95%E3%81%8C%E5%AC%89%E3%81%97%E3%81%84%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e何が嬉しいか\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003edbにdockerを使う点\u003cbr\u003e\u003cbr\u003e\nテスト用のdbをh2にするとmysqlと微妙に文法が違ってエラーになる、\u003cbr\u003e\n開発環境にdbを立てると皆で共有になってしまったりする、など弊害が起きがちな気がするので、テスト用のdbはdockerでスタンドアローンなものにするのがベターに感じます。\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003edbunitを使う点\u003cbr\u003e\u003cbr\u003e\nテストでassert用に自分でクエリを書くのはあまり良くないので、dbunitを使うのがやはりオススメだと思います。\u003cbr\u003e\u003cbr\u003e\n期待値を静的ファイルとして保持できる点でもjava側で色々書くよりは思います。\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h2\u003e\n\n\u003cp\u003eこれでspring bootでdbのテストを行う環境が整ったと思います。\u003cbr\u003e\u003cbr\u003e\nどれも大したことはしていないですが、組み合わせることで少しは使いやすいものになっているかなと。\u003c/p\u003e\n\n\u003cp\u003esample用のソースは \u003ca href=\"https://github.com/ningenMe/spring-boot-db-test-sample\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/ningenMe/spring-boot-db-test-sample\u003c/a\u003e に上げています。\u003cbr\u003e\u003cbr\u003e\n細かいパッケージ構成等はそちらを確認してください。 \u003c/p\u003e\n\n\u003cp\u003eではでは。\u003c/p\u003e\n","body":"# spring-boot + dbunit + dockerでdbのテストを行う\n\n## はじめに\nこんにちは。webエンジニア社会人をしている [ningenMe](https://twitter.com/ningenMe) です。\n\nタイトル通り、spring-bootでdbのテストを行う記事です。  \n下記のことを行います。\n\n- spring bootでmapperを書いた際のテストを行う\n- `gradle test`実行時にテスト専用のdbをdockerで立ち上げる\n- dbunitを使ってdbのassertionを行う\n- spock / junit でテストを行う\n\n\n## GitHub\n実際に動くソースはこちら\n\n- [https://github.com/ningenMe/spring-boot-db-test-sample](https://github.com/ningenMe/spring-boot-db-test-sample)\n\n\n## test用のdocker\nテスト専用のdbをdockerを使って立てます。  \nテストのdbをどこに用意するかというのは選択肢が色々あると思います(テスト用のdbを開発環境に立てたり、h2のインメモリデータベースなど)、が、今回はdockerで立てる方法を採用します。  \n\n今回はサンプルとしてmysqlを使用します。  \n下記のdocker-compose.yamlでmysqlを起動します。\n\n```yaml\nversion: '3'\n\nservices:\n  db:\n    image: mysql:5.7\n    container_name: mysql\n    environment:\n      MYSQL_DATABASE: sample\n      MYSQL_ROOT_PASSWORD: password\n      TZ: 'Asia/Tokyo'\n    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\n    volumes:\n      - ./:/docker-entrypoint-initdb.d\n    ports:\n      - 3306:3306\n```\n\n\nテスト用のdbを`gradle test`実行時に起動し、`gradle test`終了時に破棄するために下記のtaskを `build.gradle` に書きます。\n\n```groovy\ntask dockerComposeUp (type: Exec) {\n\tcommandLine 'docker-compose','-f','src/test/resources/docker-compose.yaml','up','-d'\n\tdoLast {\n\t\tThread.sleep(5 * 1000) //5sec\n\t}\n}\n\ntask dockerComposeDown (type: Exec) {\n\tcommandLine 'docker-compose', '-f', 'src/test/resources/docker-compose.yaml', 'down', '--remove-orphans', '--volumes'\n}\n\ntest {\n\tuseJUnitPlatform()\n\tdependsOn(dockerComposeUp)\n    finalizedBy(dockerComposeDown)\n}\n```\n上記のように依存関係を書くことで、`gradle test`を実行した際にテスト専用のdbが立ち上がります。  \nまたdockerが立ち上がり切る前にテストが始まりconnectionでエラーになることがあるので5秒sleepをかけています。\n\n## schema.sql\nテーブル作成用の`schema.sql`ファイルを`docker-compose.yaml`と同じ階層に用意しておくことで、実行時にtableも自動で作られます。\n\n```sql\nCREATE TABLE `users` (\n  `id`           integer(10) NOT NULL,\n  `name`         varchar(255) NOT NULL,\n  `deleted_time` timestamp NULL DEFAULT NULL,\n  `created_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  `updated_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n```\n今回はサンプル用にusersというテーブルを用意してテストを書いてみます\n\n## mybatis\nsqlはmybatisを用いて記述します。\nmybatisの接続設定は下記のようにします。\n\n```yaml\nspring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/sample\n    username: root\n    password: password\n    driver-class-name: com.mysql.cj.jdbc.Driver\n```\n`username`, `password` をdocker側で設定したものに合わせておきます。  \nテスト用でしか使わないので環境変数などは使わなくてok。\n\n\n## mapper\n\nテスト用のinsertクエリを書きます。bulkでインサートするクエリを書いてみます。\n\n```java\n@Mapper\npublic interface UserMysqlMapper {\n\n  @Insert(\n          \"\u003cscript\u003e\" +\n          \"INSERT INTO \" +\n          \"     users (id, name) \" +\n          \"VALUES \" +\n          \"     \u003cforeach item='user' collection='userDtoList' open='' separator=',' close=''\u003e\" +\n          \"     (#{user.id}, #{user.name}) \" +\n          \"     \u003c/foreach\u003e \" +\n          \"\u003c/script\u003e\"\n  )\n  void insert(@Param(\"userDtoList\") @NonNull final List\u003cUserDto\u003e userDtoList);\n\n}\n```\n\n## spockでのテスト\n\ndbunitを使ってspockでテストを書いていきます。正常系のテストを1個サンプルとして書いていきます。\nxmlを使って初期化用、期待値用のテーブルの状態を記述します。\n\n\n`setup.xml`\n\n```xml\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cdataset\u003e\n    \u003cusers id=\"1\" name=\"user1\" /\u003e\n    \u003cusers id=\"2\" name=\"user2\" /\u003e\n\u003c/dataset\u003e\n```\n\n`expect.xml`\n\n```xml\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cdataset\u003e\n    \u003cusers id=\"1\" name=\"user1\" /\u003e\n    \u003cusers id=\"2\" name=\"user2\" /\u003e\n    \u003cusers id=\"3\" name=\"user3\" /\u003e\n    \u003cusers id=\"4\" name=\"user4\" /\u003e\n\u003c/dataset\u003e\n```\n\nuser1,user2が存在する状態で、user3,user4をinsertするようなテストを書きます。\n\n```groovy\n@SpringBootTest\nclass UserMysqlMapperSpec extends Specification {\n\n    private final static String FILE_PATH = \"src/test/groovy/ningenme/net/sample/mapper\"\n\n    @Autowired\n    JdbcTemplate jdbcTemplate\n\n    @Autowired\n    UserMysqlMapper userMysqlMapper\n\n    IDatabaseConnection iDatabaseConnection\n\n    def setup() {\n        iDatabaseConnection = new DatabaseConnection(jdbcTemplate.getDataSource().getConnection(),\"sample\",false);\n        iDatabaseConnection.getConfig().setProperty(DatabaseConfig.PROPERTY_METADATA_HANDLER, new MySqlMetadataHandler());\n        DatabaseOperation.CLEAN_INSERT.execute(\n                iDatabaseConnection,\n                new FlatXmlDataSetBuilder().build(new File(FILE_PATH + \"/setup.xml\"))\n        )\n    }\n\n    def \"insert_新規挿入が出来る\" (){\n        when:\n        def user3 = new UserDto();\n        {\n            user3.setId(3)\n            user3.setName(\"user3\")\n        }\n        def user4 = new UserDto();\n        {\n            user4.setId(4)\n            user4.setName(\"user4\")\n        }\n        userMysqlMapper.insert([user3, user4]);\n\n        then:\n        def actual = DefaultColumnFilter.excludedColumnsTable(\n                iDatabaseConnection.createDataSet().getTable(\"users\"),\n                new String[]{\"deleted_time\",\"created_time\",\"updated_time\"}\n        )\n\n        def expect = DefaultColumnFilter.excludedColumnsTable(\n                new FlatXmlDataSetBuilder().build(new File(FILE_PATH + \"/expect.xml\")).getTable(\"users\"),\n                new String[]{\"deleted_time\",\"created_time\",\"updated_time\"}\n        )\n        assertEquals(actual,expect)\n        noExceptionThrown()\n    }\n\n}\n```\n\n`setup` でconnectionを張り、用意していたxmlを使ってテーブルを初期化します。  \nthen句の中で insertメソッドを実行した後のテーブルと、期待値用のxmlとで比較を行います。  \n\nこの`assertEquals`がdbテーブルの状態で比較が出来るので便利です。  \n\nまた比較の際は`excludedColumnsTable`を使うことで、比較に使いたくないカラムを除外できます。\n\n\n\n## junitでのテスト\n\n一応junitでも同じ内容のテストを書いておきます。\n\n```java\n@SpringBootTest\nclass UserMysqlMapperTest {\n\n  private final static String FILE_PATH = \"src/test/java/ningenme/net/sample/mapper\";\n\n  @Autowired\n  JdbcTemplate jdbcTemplate;\n\n  @Autowired\n  UserMysqlMapper userMysqlMapper;\n\n  IDatabaseConnection iDatabaseConnection;\n\n  @BeforeEach\n  void beforeEach() throws SQLException, MalformedURLException, DatabaseUnitException {\n    iDatabaseConnection = new DatabaseConnection(jdbcTemplate.getDataSource().getConnection(), \"sample\", false);\n    iDatabaseConnection.getConfig().setProperty(DatabaseConfig.PROPERTY_METADATA_HANDLER, new MySqlMetadataHandler());\n    DatabaseOperation.CLEAN_INSERT.execute(\n            iDatabaseConnection,\n            new FlatXmlDataSetBuilder().build(new File(FILE_PATH + \"/setup.xml\")));\n  }\n\n  @Test\n  void insert_新規挿入が出来る() throws SQLException, DatabaseUnitException, MalformedURLException {\n    //when\n    UserDto user3 = new UserDto();\n    {\n      user3.setId(3);\n      user3.setName(\"user3\");\n    }\n    UserDto user4 = new UserDto();\n    {\n      user4.setId(4);\n      user4.setName(\"user4\");\n    }\n    userMysqlMapper.insert(List.of(user3, user4));\n\n\n    //then\n    ITable actual = DefaultColumnFilter.excludedColumnsTable(\n            iDatabaseConnection.createDataSet().getTable(\"users\"),\n            new String[]{\"deleted_time\",\"created_time\",\"updated_time\"});\n\n    ITable expect = DefaultColumnFilter.excludedColumnsTable(\n            new FlatXmlDataSetBuilder().build(new File(FILE_PATH + \"/expect.xml\")).getTable(\"users\"),\n            new String[]{\"deleted_time\",\"created_time\",\"updated_time\"});\n\n    assertEquals(actual,expect);\n  }\n\n  @AfterEach\n  void afterEach() throws SQLException {\n    iDatabaseConnection.close();\n  }\n}\n```\n\n## 何が嬉しいか\n\n- dbにdockerを使う点  \nテスト用のdbをh2にするとmysqlと微妙に文法が違ってエラーになる、\n開発環境にdbを立てると皆で共有になってしまったりする、など弊害が起きがちな気がするので、テスト用のdbはdockerでスタンドアローンなものにするのがベターに感じます。\n\n- dbunitを使う点  \nテストでassert用に自分でクエリを書くのはあまり良くないので、dbunitを使うのがやはりオススメだと思います。  \n期待値を静的ファイルとして保持できる点でもjava側で色々書くよりは思います。\n\n\n## さいごに\nこれでspring bootでdbのテストを行う環境が整ったと思います。  \nどれも大したことはしていないですが、組み合わせることで少しは使いやすいものになっているかなと。\n\n\n\nsample用のソースは [https://github.com/ningenMe/spring-boot-db-test-sample](https://github.com/ningenMe/spring-boot-db-test-sample) に上げています。  \n細かいパッケージ構成等はそちらを確認してください。 \n\nではでは。\n","coediting":false,"comments_count":0,"created_at":"2021-08-16T01:16:38+09:00","group":null,"id":"045620965bf73555d0a7","likes_count":2,"private":false,"reactions_count":0,"stocks_count":2,"tags":[{"name":"MySQL","versions":[]},{"name":"テスト","versions":[]},{"name":"Docker","versions":[]},{"name":"DBUnit","versions":[]},{"name":"SpringBoot","versions":[]}],"title":"spring-boot + dbunit + dockerでdbのテストを行う","updated_at":"2021-08-26T03:05:19+09:00","url":"https://qiita.com/ningenMe/items/045620965bf73555d0a7","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":3022,"team_membership":null,"organization_url_name":null,"slide":false},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"燃やす埋める問題-辺の張り方チートシート\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%87%83%E3%82%84%E3%81%99%E5%9F%8B%E3%82%81%E3%82%8B%E5%95%8F%E9%A1%8C-%E8%BE%BA%E3%81%AE%E5%BC%B5%E3%82%8A%E6%96%B9%E3%83%81%E3%83%BC%E3%83%88%E3%82%B7%E3%83%BC%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e燃やす埋める問題 辺の張り方チートシート\u003c/h1\u003e\n\n\u003cp\u003e実装メインの話をします。理論の話はないです。\u003cbr\u003e\n曖昧な表現が多いです。厳密な話はしないので悪しからず。\u003cbr\u003e\n燃やす埋めるではなくproject selection problemと捉えるべき、の話も触れません。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"準備\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%BA%96%E5%82%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e準備\u003c/h2\u003e\n\n\u003cp\u003e下記のように定義します。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e$S$ : 始点\u003c/li\u003e\n\u003cli\u003e$G$ : 終点\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eフローの実装は下記参考\u003cbr\u003e\n\u003ca href=\"https://ningenme.github.io/compro-library/lib/graph/Dinic.cpp\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://ningenme.github.io/compro-library/lib/graph/Dinic.cpp\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003emake_edge( $from$ , $to$ , $cap$)\n\n\u003cul\u003e\n\u003cli\u003e頂点 $from$ から頂点 $to$ へ、容量 $cap$ の辺を張ります。\u003c/li\u003e\n\u003cli\u003e使うメソッドはこれだけです。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"辺の張り方\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BE%BA%E3%81%AE%E5%BC%B5%E3%82%8A%E6%96%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e辺の張り方\u003c/h2\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e条件\u003c/th\u003e\n\u003cth\u003e処理\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $0$ のとき $c$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($i$,$G$,$c$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $1$ のとき $c$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($S$,$i$,$c$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $0$ のとき $c$ 得る\u003c/td\u003e\n\u003ctd\u003e先に$c$を得る\u003cbr\u003emake_edge($S$,$i$,$c$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $1$ のとき $c$ 得る\u003c/td\u003e\n\u003ctd\u003e先に$c$を得る\u003cbr\u003emake_edge($i$,$G$,$c$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $0$, $j$ が $1$ のとき $c$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($i$, $j$, $c$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $1$, $j$ が $0$ のとき $c$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($j$, $i$, $c$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ と $j$ が異なるときc失う\u003c/td\u003e\n\u003ctd\u003emake_edge($i$, $j$, $c$)\u003cbr\u003emake_edge($j$, $i$, $c$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $0$, $j$ が $0$ のとき $c$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $c$ を得る\u003cbr\u003emake_edge($S$, $k$, $c$)\u003cbr\u003emake_edge($k$, $i$, $inf$)\u003cbr\u003emake_edge($k$, $j$, $inf$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $1$, $j$ が $1$ のとき $c$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $c$ を得る\u003cbr\u003emake_edge($i$, $k$, $inf$)\u003cbr\u003emake_edge($j$, $k$, $inf$)\u003cbr\u003emake_edge($k$, $G$, $c$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e二部グラフに関しては状態を反転させることで、他の条件も上記の式に帰着させることが出来るときがあります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"問題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%95%8F%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e問題\u003c/h2\u003e\n\n\u003cp\u003e以下、実際の実装例を挙げていきます。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"e---mul\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#e---mul\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ca href=\"https://atcoder.jp/contests/arc085/tasks/arc085_c\" rel=\"nofollow noopener\" target=\"_blank\"\u003eE - MUL\u003c/a\u003e\n\u003c/h4\u003e\n\n\u003cp\u003e「割る」: $0$, 「割らない」: $1$,と割り当てる\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $1$ のとき $abs{(A_{i})}$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $abs{(A_{i})}$ を得る\u003cbr\u003emake_edge($i$, $G$, $abs{(A_{i})}$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $1$ のとき $abs{(A_{i})}$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($S$, $i$, $abs{(A_{i})}$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $0$、$j=m*i$ が $1$ のとき、$inf$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($i$, $j$, $inf$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003ca href=\"https://atcoder.jp/contests/arc085/submissions/21855433\" rel=\"nofollow noopener\" target=\"_blank\"\u003e提出\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"f---zebraness\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#f---zebraness\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ca href=\"https://atcoder.jp/contests/abc193/tasks/abc193_f\" rel=\"nofollow noopener\" target=\"_blank\"\u003eF - Zebraness\u003c/a\u003e\n\u003c/h4\u003e\n\n\u003cp\u003e$i+j$ の $parity$ が $0$ のとき、「白」:$0$, 「黒」:$1$ ,と割り当てる\u003cbr\u003e\u003cbr\u003e\n$i+j$ の $parity$ が $1$ のとき、「黒」:$0$, 「白」:$1$ ,と割り当てる  \u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e$parity=0$\u003c/td\u003e\n\u003ctd\u003e$x$ が $0$ のとき $b$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $b$ を得る\u003cbr\u003emake_edge($S$, $x$, $b$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$parity=0$\u003c/td\u003e\n\u003ctd\u003e$x$ が $1$ のとき $w$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $w$ を得る\u003cbr\u003emake_edge($x$, $G$, $w$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$parity=1$\u003c/td\u003e\n\u003ctd\u003e$x$ が $1$ のとき $b$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $b$ を得る\u003cbr\u003emake_edge($x$, $G$, $b$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$parity=1$\u003c/td\u003e\n\u003ctd\u003e$x$ が $0$ のとき $w$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $w$ を得る\u003cbr\u003emake_edge($S$, $x$, $w$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e$x$ が $0$, $y$ が $0$ のとき $1$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $1$ を得る\u003cbr\u003emake_edge($S$, $k$, $1$)\u003cbr\u003emake_edge($k$, $x$, $1$)\u003cbr\u003emake_edge($k$, $y$, $1$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e$x$ が $1$, $y$ が $1$ のとき $1$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $1$ を得る\u003cbr\u003emake_edge($x$, $k$, $1$)\u003cbr\u003emake_edge($y$, $k$, $1$)\u003cbr\u003emake_edge($k$, $G$, $1$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003ca href=\"https://atcoder.jp/contests/abc193/submissions/21876523\" rel=\"nofollow noopener\" target=\"_blank\"\u003e提出\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"no1479-matrix-eraser\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#no1479-matrix-eraser\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ca href=\"https://yukicoder.me/problems/no/1479\" rel=\"nofollow noopener\" target=\"_blank\"\u003eNo.1479 Matrix Eraser\u003c/a\u003e\n\u003c/h4\u003e\n\n\u003cp\u003e行: 「操作を行う」:$0$,「操作を行わない」:$1$ と割り当てる\u003cbr\u003e\u003cbr\u003e\n列: 「操作を行わない」:$0$,「操作を行う」:$1$ と割り当てる  \u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $0$ のとき $1$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($i$, $G$, $1$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$j$ が $1$ のとき $1$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($S$, $j$, $1$)\u003cbr\u003eここで実装上は $j=j+H$ である\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $1$,$j$ が $0$ のとき $inf$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($j$, $i$, $inf$)\u003cbr\u003eここで実装上は $j=j+H$ である\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003ca href=\"https://yukicoder.me/submissions/649636\" rel=\"nofollow noopener\" target=\"_blank\"\u003e提出\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"e-bricks\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#e-bricks\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ca href=\"https://codeforces.com/contest/1404/problem/E\" rel=\"nofollow noopener\" target=\"_blank\"\u003eE. Bricks\u003c/a\u003e\n\u003c/h4\u003e\n\n\u003cp\u003eマスとマスの間の辺を頂点とみなす。\u003cbr\u003e\u003cbr\u003e\n$x$ 軸に平行な辺: 「マスを連結する」:$0$,「マスを連結しない」:$1$ と割り当てる\u003cbr\u003e\u003cbr\u003e\n$y$ 軸に平行な辺: 「マスを連結しない」:$0$,「マスを連結する」:$1$ と割り当てる  \u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e$a$ が $0$ のとき $1$ 得る\u003c/td\u003e\n\u003ctd\u003emake_edge($S$, $a$, $1$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$a$ ($x$ 軸平行)が $0$, $b$ ($y$ 軸平行)が $1$ のとき $inf$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($a$, $b$, $inf$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$a$ ($y$ 軸平行)が $1$, $b$ ($x$ 軸平行)が $0$ のとき $inf$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($b$, $a$, $inf$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003ca href=\"https://codeforces.com/contest/1404/submission/113435436\" rel=\"nofollow noopener\" target=\"_blank\"\u003e提出\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"no957-植林\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#no957-%E6%A4%8D%E6%9E%97\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ca href=\"https://yukicoder.me/problems/no/957\" rel=\"nofollow noopener\" target=\"_blank\"\u003eNo.957 植林\u003c/a\u003e\n\u003c/h4\u003e\n\n\u003cp\u003e行/列に対して「植える」:$0$, 「植えない」:$1$ ,と割り当てる。\u003cbr\u003e\u003cbr\u003e\nまた、行側の利得を貪欲に先に選んでしまうことで、行列のコストを行側に押し付けることが出来る。そうすることで辺の数のオーダーが落ちる\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $0$ のとき $abs{(R_{i}-cost)}$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($i$, $G$, $abs{(R_{i}-cost)}$)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$j$ が $0$ のとき $abs{(C_{j})}$ 得る\u003c/td\u003e\n\u003ctd\u003e先に $abs{(C_{j})}$ を得る\u003cbr\u003emake_edge($j$, $G$, $abs{(C_{j})}$)\u003cbr\u003eここで実装上は $j=j+H$ である\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$i$ が $1$, $j$ が $0$ のとき、 $abs{(grid_{i,j})}$ 失う\u003c/td\u003e\n\u003ctd\u003emake_edge($i$, $j$, $abs{(grid_{i,j})}$)\u003cbr\u003eここで実装上は $j=j+H$ である\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003ca href=\"https://yukicoder.me/submissions/649584\" rel=\"nofollow noopener\" target=\"_blank\"\u003e提出\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"参考資料\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考資料\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ei1333.github.io/luzhiled/snippets/memo/project-selection.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e燃やす埋める問題\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://koyumeishi.hatenablog.com/entry/2021/01/14/052223\" rel=\"nofollow noopener\" target=\"_blank\"\u003e燃やす埋める問題を完全に理解した話\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ikatakos.com/pot/programming_algorithm/graph_theory/maximum_flow/burn_bury_problem\" rel=\"nofollow noopener\" target=\"_blank\"\u003e燃やす埋める問題\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kimiyuki.net/blog/2017/12/05/minimum-cut-and-project-selection-problem/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e最小カットとProject Selection Problemのまとめ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://tokoharuland.hateblo.jp/entry/2017/11/12/234636\" rel=\"nofollow noopener\" target=\"_blank\"\u003e『燃やす埋める』と『ProjectSelectionProblem』\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://tokoharu.github.io/tokoharupage/docs/formularization.pdf\" rel=\"nofollow noopener\" target=\"_blank\"\u003eLPとグラフと定式化\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://tokoharuland.hateblo.jp/entry/2017/11/13/220607\" rel=\"nofollow noopener\" target=\"_blank\"\u003e続：『燃やす埋める』と『ProjectSelectionProblem』\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://yosupo.hatenablog.com/entry/2015/03/31/134336\" rel=\"nofollow noopener\" target=\"_blank\"\u003e最小カットについて\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","body":"# 燃やす埋める問題 辺の張り方チートシート\n実装メインの話をします。理論の話はないです。\n曖昧な表現が多いです。厳密な話はしないので悪しからず。\n燃やす埋めるではなくproject selection problemと捉えるべき、の話も触れません。\n\n## 準備\n\n下記のように定義します。\n\n- $S$ : 始点\n- $G$ : 終点\n\nフローの実装は下記参考\nhttps://ningenme.github.io/compro-library/lib/graph/Dinic.cpp\n\n- make_edge( $from$ , $to$ , $cap$)\n  - 頂点 $from$ から頂点 $to$ へ、容量 $cap$ の辺を張ります。\n  - 使うメソッドはこれだけです。\n\n## 辺の張り方\n\n|条件|処理|\n|-|-|\n| $i$ が $0$ のとき $c$ 失う|make_edge($i$,$G$,$c$)|\n| $i$ が $1$ のとき $c$ 失う|make_edge($S$,$i$,$c$)|\n| $i$ が $0$ のとき $c$ 得る|先に$c$を得る\u003cbr\u003emake_edge($S$,$i$,$c$)|\n| $i$ が $1$ のとき $c$ 得る|先に$c$を得る\u003cbr\u003emake_edge($i$,$G$,$c$)|\n| $i$ が $0$, $j$ が $1$ のとき $c$ 失う|make_edge($i$, $j$, $c$)|\n| $i$ が $1$, $j$ が $0$ のとき $c$ 失う|make_edge($j$, $i$, $c$)|\n| $i$ と $j$ が異なるときc失う|make_edge($i$, $j$, $c$)\u003cbr\u003emake_edge($j$, $i$, $c$)|\n|$i$ が $0$, $j$ が $0$ のとき $c$ 得る|先に $c$ を得る\u003cbr\u003emake_edge($S$, $k$, $c$)\u003cbr\u003emake_edge($k$, $i$, $inf$)\u003cbr\u003emake_edge($k$, $j$, $inf$)|\n|$i$ が $1$, $j$ が $1$ のとき $c$ 得る|先に $c$ を得る\u003cbr\u003emake_edge($i$, $k$, $inf$)\u003cbr\u003emake_edge($j$, $k$, $inf$)\u003cbr\u003emake_edge($k$, $G$, $c$)|\n二部グラフに関しては状態を反転させることで、他の条件も上記の式に帰着させることが出来るときがあります。\n\n## 問題\n以下、実際の実装例を挙げていきます。\n\n\n---\n####  [E - MUL](https://atcoder.jp/contests/arc085/tasks/arc085_c)   \n「割る」: $0$, 「割らない」: $1$,と割り当てる\n\n|||\n|-|-|\n|$i$ が $1$ のとき $abs{(A_{i})}$ 得る|先に $abs{(A_{i})}$ を得る\u003cbr\u003emake_edge($i$, $G$, $abs{(A_{i})}$)|\n|$i$ が $1$ のとき $abs{(A_{i})}$ 失う|make_edge($S$, $i$, $abs{(A_{i})}$)|\n|$i$ が $0$、$j=m*i$ が $1$ のとき、$inf$ 失う|make_edge($i$, $j$, $inf$)|\n\n[提出](https://atcoder.jp/contests/arc085/submissions/21855433)\n\n---\n####  [F - Zebraness](https://atcoder.jp/contests/abc193/tasks/abc193_f)   \n$i+j$ の $parity$ が $0$ のとき、「白」:$0$, 「黒」:$1$ ,と割り当てる  \n$i+j$ の $parity$ が $1$ のとき、「黒」:$0$, 「白」:$1$ ,と割り当てる  \n\n||||\n|-|-|-|\n|$parity=0$|$x$ が $0$ のとき $b$ 得る|先に $b$ を得る\u003cbr\u003emake_edge($S$, $x$, $b$)|\n|$parity=0$|$x$ が $1$ のとき $w$ 得る|先に $w$ を得る\u003cbr\u003emake_edge($x$, $G$, $w$)|\n|$parity=1$|$x$ が $1$ のとき $b$ 得る|先に $b$ を得る\u003cbr\u003emake_edge($x$, $G$, $b$)|\n|$parity=1$|$x$ が $0$ のとき $w$ 得る|先に $w$ を得る\u003cbr\u003emake_edge($S$, $x$, $w$)|\n||$x$ が $0$, $y$ が $0$ のとき $1$ 得る|先に $1$ を得る\u003cbr\u003emake_edge($S$, $k$, $1$)\u003cbr\u003emake_edge($k$, $x$, $1$)\u003cbr\u003emake_edge($k$, $y$, $1$)|\n||$x$ が $1$, $y$ が $1$ のとき $1$ 得る|先に $1$ を得る\u003cbr\u003emake_edge($x$, $k$, $1$)\u003cbr\u003emake_edge($y$, $k$, $1$)\u003cbr\u003emake_edge($k$, $G$, $1$)|\n\n[提出](https://atcoder.jp/contests/abc193/submissions/21876523)\n\n---\n####  [No.1479 Matrix Eraser](https://yukicoder.me/problems/no/1479)   \n行: 「操作を行う」:$0$,「操作を行わない」:$1$ と割り当てる  \n列: 「操作を行わない」:$0$,「操作を行う」:$1$ と割り当てる  \n\n|||\n|-|-|\n|$i$ が $0$ のとき $1$ 失う|make_edge($i$, $G$, $1$)|\n|$j$ が $1$ のとき $1$ 失う|make_edge($S$, $j$, $1$)\u003cbr\u003eここで実装上は $j=j+H$ である|\n|$i$ が $1$,$j$ が $0$ のとき $inf$ 失う|make_edge($j$, $i$, $inf$)\u003cbr\u003eここで実装上は $j=j+H$ である|\n\n[提出](https://yukicoder.me/submissions/649636)\n\n---\n####  [E. Bricks](https://codeforces.com/contest/1404/problem/E)   \nマスとマスの間の辺を頂点とみなす。  \n$x$ 軸に平行な辺: 「マスを連結する」:$0$,「マスを連結しない」:$1$ と割り当てる  \n$y$ 軸に平行な辺: 「マスを連結しない」:$0$,「マスを連結する」:$1$ と割り当てる  \n\n|||\n|-|-|\n|$a$ が $0$ のとき $1$ 得る|make_edge($S$, $a$, $1$)|\n|$a$ ($x$ 軸平行)が $0$, $b$ ($y$ 軸平行)が $1$ のとき $inf$ 失う|make_edge($a$, $b$, $inf$)|\n|$a$ ($y$ 軸平行)が $1$, $b$ ($x$ 軸平行)が $0$ のとき $inf$ 失う|make_edge($b$, $a$, $inf$)|\n\n[提出](https://codeforces.com/contest/1404/submission/113435436)\n\n---\n####  [No.957 植林](https://yukicoder.me/problems/no/957)   \n行/列に対して「植える」:$0$, 「植えない」:$1$ ,と割り当てる。  \nまた、行側の利得を貪欲に先に選んでしまうことで、行列のコストを行側に押し付けることが出来る。そうすることで辺の数のオーダーが落ちる\n\n|||\n|-|-|\n|$i$ が $0$ のとき $abs{(R_{i}-cost)}$ 失う|make_edge($i$, $G$, $abs{(R_{i}-cost)}$)|\n|$j$ が $0$ のとき $abs{(C_{j})}$ 得る|先に $abs{(C_{j})}$ を得る\u003cbr\u003emake_edge($j$, $G$, $abs{(C_{j})}$)\u003cbr\u003eここで実装上は $j=j+H$ である|\n|$i$ が $1$, $j$ が $0$ のとき、 $abs{(grid_{i,j})}$ 失う|make_edge($i$, $j$, $abs{(grid_{i,j})}$)\u003cbr\u003eここで実装上は $j=j+H$ である|\n\n[提出](https://yukicoder.me/submissions/649584)\n\n---\n\n## 参考資料\n- [燃やす埋める問題](https://ei1333.github.io/luzhiled/snippets/memo/project-selection.html)\n- [燃やす埋める問題を完全に理解した話](https://koyumeishi.hatenablog.com/entry/2021/01/14/052223)\n- [燃やす埋める問題](https://ikatakos.com/pot/programming_algorithm/graph_theory/maximum_flow/burn_bury_problem)\n- [最小カットとProject Selection Problemのまとめ](https://kimiyuki.net/blog/2017/12/05/minimum-cut-and-project-selection-problem/)\n- [『燃やす埋める』と『ProjectSelectionProblem』](http://tokoharuland.hateblo.jp/entry/2017/11/12/234636)\n- [LPとグラフと定式化](http://tokoharu.github.io/tokoharupage/docs/formularization.pdf)\n- [続：『燃やす埋める』と『ProjectSelectionProblem』](http://tokoharuland.hateblo.jp/entry/2017/11/13/220607)\n- [最小カットについて](https://yosupo.hatenablog.com/entry/2015/03/31/134336)\n","coediting":false,"comments_count":0,"created_at":"2021-04-22T19:51:51+09:00","group":null,"id":"69ed7ce43c9cd0a2de38","likes_count":5,"private":false,"reactions_count":0,"stocks_count":5,"tags":[{"name":"競技プログラミング","versions":[]},{"name":"フロー","versions":[]},{"name":"最大流","versions":[]}],"title":"燃やす埋める問題　辺の張り方チートシート","updated_at":"2021-04-22T19:51:51+09:00","url":"https://qiita.com/ningenMe/items/69ed7ce43c9cd0a2de38","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":1964,"team_membership":null,"organization_url_name":null,"slide":false},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"サービス稼働中のmysqlのカラム変更で気をつけること\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E7%A8%BC%E5%83%8D%E4%B8%AD%E3%81%AEmysql%E3%81%AE%E3%82%AB%E3%83%A9%E3%83%A0%E5%A4%89%E6%9B%B4%E3%81%A7%E6%B0%97%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eサービス稼働中のMySQLのカラム変更で気をつけること\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\n\u003cp\u003eこんにちは。webエンジニアの \u003ca href=\"https://twitter.com/ningenMe\" rel=\"nofollow noopener\" target=\"_blank\"\u003eningenMe\u003c/a\u003e です。\u003cbr\u003e\u003cbr\u003e\nサービス稼働中にMySQLのカラムを変更したい、そんな場面に遭遇したとき。  \u003c/p\u003e\n\n\u003cp\u003eそういうときのtipsを知ってる範囲で並べていきます......と思っていたらちょうど\u003ca href=\"https://qiita.com/doriven/items/6d31f01589d6cfcc1b85\" id=\"reference-fe0cacbab47dee713605\"\u003e良い記事\u003c/a\u003eが既に出ていました。なので、ここで上げてないポイントを書いていきます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"直でalterを打つ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%9B%B4%E3%81%A7alter%E3%82%92%E6%89%93%E3%81%A4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e直でalterを打つ。\u003c/h2\u003e\n\n\u003cp\u003e趣味の開発など、dbが止まる時間があって良いならこれが一番楽です。\u003cbr\u003e\nただロックがかかる、一時的に対象のテーブル容量が2倍になるなどの弱点があるので注意が必要です。\u003cbr\u003e\u003cbr\u003e\nリアルタイムでapiとかから叩かれるdbならこの選択肢は殆ど無理そうです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"pt-online-schema-change-を使う\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#pt-online-schema-change-%E3%82%92%E4%BD%BF%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ept-online-schema-change を使う\u003c/h2\u003e\n\n\u003cp\u003e上記の記事でも上げられていましたが、便利なツールです。\u003cbr\u003e\u003cbr\u003e\nリアルタイムで更新のあるテーブルや、レコード数がそこそこ多いテーブル(1億件ぐらい)でも、数時間かかるものの手間いらずでカラム変更が出来ます。\u003cbr\u003e\n中規模のデータ量ならこれで大体十分だと思います。  \u003c/p\u003e\n\n\u003cp\u003eafter句やfirst句が使えるのもいいところです。\u003cbr\u003e\u003cbr\u003e\n容量に関しては普通にalter打つときと同じで、2倍持てるかを気をつける必要があります。\u003cbr\u003e\u003cbr\u003e\n途中で容量足りなくなって止まると、triggerを自分で外す作業などが出てきて余計な本番作業が発生するので気をつけましょう。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"メンテナンスに入れる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A1%E3%83%B3%E3%83%86%E3%83%8A%E3%83%B3%E3%82%B9%E3%81%AB%E5%85%A5%E3%82%8C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eメンテナンスに入れる\u003c/h2\u003e\n\n\u003cp\u003eサービス止める対応が許されるなら、メンテナンスと称してサービスを止めてしまってalter打つというのがかなり楽に感じます。もちろんアプリケーションにもよります。\u003c/p\u003e\n\n\u003cp\u003eここで「メンテナンスに入れる」は対象のテーブルを参照や更新のない状態にしてしまうという意味です。\u003c/p\u003e\n\n\u003cp\u003e容量が気にならない場合はalter打つだけでいいのですが、容量が逼迫しているときでも下記の方法で変更できます。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ealterを打つ前に更新したいテーブルをdump。\u003c/li\u003e\n\u003cli\u003eその後更新したいテーブルをtruncate。\u003c/li\u003e\n\u003cli\u003ealterを打つ。\u003c/li\u003e\n\u003cli\u003edumpしたデータをrestore。\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eシンプルですね。\u003cbr\u003e\u003cbr\u003e\nただdump取るとはいえtruncate打つのが心理的ハードルが少し高いのが難点です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"複数カラムの変更がある場合1個のクエリで処理する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A4%87%E6%95%B0%E3%82%AB%E3%83%A9%E3%83%A0%E3%81%AE%E5%A4%89%E6%9B%B4%E3%81%8C%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%881%E5%80%8B%E3%81%AE%E3%82%AF%E3%82%A8%E3%83%AA%E3%81%A7%E5%87%A6%E7%90%86%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e複数カラムの変更がある場合、1個のクエリで処理する。\u003c/h2\u003e\n\n\u003cp\u003eカラムが変更された後、MySQL側のキャッシュが一時的に無くなるためクエリの負荷が普段より大きくなります。\u003cbr\u003e\nそのため修正必要なカラムが複数ある場合はできるだけクエリをまとめる方が良いです。  \u003c/p\u003e\n\n\u003cp\u003e複数テーブルを更新する際は1テーブル処理した後負荷が上がっていないか少し待つのがベター。\u003c/p\u003e\n\n\u003cp\u003eこの「キャッシュ乗るまでパフォーマンスが悪い」は他の場面でも効いてくるときがあって、例えばMySQLのクラスタ構成でサーバを増やしたときなどにもサービスインしたばかりのdbはこのようになることがあります。  \u003c/p\u003e\n\n\u003cp\u003e気づいてない罠とかは結構あるので、何の操作をするにもgrafanaなどでメトリクス見ておきましょうという感じがありますね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"高負荷な時間を避けて作業をする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%AB%98%E8%B2%A0%E8%8D%B7%E3%81%AA%E6%99%82%E9%96%93%E3%82%92%E9%81%BF%E3%81%91%E3%81%A6%E4%BD%9C%E6%A5%AD%E3%82%92%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e高負荷な時間を避けて作業をする\u003c/h2\u003e\n\n\u003cp\u003e全然tipsでもないし当たり前やんけ、とはなるんですが結構危機感の度合いが個人差あるなと思うので改めてと。\u003cbr\u003e\u003cbr\u003e\n私事ですがdbのbusyが100%になってapiから軒並みconnectionできなくなってサービス死ぬみたいなのを経験してから、かなり怖さが生まれました。\u003cbr\u003e\u003cbr\u003e\nまあそもそもこれぐらいの作業で落ちるようなbusyが常態化していることがかなり問題ですが......。  \u003c/p\u003e\n\n\u003cp\u003e完全に本番の負荷を想定するのは難しいですが、最低限、本番と同様のレコード数のテーブルを別のテスト用のqa環境などに作って試し打ちするのは必須なように思います。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h2\u003e\n\n\u003cp\u003eかなりふわっとした記事になってしまいました。すみません。\u003ca href=\"https://qiita.com/doriven/items/6d31f01589d6cfcc1b85\"\u003e先行記事\u003c/a\u003eがしっかりしていると思うので是非そっちを読んでください。\u003cbr\u003e\u003cbr\u003e\nalter時にテーブル容量2倍いることだけでも伝わればなと思います。  \u003c/p\u003e\n\n\u003cp\u003eMySQLじゃなくてcassandraでカラム追加だとめっちゃ楽なので(比較するものでもないですが)、データの拡張性やリカバリのコストも初期設計でちゃんと見積もれるといいなってひしひしと感じます。\u003cbr\u003e\u003cbr\u003e\nみなさんも楽しくてドキドキな本番db作業を是非。\u003c/p\u003e\n\n\u003cp\u003eではでは。\u003c/p\u003e\n","body":"# サービス稼働中のMySQLのカラム変更で気をつけること\n\n\n## はじめに\nこんにちは。webエンジニアの [ningenMe](https://twitter.com/ningenMe) です。  \nサービス稼働中にMySQLのカラムを変更したい、そんな場面に遭遇したとき。  \n\nそういうときのtipsを知ってる範囲で並べていきます......と思っていたらちょうど[良い記事](https://qiita.com/doriven/items/6d31f01589d6cfcc1b85)が既に出ていました。なので、ここで上げてないポイントを書いていきます。\n\n\n## 直でalterを打つ。\n趣味の開発など、dbが止まる時間があって良いならこれが一番楽です。\nただロックがかかる、一時的に対象のテーブル容量が2倍になるなどの弱点があるので注意が必要です。  \nリアルタイムでapiとかから叩かれるdbならこの選択肢は殆ど無理そうです。\n\n## pt-online-schema-change を使う\n上記の記事でも上げられていましたが、便利なツールです。  \nリアルタイムで更新のあるテーブルや、レコード数がそこそこ多いテーブル(1億件ぐらい)でも、数時間かかるものの手間いらずでカラム変更が出来ます。\n中規模のデータ量ならこれで大体十分だと思います。  \n\nafter句やfirst句が使えるのもいいところです。  \n容量に関しては普通にalter打つときと同じで、2倍持てるかを気をつける必要があります。  \n途中で容量足りなくなって止まると、triggerを自分で外す作業などが出てきて余計な本番作業が発生するので気をつけましょう。\n\n## メンテナンスに入れる\nサービス止める対応が許されるなら、メンテナンスと称してサービスを止めてしまってalter打つというのがかなり楽に感じます。もちろんアプリケーションにもよります。\n\nここで「メンテナンスに入れる」は対象のテーブルを参照や更新のない状態にしてしまうという意味です。\n\n容量が気にならない場合はalter打つだけでいいのですが、容量が逼迫しているときでも下記の方法で変更できます。\n\n- alterを打つ前に更新したいテーブルをdump。\n- その後更新したいテーブルをtruncate。\n- alterを打つ。\n- dumpしたデータをrestore。  \n\nシンプルですね。  \nただdump取るとはいえtruncate打つのが心理的ハードルが少し高いのが難点です。\n\n## 複数カラムの変更がある場合、1個のクエリで処理する。\nカラムが変更された後、MySQL側のキャッシュが一時的に無くなるためクエリの負荷が普段より大きくなります。\nそのため修正必要なカラムが複数ある場合はできるだけクエリをまとめる方が良いです。  \n\n複数テーブルを更新する際は1テーブル処理した後負荷が上がっていないか少し待つのがベター。\n\nこの「キャッシュ乗るまでパフォーマンスが悪い」は他の場面でも効いてくるときがあって、例えばMySQLのクラスタ構成でサーバを増やしたときなどにもサービスインしたばかりのdbはこのようになることがあります。  \n\n気づいてない罠とかは結構あるので、何の操作をするにもgrafanaなどでメトリクス見ておきましょうという感じがありますね。\n\n\n\n## 高負荷な時間を避けて作業をする\n\n全然tipsでもないし当たり前やんけ、とはなるんですが結構危機感の度合いが個人差あるなと思うので改めてと。  \n私事ですがdbのbusyが100%になってapiから軒並みconnectionできなくなってサービス死ぬみたいなのを経験してから、かなり怖さが生まれました。  \nまあそもそもこれぐらいの作業で落ちるようなbusyが常態化していることがかなり問題ですが......。  \n\n完全に本番の負荷を想定するのは難しいですが、最低限、本番と同様のレコード数のテーブルを別のテスト用のqa環境などに作って試し打ちするのは必須なように思います。\n\n\n\n## さいごに\nかなりふわっとした記事になってしまいました。すみません。[先行記事](https://qiita.com/doriven/items/6d31f01589d6cfcc1b85)がしっかりしていると思うので是非そっちを読んでください。  \nalter時にテーブル容量2倍いることだけでも伝わればなと思います。  \n\n\nMySQLじゃなくてcassandraでカラム追加だとめっちゃ楽なので(比較するものでもないですが)、データの拡張性やリカバリのコストも初期設計でちゃんと見積もれるといいなってひしひしと感じます。  \nみなさんも楽しくてドキドキな本番db作業を是非。\n\nではでは。\n","coediting":false,"comments_count":0,"created_at":"2021-02-23T22:54:25+09:00","group":null,"id":"10c4ddf8e85e7e5078e1","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"MySQL","versions":[]},{"name":"Web","versions":[]},{"name":"Database","versions":[]},{"name":"運用","versions":[]},{"name":"本番環境","versions":[]}],"title":"サービス稼働中のMySQLのカラム変更で気をつけること","updated_at":"2021-02-23T22:54:25+09:00","url":"https://qiita.com/ningenMe/items/10c4ddf8e85e7e5078e1","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":1386,"team_membership":null,"organization_url_name":null,"slide":false},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"mysqlで3億レコード物理削除した話\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#mysql%E3%81%A73%E5%84%84%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%89%E7%89%A9%E7%90%86%E5%89%8A%E9%99%A4%E3%81%97%E3%81%9F%E8%A9%B1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMySQLで3億レコード物理削除した話\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\n\u003cp\u003eこんにちは。webエンジニア社会人をしている ningenMe です。\u003cbr\u003e\nタイトル通り。MySQLで3億レコード物理削除した話。\u003cbr\u003e\nちょっとハマったので備忘録。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじまりはアラート\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%81%BE%E3%82%8A%E3%81%AF%E3%82%A2%E3%83%A9%E3%83%BC%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじまりはアラート\u003c/h2\u003e\n\n\u003cp\u003eはじまりはアラートだった。\u003cbr\u003e\n僕が運用・保守しているバッチサーバでは、mysqlからちょうど直近1ヶ月分のデータを毎日1回selectする定期処理をしている。  \u003c/p\u003e\n\n\u003cp\u003eいつもなら1時間程度で終わる処理のはずが、その日は7,8時間経っても終わらずアラートが鳴り止まない.....。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"原因追求\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8E%9F%E5%9B%A0%E8%BF%BD%E6%B1%82\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e原因追求\u003c/h2\u003e\n\n\u003cp\u003eとりあえずリトライしたり、ログ見たりしたもののあんまり悪いところがなかった。\u003cbr\u003e\nクエリもちゃんとindex効いてる。なんでだろうと思ったらDBの容量が結構大きくなっていたことに気づいた。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003ehoge_table | 350'000'000 |\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e3億5千レコード。インデックスちゃんと効いてたので多分普通に遅いだけっぽい。\u003cbr\u003e\u003cbr\u003e\n必要なデータ取得は1ヶ月分である12'000'000件ほど。このselectクエリが時間かかってトランザクションが長く失敗しているようだった。  \u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"db\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#db\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eDB\u003c/h2\u003e\n\n\u003cp\u003e基本的に毎日400'000件ぐらいinsertされてレコードが増えているこのテーブル。\u003cbr\u003e\nデータ取得は要件的には直近1ヶ月分だけあれば良いので、それだけ持てばよいのだが生憎rotate処理は入っていなかった。  \u003c/p\u003e\n\n\u003cp\u003e自分が開発したものではなく引き継いだものだったのだが、その時点では何も言われていなかったので技術的負債のパスをもらってしまった感じである。  \u003c/p\u003e\n\n\u003cp\u003e日々のinsertでデータが大きくなり、ついに限界を迎えたときに僕のターンだったというわけだ。  \u003c/p\u003e\n\n\u003cp\u003eこれだけ大きくなるならパーティション切っててほしかったものの、それも残念ながらなかった。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"改修\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%94%B9%E4%BF%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e改修\u003c/h2\u003e\n\n\u003cp\u003e一旦ロジックに手を加えるよりはDB軽くして様子見るほうが工数少ないだろうという方針になった。\u003cbr\u003e\n3億レコード消せばかなり変わるだろう、ということでdeleteを打つことに......。このときはうまく行くと思っていた......。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"対応その1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AF%BE%E5%BF%9C%E3%81%9D%E3%81%AE1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e対応その1\u003c/h2\u003e\n\n\u003cp\u003eバックアップもしっかりとって、意気揚々とクエリを打ち始めた。\u003cbr\u003e\u003cbr\u003e\n「クエリ打ちまーす」  \u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003eDELETE FROM hoge_table WHERE create_time \u0026lt;= 'YYYY-MM-DD HH:MM:SS';\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e「...」\u003cbr\u003e\u003cbr\u003e\n「...」  \u003c/p\u003e\n\n\u003cp\u003eなんか反応がない、やっぱ時間かかるかあとか思いつつdbのgrafana眺めてたらdisc busyがめちゃめちゃ上がっていた。  \u003c/p\u003e\n\n\u003cp\u003e「yabeeeeeeeee」\u003c/p\u003e\n\n\u003cp\u003eとりあえずクエリを止めた。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"対応その2\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AF%BE%E5%BF%9C%E3%81%9D%E3%81%AE2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e対応その2\u003c/h2\u003e\n\n\u003cp\u003e一回で削除するには量が多すぎたことを反省した。dbのレプリケーション時間も考慮してこまめに削除することが良さそう。\u003cbr\u003e\n1'000'000件ずつぐらい削除できるスクリプト書いて処理することにした。  \u003c/p\u003e\n\n\u003cp\u003e「実行しまーす」    \u003c/p\u003e\n\n\u003cp\u003eこれでうまく行くと思っていた......。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"対応その3\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AF%BE%E5%BF%9C%E3%81%9D%E3%81%AE3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e対応その3\u003c/h2\u003e\n\n\u003cp\u003e対応その2はどこへ......。処理はうまくいっていたのだが、時間がとてもかかることが判明した。\u003cbr\u003e\n負荷をかけずに丁寧にやると約2週間必要だった。が、それではサービス要件を満たせず、やむなく中断。  \u003c/p\u003e\n\n\u003cp\u003eそして対応その3である。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"テーブルcopyしてrename\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%86%E3%83%BC%E3%83%96%E3%83%ABcopy%E3%81%97%E3%81%A6rename\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eテーブルcopyしてrename\u003c/h2\u003e\n\n\u003cp\u003eなんかdeleteが負荷大きくて良くないのでは。と思いinsertで欲しいテーブルを無から作ろうという方針に切り替えた。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e| hoge_table     | 350'000'000|\n| tmp_hoge_table |  50'000'000|\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eレコード数的には上記のような状態になればよいので、insertするほうがデータ処理も1/7程度になって速いはずである。  \u003c/p\u003e\n\n\u003cp\u003eテーブル作ったあとはrenameしてマスターテーブルとして使い、今の3億レコードテーブルはdropすればokなはず。\u003cbr\u003e\ntruncateやdropはdeleteと違い負荷が少ないのは知っていたので、この方針に。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"実行\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実行\u003c/h2\u003e\n\n\u003cp\u003e「クエリ打ちまーす」  \u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003eINSERT INTO tmp_hoge_table SELECT FROM hoge_table create_time \u0026gt; 'YYYY-MM-DD HH:MM:SS';\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e「...」\u003cbr\u003e\u003cbr\u003e\n「...」\u003cbr\u003e\u003cbr\u003e\n「お...？」  \u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"対応その4\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AF%BE%E5%BF%9C%E3%81%9D%E3%81%AE4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e対応その4\u003c/h2\u003e\n\n\u003cp\u003eうまく行くかと思ったが、insert終わったあとに無限にエラー吐かれた。mysql怖い。\u003cbr\u003e\nもう本番作業したくねえよ〜って気持ちでいっぱいだった。\u003c/p\u003e\n\n\u003cp\u003eまあよく考えると、多分これも1回でinsertしすぎということなんだろう。\u003cbr\u003e\nとりあえず1日分だけinsertしてみたらうまく行った。  \u003c/p\u003e\n\n\u003cp\u003e「おお！」  \u003c/p\u003e\n\n\u003cp\u003eこのあとは丁寧丁寧に1日分ずつinsert。1ヶ月ぶんあればいいので35回日分を対応。  \u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"テーブルrename\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%86%E3%83%BC%E3%83%96%E3%83%ABrename\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eテーブルrename\u003c/h2\u003e\n\n\u003cp\u003eここはすんなりいった。めでたし。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"アラート止まる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A2%E3%83%A9%E3%83%BC%E3%83%88%E6%AD%A2%E3%81%BE%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eアラート、止まる\u003c/h2\u003e\n\n\u003cp\u003eバッチ処理の速度も回復した。\u003cbr\u003e\n今まで1時間かかってたのに2分ぐらいで終わるようになった(は？)  \u003c/p\u003e\n\n\u003cp\u003e問題も解決したのを確認できたので、3億レコードテーブルはdropした。\u003cbr\u003e\ndrop tableに爽快感を覚えるのは初めてだった。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ。\u003c/h2\u003e\n\n\u003cp\u003e他人のバッチ処理のローテート処理忘れでこんなに苦しむとは、って思った機会でした。\u003cbr\u003e\n些細な設計の粗さが運用として現れて工数を奪うんだなあ......。  \u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"dbにくわしく\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#db%E3%81%AB%E3%81%8F%E3%82%8F%E3%81%97%E3%81%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eDBにくわしく\u003c/h2\u003e\n\n\u003cp\u003eあなたはdeleteするときレプリケーション負荷など気にしてますか？\u003cbr\u003e\nmysqlに優しくしましょう。  \u003c/p\u003e\n\n\u003cp\u003eまあ今回の内容とか知ってる人は全然困るところじゃないとは思うんですが。\u003cbr\u003e\n知識がないと難しいねーって。  \u003c/p\u003e\n\n\u003cp\u003ecassandraでdelete多くて死んだパターンも昔経験したので何か近いものがあるのかなあとか思ったり。\u003cbr\u003e\u003cbr\u003e\nまた勉強したら記事にでもまとめます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h2\u003e\n\n\u003cp\u003e※軽い感じに見えるけど実際はめちゃめちゃ慎重にチームでダブルチェックしながら作業進めてたよ。本番dbって怖いよね。\u003c/p\u003e\n\n\u003cp\u003eではでは。\u003c/p\u003e\n","body":"# MySQLで3億レコード物理削除した話\n\n## はじめに\nこんにちは。webエンジニア社会人をしている ningenMe です。\nタイトル通り。MySQLで3億レコード物理削除した話。\nちょっとハマったので備忘録。\n\n## はじまりはアラート\nはじまりはアラートだった。\n僕が運用・保守しているバッチサーバでは、mysqlからちょうど直近1ヶ月分のデータを毎日1回selectする定期処理をしている。  \n\nいつもなら1時間程度で終わる処理のはずが、その日は7,8時間経っても終わらずアラートが鳴り止まない.....。\n\n## 原因追求\nとりあえずリトライしたり、ログ見たりしたもののあんまり悪いところがなかった。\nクエリもちゃんとindex効いてる。なんでだろうと思ったらDBの容量が結構大きくなっていたことに気づいた。\n\n```\nhoge_table | 350'000'000 |\n```\n\n3億5千レコード。インデックスちゃんと効いてたので多分普通に遅いだけっぽい。  \n必要なデータ取得は1ヶ月分である12'000'000件ほど。このselectクエリが時間かかってトランザクションが長く失敗しているようだった。  \n\n\n## DB\n基本的に毎日400'000件ぐらいinsertされてレコードが増えているこのテーブル。\nデータ取得は要件的には直近1ヶ月分だけあれば良いので、それだけ持てばよいのだが生憎rotate処理は入っていなかった。  \n\n\n自分が開発したものではなく引き継いだものだったのだが、その時点では何も言われていなかったので技術的負債のパスをもらってしまった感じである。  \n\n日々のinsertでデータが大きくなり、ついに限界を迎えたときに僕のターンだったというわけだ。  \n\n\nこれだけ大きくなるならパーティション切っててほしかったものの、それも残念ながらなかった。\n\n\n\n## 改修\n一旦ロジックに手を加えるよりはDB軽くして様子見るほうが工数少ないだろうという方針になった。\n3億レコード消せばかなり変わるだろう、ということでdeleteを打つことに......。このときはうまく行くと思っていた......。\n\n  \n## 対応その1\n\nバックアップもしっかりとって、意気揚々とクエリを打ち始めた。  \n「クエリ打ちまーす」  \n\n```\nDELETE FROM hoge_table WHERE create_time \u003c= 'YYYY-MM-DD HH:MM:SS';\n```\n「...」  \n「...」  \n\nなんか反応がない、やっぱ時間かかるかあとか思いつつdbのgrafana眺めてたらdisc busyがめちゃめちゃ上がっていた。  \n\n「yabeeeeeeeee」\n\nとりあえずクエリを止めた。\n\n\n\n## 対応その2\n一回で削除するには量が多すぎたことを反省した。dbのレプリケーション時間も考慮してこまめに削除することが良さそう。\n1'000'000件ずつぐらい削除できるスクリプト書いて処理することにした。  \n\n「実行しまーす」    \n\nこれでうまく行くと思っていた......。\n\n## 対応その3\n対応その2はどこへ......。処理はうまくいっていたのだが、時間がとてもかかることが判明した。\n負荷をかけずに丁寧にやると約2週間必要だった。が、それではサービス要件を満たせず、やむなく中断。  \n\nそして対応その3である。\n\n## テーブルcopyしてrename\nなんかdeleteが負荷大きくて良くないのでは。と思いinsertで欲しいテーブルを無から作ろうという方針に切り替えた。\n\n```\n| hoge_table     | 350'000'000|\n| tmp_hoge_table |  50'000'000|\n```\n\nレコード数的には上記のような状態になればよいので、insertするほうがデータ処理も1/7程度になって速いはずである。  \n\nテーブル作ったあとはrenameしてマスターテーブルとして使い、今の3億レコードテーブルはdropすればokなはず。\ntruncateやdropはdeleteと違い負荷が少ないのは知っていたので、この方針に。\n\n\n## 実行\n「クエリ打ちまーす」  \n\n```\nINSERT INTO tmp_hoge_table SELECT FROM hoge_table create_time \u003e 'YYYY-MM-DD HH:MM:SS';\n```\n「...」  \n「...」  \n「お...？」  \n\n## 対応その4\nうまく行くかと思ったが、insert終わったあとに無限にエラー吐かれた。mysql怖い。\nもう本番作業したくねえよ〜って気持ちでいっぱいだった。\n\nまあよく考えると、多分これも1回でinsertしすぎということなんだろう。\nとりあえず1日分だけinsertしてみたらうまく行った。  \n\n「おお！」  \n\nこのあとは丁寧丁寧に1日分ずつinsert。1ヶ月ぶんあればいいので35回日分を対応。  \n\n## テーブルrename\nここはすんなりいった。めでたし。\n\n\n## アラート、止まる\nバッチ処理の速度も回復した。\n今まで1時間かかってたのに2分ぐらいで終わるようになった(は？)  \n\n問題も解決したのを確認できたので、3億レコードテーブルはdropした。\ndrop tableに爽快感を覚えるのは初めてだった。\n\n\n## まとめ。\n他人のバッチ処理のローテート処理忘れでこんなに苦しむとは、って思った機会でした。\n些細な設計の粗さが運用として現れて工数を奪うんだなあ......。  \n\n## DBにくわしく\nあなたはdeleteするときレプリケーション負荷など気にしてますか？\nmysqlに優しくしましょう。  \n\nまあ今回の内容とか知ってる人は全然困るところじゃないとは思うんですが。\n知識がないと難しいねーって。  \n  \ncassandraでdelete多くて死んだパターンも昔経験したので何か近いものがあるのかなあとか思ったり。  \nまた勉強したら記事にでもまとめます。\n\n\n## さいごに\n\n※軽い感じに見えるけど実際はめちゃめちゃ慎重にチームでダブルチェックしながら作業進めてたよ。本番dbって怖いよね。\n\nではでは。\n\n\n\n\n","coediting":false,"comments_count":9,"created_at":"2020-08-16T04:59:43+09:00","group":null,"id":"57bd66359d89b691ba0d","likes_count":608,"private":false,"reactions_count":0,"stocks_count":297,"tags":[{"name":"MySQL","versions":[]},{"name":"Web","versions":[]},{"name":"Database","versions":[]},{"name":"運用","versions":[]},{"name":"アラート","versions":[]}],"title":"MySQLで3億レコード物理削除した話","updated_at":"2020-08-16T15:10:53+09:00","url":"https://qiita.com/ningenMe/items/57bd66359d89b691ba0d","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":30953,"team_membership":null,"organization_url_name":null,"slide":false},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"非再帰抽象化セグメント木について\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%9D%9E%E5%86%8D%E5%B8%B0%E6%8A%BD%E8%B1%A1%E5%8C%96%E3%82%BB%E3%82%B0%E3%83%A1%E3%83%B3%E3%83%88%E6%9C%A8%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e非再帰抽象化セグメント木について\u003c/h1\u003e\n\n\u003cp\u003ec++での実装メインの話をします。理論やモノイドなどの話はないです。\u003cbr\u003e\u003cbr\u003e\n自分がこう書くと上手く使えてるってだけのtipsを並べます。正当性はあまり担保できません。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"実装\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A3%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実装\u003c/h2\u003e\n\n\u003cp\u003eまずは完成品。  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e非再帰抽象化セグメント木\u003cbr\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ningenme.github.io/compro-library/lib/data-structure/segment-tree/SegmentTree.cpp\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://ningenme.github.io/compro-library/lib/data-structure/segment-tree/SegmentTree.cpp\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e非再帰抽象化遅延伝搬セグメント木 \n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://ningenme.github.io/compro-library/lib/data-structure/segment-tree/LazySegmentTree.cpp\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://ningenme.github.io/compro-library/lib/data-structure/segment-tree/LazySegmentTree.cpp\u003c/a\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\n\u003cp\u003e再帰かつ抽象化してないセグメント木との違いを意識して書きますが、再帰のセグ木とも同じ点だったり、抽象化してないセグ木とも同じ点も多々あります。  \u003c/p\u003e\n\n\u003cp\u003e以下、データを持つセグメント木の頂点をノードと称する。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eセグメント木をクラスで持つ。2本以上生やすとき大変なので。  \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e数列サイズ(length)は内部的には2べきで持つ\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eノードのサイズは2*lengthになる\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e1-indexed  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003etopが{1},上から2段目が{2,3},...みたいな\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e半開区間で書く [l,r)  \u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e各ノードの範囲を表すrangeも持つ  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003erange[1]=[0,length),range[2]=[0,length/2),range[3]=[length/2,length),...みたいな\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003erangeは二分探索しないならSegment Treeでは要らない。Lazy Segment Treeでは必須。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e二分探索するなら元の数列サイズnumも持つ  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e二分探索しないなら要らない。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e雛形 \u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSegmentTree\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSegmentTree\u003c/span\u003e\u003cspan class=\"p\"\u003e(){}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//[idx,idx+1)\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//[l,r)\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"コンストラクタ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンストラクタ\u003c/h2\u003e\n\n\u003cp\u003e3つあると使いやすい。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e初期化内容はどれもメモリの確保。rangeの計算。遅延伝搬時も一緒。\n\n\u003cul\u003e\n\u003cli\u003eO(N)で処理するのが大事。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e配列サイズを渡して単位元で初期化\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"n\"\u003eSegmentTree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_pair\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_pair\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e配列サイズを渡して定数値で初期化\n\n\u003cul\u003e\n\u003cli\u003e単位元じゃない初期化値で初期化したい場面用\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"n\"\u003eSegmentTree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_pair\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_pair\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003evectorを渡して初期化\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"n\"\u003eSegmentTree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003evec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003evec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003evec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evec\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_pair\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_pair\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eここからセグメント木と遅延伝搬セグメント木で分けます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"セグメント木\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%BB%E3%82%B0%E3%83%A1%E3%83%B3%E3%83%88%E6%9C%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eセグメント木\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"非再帰\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%9D%9E%E5%86%8D%E5%B8%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e非再帰\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"update\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#update\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eupdate\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e一番底を更新した後、ボトムアップで更新する\u003c/li\u003e\n\u003cli\u003e(idx\u0026lt;\u0026lt;1)+0,(idx\u0026lt;\u0026lt;1)+1,はidxの2つの子になる\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e//[idx,idx+1)\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"get\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#get\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eget\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e左右[l,r)の底から区間を縮めつつ、ボトムアップに値をマージする。\u003c/li\u003e\n\u003cli\u003e(l\u0026gt;\u0026gt;1),(r\u0026gt;\u0026gt;1),はそれぞれl,rの親になる\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e//[l,r)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"nf\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003evl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003evl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003evr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003evr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"抽象化\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%8A%BD%E8%B1%A1%E5%8C%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e抽象化\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncMerge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e//[l,r)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"nf\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003evl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003evl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003evr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003evr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003eノードの型をテンプレートにする。上記で説明した代入やmaxの演算を、外から与える形にする。\u003c/li\u003e\n\u003cli\u003efuncNode 取得クエリで欲しい演算\n\n\u003cul\u003e\n\u003cli\u003eノード同士の二項演算\u003c/li\u003e\n\u003cli\u003emax,min,sum,gcd,xorなどが入るところ。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003efuncMerge 更新クエリでしたい演算\n\n\u003cul\u003e\n\u003cli\u003e外からの値との二項演算\u003c/li\u003e\n\u003cli\u003eadd,updateなどが入るところ。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e結合の順序なども意識する(行列がバグるため)\u003c/li\u003e\n\u003cli\u003e演算をfunctionで渡してもいいが定数倍が遅くなる。\n\n\u003cul\u003e\n\u003cli\u003eどうせ単位元なども外から与えるので、演算とまとめて構造体で渡す設計が良い(下記参照)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eOperator\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSegmentTree\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eOperator\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                            \n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edecltype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/* \n    hoge\n*/\u003c/span\u003e \n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//一点更新 区間最大\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003etypeNode\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003enodeMaxPointAdd\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e);}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003efuncMerge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"二分探索\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BA%8C%E5%88%86%E6%8E%A2%E7%B4%A2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e二分探索\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eセグメント木上の二分探索も非再帰で書けます。\n\n\u003cul\u003e\n\u003cli\u003e普通にやるとlog2個になるところを1個にするテク\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e基本的には貪欲法です。大きく累積を試みて、駄目なら刻む。\n\n\u003cul\u003e\n\u003cli\u003e直感的にはダブリングLCAの登るパートに近い\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"prefix-range-0length\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#prefix-range-0length\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePrefix Range [0,length)\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e0からの累積値に対しての二分探索です。\n\n\u003cul\u003e\n\u003cli\u003e左から右に向かっての累積値が単調性を持つことを仮定します。\u003c/li\u003e\n\u003cli\u003eBITとかでやるやつ\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003etopを見る。その時点でcheck関数がfalseなら右端を返す\n\n\u003cul\u003e\n\u003cli\u003elengthは内部的な配列サイズなのでコンストラクタの引数で貰ってあるnumを返す。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eトップダウンに見る。\n\n\u003cul\u003e\n\u003cli\u003e左の子がマージできるならマージして右の子へ移動。\u003c/li\u003e\n\u003cli\u003e左の子をマージ出来ないなら左の子へ移動。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e下記実装だと最後index突き抜けてるので2で割る。\u003c/li\u003e\n\u003cli\u003e二分探索でノードと比較したい値を渡して、indexを返す。\n\n\u003cul\u003e\n\u003cli\u003e比較関数funcCheck()は抽象化クラスに入れておく。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e//return [0,num]\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ePrefixBinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(;\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"arbitrary-range-lr\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#arbitrary-range-lr\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eArbitrary Range [l,r)\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e任意範囲での二分探索。\n\n\u003cul\u003e\n\u003cli\u003e左から右に向かっての累積値が単調性を持つことを仮定します。\u003c/li\u003e\n\u003cli\u003eこちらはPrefix Rangeの上位互換。定数倍は少し重くなる。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eまずlの値(内部的にはnode[l+length]の値)から見てマージしていく。\n\n\u003cul\u003e\n\u003cli\u003eその後右へ右へ進んでいく。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e二分木の左側の子だった場合、右側の頂点へ。\u003c/li\u003e\n\u003cli\u003e右側の子だった場合は、一段上の右側の頂点へ飛ぶ。\n\n\u003cul\u003e\n\u003cli\u003eこの操作により見る範囲が2べきで大きくなるので計算量がlogで収まる。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003echeck関数がfalse、あるいは範囲がrより大きくマージできないときは一段下の左の子を見る。\n\n\u003cul\u003e\n\u003cli\u003e一度下がった段より上がることはなくなるため上下の遷移がlogで収まる。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e//range[l,r) return [l,r]\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003eBinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eoff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eoff\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e]),\u003c/span\u003e\u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eoff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eoff\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"遅延伝搬セグメント木\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%81%85%E5%BB%B6%E4%BC%9D%E6%90%AC%E3%82%BB%E3%82%B0%E3%83%A1%E3%83%B3%E3%83%88%E6%9C%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e遅延伝搬セグメント木\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e普通のセグメント木違い、区間を覆うlazy配列に一度値を格納し必要な時に伝搬させる。ここが少し複雑。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"非再帰-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%9D%9E%E5%86%8D%E5%B8%B0-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e非再帰\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"update-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#update-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eupdate\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eトップダウンでlazyを伝搬させる\u003c/li\u003e\n\u003cli\u003e左右[l,r)の底から区間を縮めつつ、ボトムアップに値をマージする。\u003c/li\u003e\n\u003cli\u003el,rを含む区間を全てボトムアップに更新する。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e//update [a,b)\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e),(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"get-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#get-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eget\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eトップダウンでlazyを伝搬させる\u003c/li\u003e\n\u003cli\u003e左右[l,r)の底から区間を縮めつつ、ボトムアップに値をマージする。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e//get [a,b)\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003evl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003evl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e]),\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003evr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003evr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"抽象化-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%8A%BD%E8%B1%A1%E5%8C%96-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e抽象化\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eノードの型をテンプレートにする。上記で説明した代入やmax、遅延伝搬の演算を、外から与える形にする。\u003c/li\u003e\n\u003cli\u003efuncNode 取得クエリで欲しい演算\n\n\u003cul\u003e\n\u003cli\u003eノード同士の二項演算\u003c/li\u003e\n\u003cli\u003emax,min,sum,gcd,xorなどが入るところ。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003efuncLazy 更新クエリでしたい演算\n\n\u003cul\u003e\n\u003cli\u003e外からの値との二項演算\u003c/li\u003e\n\u003cli\u003eadd,updateなどが入るところ。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003efuncMerge 遅延伝搬する際の演算\n\n\u003cul\u003e\n\u003cli\u003e実際の使い方を見るのがよさそう\u003c/li\u003e\n\u003cli\u003e区間長を扱えるようにrangeも引数で受け取る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eセグメント木の時に加えて、遅延配列の単位元も与える。\n\n\u003cul\u003e\n\u003cli\u003enodeとlazyの型は別で持っておかないと応用が効きにくいので分けるのを推奨。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eOperator\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eLazySegmentTree\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eOperator\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                       \n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edecltype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e          \n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003etypeLazy\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edecltype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitLazy\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                   \n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                   \n    \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                           \n    \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etypeLazy\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                           \n    \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/* \n    hoge\n*/\u003c/span\u003e \n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//区間最大　区間更新\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003etypeNode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003etypeLazy\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003enodeMaxLazyUpdate\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeLazy\u003c/span\u003e \u003cspan class=\"n\"\u003eunitLazy\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e);}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeLazy\u003c/span\u003e \u003cspan class=\"n\"\u003efuncLazy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etypeLazy\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etypeLazy\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003efuncMerge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003etypeLazy\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e!=\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"二分探索-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BA%8C%E5%88%86%E6%8E%A2%E7%B4%A2-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e二分探索\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e遅延伝搬セグメント木上の二分探索も非再帰で書けます。\n\n\u003cul\u003e\n\u003cli\u003e普通のセグメント木と殆ど同じ。\u003c/li\u003e\n\u003cli\u003e最初にトップダウンでlazyを伝搬させる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"prefix-range-0length-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#prefix-range-0length-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePrefix Range [0,length)\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e//return [0,length]\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ePrefixBinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(;\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncMerge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncMerge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"arbitrary-range-lr-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#arbitrary-range-lr-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eArbitrary Range [l,r)\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C++\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan class=\"c1\"\u003e//range[l,r) return [l,r]\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003eBinarySearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003epropagate\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etypeNode\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunitNode\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eoff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eoff\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncCheck\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncMerge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\u003cspan class=\"n\"\u003evar\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncNode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eOp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efuncMerge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003elazy\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eoff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eidx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eidx\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eoff\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"実用例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E7%94%A8%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実用例\u003c/h1\u003e\n\n\u003cp\u003e実際の使い方を見て覚えるのが良さそうです。\u003c/p\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"普通に使うとき\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%99%AE%E9%80%9A%E3%81%AB%E4%BD%BF%E3%81%86%E3%81%A8%E3%81%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e普通に使うとき\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e非再帰抽象化セグメント木\u003cbr\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://atcoder.jp/contests/abc157/submissions/11343448\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://atcoder.jp/contests/abc157/submissions/11343448\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e非再帰抽象化遅延伝搬セグメント木 \n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://atcoder.jp/contests/nikkei2019-final/submissions/11343285\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://atcoder.jp/contests/nikkei2019-final/submissions/11343285\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"抽象化が嬉しい問題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%8A%BD%E8%B1%A1%E5%8C%96%E3%81%8C%E5%AC%89%E3%81%97%E3%81%84%E5%95%8F%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e抽象化が嬉しい問題\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e1次関数\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://atcoder.jp/contests/arc008/submissions/11343644\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://atcoder.jp/contests/arc008/submissions/11343644\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e行列\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://atcoder.jp/contests/ddcc2019-final/submissions/11344348\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://atcoder.jp/contests/ddcc2019-final/submissions/11344348\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"セグ木上の二分探索\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%BB%E3%82%B0%E6%9C%A8%E4%B8%8A%E3%81%AE%E4%BA%8C%E5%88%86%E6%8E%A2%E7%B4%A2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eセグ木上の二分探索\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e非再帰抽象化セグメント木\u003cbr\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://atcoder.jp/contests/arc033/submissions/11344529\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://atcoder.jp/contests/arc033/submissions/11344529\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://atcoder.jp/contests/abc130/submissions/10809757\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://atcoder.jp/contests/abc130/submissions/10809757\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://atcoder.jp/contests/abc102/submissions/11343129\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://atcoder.jp/contests/abc102/submissions/11343129\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e非再帰抽象化遅延伝搬セグメント木 \n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://atcoder.jp/contests/abc130/submissions/10809794\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://atcoder.jp/contests/abc130/submissions/10809794\u003c/a\u003e\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://atcoder.jp/contests/abc102/submissions/11342964\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://atcoder.jp/contests/abc102/submissions/11342964\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"おわりに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eおわりに\u003c/h2\u003e\n\n\u003cp\u003e記事中のコードは簡略化していたりするので、github側を参考にしてください。  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e非再帰抽象化セグメント木\u003cbr\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ningenme.github.io/compro-library/lib/data-structure/segment-tree/SegmentTree.cpp\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://ningenme.github.io/compro-library/lib/data-structure/segment-tree/SegmentTree.cpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eモノイドはこちら\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ningenMe/compro-library/tree/master/lib/operator/monoid\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/ningenMe/compro-library/tree/master/lib/operator/monoid\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e非再帰抽象化遅延伝搬セグメント木 \n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ningenme.github.io/compro-library/lib/data-structure/segment-tree/LazySegmentTree.cpp\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://ningenme.github.io/compro-library/lib/data-structure/segment-tree/LazySegmentTree.cpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eモノイドはこちら\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ningenMe/compro-library/tree/master/lib/operator/monoid-lazy\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/ningenMe/compro-library/tree/master/lib/operator/monoid-lazy\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","body":"# 非再帰抽象化セグメント木について\nc++での実装メインの話をします。理論やモノイドなどの話はないです。  \n自分がこう書くと上手く使えてるってだけのtipsを並べます。正当性はあまり担保できません。\n\n## 実装\nまずは完成品。  \n\n- 非再帰抽象化セグメント木  \n\t- https://ningenme.github.io/compro-library/lib/data-structure/segment-tree/SegmentTree.cpp\n- 非再帰抽象化遅延伝搬セグメント木 \n\t- https://ningenme.github.io/compro-library/lib/data-structure/segment-tree/LazySegmentTree.cpp \n\n## はじめに\n再帰かつ抽象化してないセグメント木との違いを意識して書きますが、再帰のセグ木とも同じ点だったり、抽象化してないセグ木とも同じ点も多々あります。  \n\n以下、データを持つセグメント木の頂点をノードと称する。\n\n- セグメント木をクラスで持つ。2本以上生やすとき大変なので。  \n  \n- 数列サイズ(length)は内部的には2べきで持つ\n\t- ノードのサイズは2*lengthになる  \n- 1-indexed  \n\t- topが{1},上から2段目が{2,3},...みたいな  \n- 半開区間で書く [l,r)  \n- 各ノードの範囲を表すrangeも持つ  \n\t- range[1]=[0,length),range[2]=[0,length/2),range[3]=[length/2,length),...みたいな  \n\t- rangeは二分探索しないならSegment Treeでは要らない。Lazy Segment Treeでは必須。\n- 二分探索するなら元の数列サイズnumも持つ  \n\t- 二分探索しないなら要らない。\n\n雛形 \n\n\n```C++\nclass SegmentTree {\n\tsize_t length;\n\tvector\u003ctypeNode\u003e node;\n\tvector\u003cpair\u003csize_t,size_t\u003e\u003e range;\npublic:\n\tSegmentTree(){}\n\t//[idx,idx+1)\n\tvoid update(size_t idx, const int var) {}\n\t//[l,r)\n\tint get(int l, int r) {}\n};\n```\n## コンストラクタ\n3つあると使いやすい。\n\n- 初期化内容はどれもメモリの確保。rangeの計算。遅延伝搬時も一緒。\n\t- O(N)で処理するのが大事。\n- 配列サイズを渡して単位元で初期化  \n\n```C++\n\tSegmentTree(const size_t num): num(num) {\n\t\tfor (length = 1; length \u003c num; length *= 2);\n\t\tnode.resize(2 * length, 0);\n\t\trange.resize(2 * length);\n\t\tfor (int i = 0; i \u003c length; ++i) range[i+length] = make_pair(i,i+1);\n\t\tfor (int i = length - 1; i \u003e= 0; --i) range[i] = make_pair(range[(i\u003c\u003c1)+0].first,range[(i\u003c\u003c1)+1].second);\n\t}\n```\n\n- 配列サイズを渡して定数値で初期化\n\t- 単位元じゃない初期化値で初期化したい場面用\n\n```C++\n\tSegmentTree(const size_t num, const int init) : num(num) {\n\t\tfor (length = 1; length \u003c num; length *= 2);\n\t\tnode.resize(2 * length, init);\n\t\trange.resize(2 * length);\n\t\tfor (int i = 0; i \u003c length; ++i) range[i+length] = make_pair(i,i+1);\n\t\tfor (int i = length - 1; i \u003e= 0; --i) range[i] = make_pair(range[(i\u003c\u003c1)+0].first,range[(i\u003c\u003c1)+1].second);\n\t}\n```\n\n- vectorを渡して初期化\n\n```C++\n\tSegmentTree(const vector\u003ctypeNode\u003e \u0026 vec) : num(vec.size()) {\n\t\tfor (length = 1; length \u003c vec.size(); length *= 2);\n\t\tnode.resize(2 * length, 0);\n\t\tfor (int i = 0; i \u003c vec.size(); ++i) node[i + length] = vec[i];\n\t\tfor (int i = length - 1; i \u003e= 0; --i) node[i] = Op.funcNode(node[(i\u003c\u003c1)+0],node[(i\u003c\u003c1)+1]);\n\t\trange.resize(2 * length);\n\t\tfor (int i = 0; i \u003c length; ++i) range[i+length] = make_pair(i,i+1);\n\t\tfor (int i = length - 1; i \u003e= 0; --i) range[i] = make_pair(range[(i\u003c\u003c1)+0].first,range[(i\u003c\u003c1)+1].second);\n\t}\n```\n\nここからセグメント木と遅延伝搬セグメント木で分けます。\n# セグメント木\n## 非再帰\n### update\n\n- 一番底を更新した後、ボトムアップで更新する\n- (idx\u003c\u003c1)+0,(idx\u003c\u003c1)+1,はidxの2つの子になる\n\n```C++\n\t//[idx,idx+1)\n\tvoid update(size_t idx, const int var) {\n\t\tidx += length;\n\t\tnode[idx] = var;\n\t\twhile(idx \u003e\u003e= 1) node[idx] = max(node[(idx\u003c\u003c1)+0],node[(idx\u003c\u003c1)+1]);\n\t}\n```\n\n### get\n\n- 左右[l,r)の底から区間を縮めつつ、ボトムアップに値をマージする。\n- (l\u003e\u003e1),(r\u003e\u003e1),はそれぞれl,rの親になる\n\n```C++\n\t//[l,r)\n\ttypeNode get(int l, int r) {\n\t\tint vl = Op.unitNode, vr = Op.unitNode;\n\t\tfor(l += length, r += length; l \u003c r; l \u003e\u003e=1, r \u003e\u003e=1) {\n\t\t\tif(l\u00261) vl = max(vl,node[l++]);\n\t\t\tif(r\u00261) vr = max(node[--r],vr);\n\t\t}\n\t\treturn max(vl,vr);\n\t}\n```\n\n## 抽象化\n\n\n```C++\n\tvoid update(size_t idx, const typeNode var) {\n\t\tif(idx \u003c 0 || length \u003c= idx) return;\n\t\tidx += length;\n\t\tnode[idx] = Op.funcMerge(node[idx],var);\n\t\twhile(idx \u003e\u003e= 1) node[idx] = Op.funcNode(node[(idx\u003c\u003c1)+0],node[(idx\u003c\u003c1)+1]);\n\t}\n\n\t//[l,r)\n\ttypeNode get(int l, int r) {\n\t\tif (l \u003c 0 || length \u003c= l || r \u003c 0 || length \u003c r) return Op.unitNode;\n\t\ttypeNode vl = Op.unitNode, vr = Op.unitNode;\n\t\tfor(l += length, r += length; l \u003c r; l \u003e\u003e=1, r \u003e\u003e=1) {\n\t\t\tif(l\u00261) vl = Op.funcNode(vl,node[l++]);\n\t\t\tif(r\u00261) vr = Op.funcNode(node[--r],vr);\n\t\t}\n\t\treturn Op.funcNode(vl,vr);\n\t}\n```\n\n- ノードの型をテンプレートにする。上記で説明した代入やmaxの演算を、外から与える形にする。\n- funcNode 取得クエリで欲しい演算\n\t- ノード同士の二項演算\n\t- max,min,sum,gcd,xorなどが入るところ。\n- funcMerge 更新クエリでしたい演算\n\t- 外からの値との二項演算\n\t- add,updateなどが入るところ。\n- 結合の順序なども意識する(行列がバグるため)\n- 演算をfunctionで渡してもいいが定数倍が遅くなる。\n\t- どうせ単位元なども外から与えるので、演算とまとめて構造体で渡す設計が良い(下記参照)\n\n```C++\ntemplate\u003cclass Operator\u003e class SegmentTree {\n\tOperator Op;                            \n\tusing typeNode = decltype(Op.unitNode); \n\tsize_t length;\n\tsize_t num;\n\tvector\u003ctypeNode\u003e node;\n\tvector\u003cpair\u003csize_t,size_t\u003e\u003e range;\n/* \n\thoge\n*/ \n}\n\n//一点更新 区間最大\ntemplate\u003cclass typeNode\u003e struct nodeMaxPointAdd {\n\ttypeNode unitNode = 0;\n\ttypeNode funcNode(typeNode l,typeNode r){return max(l,r);}\n\ttypeNode funcMerge(typeNode l,typeNode r){return r;}\n};\n```\n\n## 二分探索\n\n- セグメント木上の二分探索も非再帰で書けます。\n\t- 普通にやるとlog2個になるところを1個にするテク\n- 基本的には貪欲法です。大きく累積を試みて、駄目なら刻む。\n\t- 直感的にはダブリングLCAの登るパートに近い  \n\n### Prefix Range [0,length)\n- 0からの累積値に対しての二分探索です。\n\t- 左から右に向かっての累積値が単調性を持つことを仮定します。\n\t- BITとかでやるやつ\n- topを見る。その時点でcheck関数がfalseなら右端を返す\n\t- lengthは内部的な配列サイズなのでコンストラクタの引数で貰ってあるnumを返す。\n- トップダウンに見る。\n\t- 左の子がマージできるならマージして右の子へ移動。\n\t- 左の子をマージ出来ないなら左の子へ移動。\n- 下記実装だと最後index突き抜けてるので2で割る。\n- 二分探索でノードと比較したい値を渡して、indexを返す。\n\t- 比較関数funcCheck()は抽象化クラスに入れておく。\n\n```C++\n\t//return [0,num]\n\tint PrefixBinarySearch(typeNode var) {\n\t\tif(!Op.funcCheck(node[1],var)) return num;\n\t\ttypeNode ret = Op.unitNode;\n\t\tsize_t idx = 2;\n\t\tfor(; idx \u003c 2*length; idx\u003c\u003c=1){\n\t\t\tif(!Op.funcCheck(Op.funcNode(node[idx],ret),var)) {\n\t\t\t\tret = Op.funcNode(node[idx],ret);\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\treturn min((idx\u003e\u003e1) - length,num);\n\t}\n```\n\n### Arbitrary Range [l,r)\n- 任意範囲での二分探索。\n\t- 左から右に向かっての累積値が単調性を持つことを仮定します。\n\t- こちらはPrefix Rangeの上位互換。定数倍は少し重くなる。\n- まずlの値(内部的にはnode[l+length]の値)から見てマージしていく。\n\t- その後右へ右へ進んでいく。\n- 二分木の左側の子だった場合、右側の頂点へ。\n- 右側の子だった場合は、一段上の右側の頂点へ飛ぶ。\n\t- この操作により見る範囲が2べきで大きくなるので計算量がlogで収まる。\n- check関数がfalse、あるいは範囲がrより大きくマージできないときは一段下の左の子を見る。\n\t- 一度下がった段より上がることはなくなるため上下の遷移がlogで収まる。\n\n```C++\n\t//range[l,r) return [l,r]\n\tint BinarySearch(size_t l, size_t r, typeNode var) {\n\t\ttypeNode ret = Op.unitNode;\n\t\tsize_t off = l;\n\t\tfor(size_t idx = l+length; idx \u003c 2*length \u0026\u0026 off \u003c r; ){\n\t\t\tif(range[idx].second\u003c=r \u0026\u0026 !Op.funcCheck(Op.funcNode(ret,node[idx]),var)) {\n\t\t\t\tret = Op.funcNode(ret,node[idx]);\n\t\t\t\toff = range[idx++].second;\n\t\t\t\tif(!(idx\u00261)) idx \u003e\u003e= 1;\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tidx \u003c\u003c=1;\n\t\t\t}\n\t\t}\n\t\treturn off;\n\t}\n```\n\n# 遅延伝搬セグメント木\n- 普通のセグメント木違い、区間を覆うlazy配列に一度値を格納し必要な時に伝搬させる。ここが少し複雑。\n\n## 非再帰\n### update\n- トップダウンでlazyを伝搬させる\n- 左右[l,r)の底から区間を縮めつつ、ボトムアップに値をマージする。\n- l,rを含む区間を全てボトムアップに更新する。\n\n```C++\n\t//update [a,b)\n\tvoid update(int a, int b, int x) {\n\t\tint l = a + length, r = b + length - 1;\n\t\tfor (int i = height; 0 \u003c i; --i) propagate(l \u003e\u003e i), propagate(r \u003e\u003e i);\n\t\tfor(r++; l \u003c r; l \u003e\u003e=1, r \u003e\u003e=1) {\n\t\t\tif(l\u00261) lazy[l] = x, propagate(l),l++;\n\t\t\tif(r\u00261) --r,lazy[r] = x, propagate(r);\n\t\t}\n\t\tl = a + length, r = b + length - 1;\n\t\twhile ((l\u003e\u003e=1),(r\u003e\u003e=1),l) {\n\t\t\tif(lazy[l] == 0) node[l] = max(node[(l\u003c\u003c1)+0]=lazy[(l\u003c\u003c1)+0],node[(l\u003c\u003c1)+1]=lazy[(l\u003c\u003c1)+1]);\n\t\t\tif(lazy[r] == 0) node[r] = max(node[(r\u003c\u003c1)+0]=lazy[(r\u003c\u003c1)+0],node[(r\u003c\u003c1)+1],=lazy[(r\u003c\u003c1)+1]);\n\t\t}\n\t}\n```\n\n### get\n\n- トップダウンでlazyを伝搬させる\n- 左右[l,r)の底から区間を縮めつつ、ボトムアップに値をマージする。\n\n```C++\n\t//get [a,b)\n\tint get(int a, int b) {\n\t\tint l = a + length, r = b + length - 1;\n\t\tfor (int i = height; 0 \u003c i; --i) propagate(l \u003e\u003e i), propagate(r \u003e\u003e i);\n\t\tint vl = 0, vr = 0;\n\t\tfor(r++; l \u003c r; l \u003e\u003e=1, r \u003e\u003e=1) {\n\t\t\tif(l\u00261) vl = max(vl,node[l]=lazy[l]),l++;\n\t\t\tif(r\u00261) r--,vr = max(node[r]=lazy[r],vr);\n\t\t}\n\t\treturn max(vl,vr);\n\t}\n```\n\n## 抽象化\n\n- ノードの型をテンプレートにする。上記で説明した代入やmax、遅延伝搬の演算を、外から与える形にする。\n- funcNode 取得クエリで欲しい演算\n\t- ノード同士の二項演算\n\t- max,min,sum,gcd,xorなどが入るところ。\n- funcLazy 更新クエリでしたい演算\n\t- 外からの値との二項演算\n\t- add,updateなどが入るところ。\n- funcMerge 遅延伝搬する際の演算\n\t- 実際の使い方を見るのがよさそう\n\t- 区間長を扱えるようにrangeも引数で受け取る\n- セグメント木の時に加えて、遅延配列の単位元も与える。\n\t- nodeとlazyの型は別で持っておかないと応用が効きにくいので分けるのを推奨。\n\n```C++\ntemplate\u003cclass Operator\u003e class LazySegmentTree {\n\tOperator Op;                                       \n\tusing typeNode = decltype(Op.unitNode);          \n\tusing typeLazy = decltype(Op.unitLazy);\n\tsize_t num;      \n\tsize_t length;                                   \n\tsize_t height;                                   \n\tvector\u003ctypeNode\u003e node;                           \n\tvector\u003ctypeLazy\u003e lazy;                           \n\tvector\u003cpair\u003csize_t,size_t\u003e\u003e range;\n/* \n\thoge\n*/ \n};\n\n//区間最大　区間更新\ntemplate\u003cclass typeNode, class typeLazy\u003e struct nodeMaxLazyUpdate {\n\ttypeNode unitNode = 0;\n\ttypeLazy unitLazy = 0;\n\ttypeNode funcNode(typeNode l,typeNode r){return max(l,r);}\n\ttypeLazy funcLazy(typeLazy l,typeLazy r){return r;}\n\ttypeNode funcMerge(typeNode l,typeLazy r,int len){return r!=0?r*len:l;}\n};\n```\n\n## 二分探索\n- 遅延伝搬セグメント木上の二分探索も非再帰で書けます。\n\t- 普通のセグメント木と殆ど同じ。\n\t- 最初にトップダウンでlazyを伝搬させる\n\t\n### Prefix Range [0,length)\n\n```C++\n\t//return [0,length]\n\tint PrefixBinarySearch(typeNode var) {\n\t\tint l = length, r = 2*length - 1;\n\t\tfor (int i = height; 0 \u003c i; --i) propagate(l \u003e\u003e i), propagate(r \u003e\u003e i);\n\t\tif(!Op.funcCheck(node[1],var)) return num;\n\t\ttypeNode ret = Op.unitNode;\n\t\tsize_t idx = 2;\n\t\tfor(; idx \u003c 2*length; idx\u003c\u003c=1){\n\t\t\tif(!Op.funcCheck(Op.funcNode(ret,Op.funcMerge(node[idx],lazy[idx],range[idx].second-range[idx].first)),var)) {\n\t\t\t\tret = Op.funcNode(ret,Op.funcMerge(node[idx],lazy[idx],range[idx].second-range[idx].first));\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\treturn min((idx\u003e\u003e1) - length,num);\n\t}\n```\n\n### Arbitrary Range [l,r)\n```C++\n\t//range[l,r) return [l,r]\n\tint BinarySearch(size_t l, size_t r, typeNode var) {\n\t\tif (l \u003c 0 || length \u003c= l || r \u003c 0 || length \u003c r) return -1;\n\t\tfor (int i = height; 0 \u003c i; --i) propagate((l+length) \u003e\u003e i), propagate((r+length-1) \u003e\u003e i);\n\t\ttypeNode ret = Op.unitNode;\n\t\tsize_t off = l;\n\t\tfor(size_t idx = l+length; idx \u003c 2*length \u0026\u0026 off \u003c r; ){\n\t\t\tif(range[idx].second\u003c=r \u0026\u0026 !Op.funcCheck(Op.funcNode(ret,Op.funcMerge(node[idx],lazy[idx],range[idx].second-range[idx].first)),var)) {\n\t\t\t\tret = Op.funcNode(ret,Op.funcMerge(node[idx],lazy[idx],range[idx].second-range[idx].first));\n\t\t\t\toff = range[idx++].second;\n\t\t\t\tif(!(idx\u00261)) idx \u003e\u003e= 1;\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tidx \u003c\u003c=1;\n\t\t\t}\n\t\t}\n\t\treturn off;\n\t}\n```\n\n# 実用例\n実際の使い方を見て覚えるのが良さそうです。\n\n#### 普通に使うとき\n- 非再帰抽象化セグメント木  \n\t- https://atcoder.jp/contests/abc157/submissions/11343448\n- 非再帰抽象化遅延伝搬セグメント木 \n\t- https://atcoder.jp/contests/nikkei2019-final/submissions/11343285\n\n#### 抽象化が嬉しい問題\n- 1次関数\n\t- https://atcoder.jp/contests/arc008/submissions/11343644\n- 行列\n\t- https://atcoder.jp/contests/ddcc2019-final/submissions/11344348\n\n#### セグ木上の二分探索\n\n- 非再帰抽象化セグメント木  \n\t- https://atcoder.jp/contests/arc033/submissions/11344529\n\t- https://atcoder.jp/contests/abc130/submissions/10809757\n\t- https://atcoder.jp/contests/abc102/submissions/11343129  \n- 非再帰抽象化遅延伝搬セグメント木 \n\t- https://atcoder.jp/contests/abc130/submissions/10809794  \n\t- https://atcoder.jp/contests/abc102/submissions/11342964\n\n\n## おわりに\n記事中のコードは簡略化していたりするので、github側を参考にしてください。  \n\n- 非再帰抽象化セグメント木  \n\t- https://ningenme.github.io/compro-library/lib/data-structure/segment-tree/SegmentTree.cpp\n\t- モノイドはこちら\n        - https://github.com/ningenMe/compro-library/tree/master/lib/operator/monoid\n- 非再帰抽象化遅延伝搬セグメント木 \n\t- https://ningenme.github.io/compro-library/lib/data-structure/segment-tree/LazySegmentTree.cpp\n\t- モノイドはこちら\n        - https://github.com/ningenMe/compro-library/tree/master/lib/operator/monoid-lazy\n\n\n","coediting":false,"comments_count":2,"created_at":"2020-03-29T20:10:31+09:00","group":null,"id":"bf66de877e3b97d35862","likes_count":15,"private":false,"reactions_count":0,"stocks_count":6,"tags":[{"name":"C++","versions":[]},{"name":"抽象化","versions":[]},{"name":"競技プログラミング","versions":[]},{"name":"二分探索","versions":[]},{"name":"セグメント木","versions":[]}],"title":"非再帰抽象化セグメント木について","updated_at":"2021-04-26T17:40:00+09:00","url":"https://qiita.com/ningenMe/items/bf66de877e3b97d35862","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":5245,"team_membership":null,"organization_url_name":null,"slide":false},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e最初に断っておくと、これは競技プログラミングで使うことを想定した仕様です。\u003cbr\u003e\nなので未定義動作がとてもあります、悪しからず。\u003c/p\u003e\n\n\u003cp\u003e追記(2018/10/15)\u003cbr\u003e\n僕のローカルだと動くんですが他の環境だと動かない部分があったため\u003cbr\u003e\nchocoboさんからプルリクを頂き少しコードが変わりました。\u003cbr\u003e\nありがとうございます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"目的\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%9B%AE%E7%9A%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e目的\u003c/h1\u003e\n\n\u003cp\u003e競技プログラミングをする際に、デバッグ時に便利な標準出力の関数をc++で作ること。\u003c/p\u003e\n\n\u003cp\u003e問題文に対する解答として出力を行う際、c++にある出力(cout)とpython3の出力(print)にはそんなに差はないと思います。\u003cbr\u003e\nただ競技プログラミングにおけるデバッグとして変数の値を確認するという目的だとcoutというのはprintに比べて少し不便だなと感じます。\u003c/p\u003e\n\n\u003cp\u003ecout(c++)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e出力の際に変数と変数の間にスペースが自動で入らない。\u003c/li\u003e\n\u003cli\u003eオブジェクトを受けとることができない。\u003c/li\u003e\n\u003cli\u003eタイプ量が多くなる。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eprint(python3)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e出力の際自動で変数と変数の間にスペースが自動でデフォルトで入る。\u003c/li\u003e\n\u003cli\u003eオブジェクトを受けとることができる。\u003c/li\u003e\n\u003cli\u003e簡潔でタイプ量が少ない。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e結局coutでも同じことは出来るんですが、速度を問われる競技プログラミングにおいてはprintの方がやや上回るかなという気がします。\u003cbr\u003e\n特に多次元リストをそのまま引数に入れることが出来るという点でprintは便利かなと。\u003c/p\u003e\n\n\u003cp\u003eただpythonで競技プログラミングを行うとそれはそれでデメリットもあるので、print関数の仕様を真似てc++で実装していきます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"実装\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A3%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実装\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eprint.cpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;map\u0026gt;\n#include \u0026lt;set\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eU\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eU\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eset\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHead\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHead\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"nc\"\u003eTail\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHead\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eTail\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e...\u003c/span\u003e \u003cspan class=\"n\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eforward\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eTail\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e)...);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"説明\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AA%AC%E6%98%8E\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e説明\u003c/h1\u003e\n\n\u003cp\u003e可変長引数と再帰関数、関数テンプレートとオペレーターのオーバーロードを利用して実装しました。\u003cbr\u003e\n実装に関して、似たことを先に考えていた人が記事にしていたので参考にしました。\u003cbr\u003e\n→\u003ca href=\"http://d.hatena.ne.jp/kusano_prog/20110127/1296128291\" rel=\"nofollow noopener\" target=\"_blank\"\u003estd::vectorの出力 - 赤コーダーになりたい\u003c/a\u003e\u003cbr\u003e\nプリミティブ型、stringやvector、多次元vector、mapやsetを引数に受け取れます。\u003cbr\u003e\n以下に使用例を載せます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003emain.cpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"c1\"\u003e//上記のコード(print.cpp)は省略\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \u0026lt;string\u0026gt; \n#include \u0026lt;map\u0026gt;\n#include \u0026lt;set\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//test1\u003c/span\u003e\n\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"hoge\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003edouble\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e7.3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/*\nhoge {7.3, 7.3, 7.3, 7.3, 7.3}\n*/\u003c/span\u003e\n\n\n\u003cspan class=\"c1\"\u003e//test2\u003c/span\u003e\n\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003evv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evv\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/*\n{{8, 8, 8}, {8, 8, 8}}\n*/\u003c/span\u003e\n\n\n\u003cspan class=\"c1\"\u003e//test3 \u003c/span\u003e\n\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/*\n\n*/\u003c/span\u003e\n\n\n\u003cspan class=\"c1\"\u003e//test4     \u003c/span\u003e\n\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003emp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"two\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003emp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"seven\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003emp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ten\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003emp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"three\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eset\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003est\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003est\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003est\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003est\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e324\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003est\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003evmp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003evmp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003evmp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003evmp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003evmp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003est\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evmp\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/*\n{{seven, 7}, {ten, 10}, {three, 3}, {two, 2}} {1, 5, 34, 324} {{{2, 9}}, {{5, 3}, {6, 2}}, {}, {{1, 3}}}\n*/\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"問題点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%95%8F%E9%A1%8C%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e問題点\u003c/h1\u003e\n\n\u003cp\u003equeueやstackは受け取れないのが難点。\u003cbr\u003e\nオペレーターを定義すれば問題ないのでしょうがあまり使わないのでいいかなと。\u003cbr\u003e\n他にも気づいていないだけで良くない実装がありそう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"おわりに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eおわりに\u003c/h1\u003e\n\n\u003cp\u003egistは\u003ca href=\"https://gist.github.com/ningenMe/ab60245989c43f539cf33bd2c18ff948\" rel=\"nofollow noopener\" target=\"_blank\"\u003eこちら\u003c/a\u003eです。\u003c/p\u003e\n\n\u003cp\u003e改良、あるいは上位互換の関数が作れそうな気がするので作った方がいれば教えてください。\u003cbr\u003e\nまた、間違っているところがあれば教えてください。\u003cbr\u003e\nご連絡は\u003ca href=\"https://twitter.com/ningenMe\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@ningenMe\u003c/a\u003eまで。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記-20191011\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98-20191011\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記 (2019/10/11)\u003c/h1\u003e\n\n\u003cp\u003eとりあえず動くものを使いたい人は下のテンプレを\u003cbr\u003e\nusing namespace std;とmain関数の間に置くと良い感じです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003emain.cpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eU\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" {\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" : \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\",\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" }\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eset\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003emultiset\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eU\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e  \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eU\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"{\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eitr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHead\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e();}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHead\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"nc\"\u003eTail\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHead\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eTail\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e...\u003c/span\u003e \u003cspan class=\"n\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehead\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eforward\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eTail\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etail\u003c/span\u003e\u003cspan class=\"p\"\u003e)...);}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n","body":"\n\n# はじめに\n\n最初に断っておくと、これは競技プログラミングで使うことを想定した仕様です。\nなので未定義動作がとてもあります、悪しからず。\n\n\n追記(2018/10/15)\n僕のローカルだと動くんですが他の環境だと動かない部分があったため\nchocoboさんからプルリクを頂き少しコードが変わりました。\nありがとうございます。\n\n# 目的\n競技プログラミングをする際に、デバッグ時に便利な標準出力の関数をc++で作ること。\n\n問題文に対する解答として出力を行う際、c++にある出力(cout)とpython3の出力(print)にはそんなに差はないと思います。\nただ競技プログラミングにおけるデバッグとして変数の値を確認するという目的だとcoutというのはprintに比べて少し不便だなと感じます。\n\ncout(c++)\n\n- 出力の際に変数と変数の間にスペースが自動で入らない。\n- オブジェクトを受けとることができない。\n- タイプ量が多くなる。\n\nprint(python3)\n\n- 出力の際自動で変数と変数の間にスペースが自動でデフォルトで入る。\n- オブジェクトを受けとることができる。\n- 簡潔でタイプ量が少ない。\n\n結局coutでも同じことは出来るんですが、速度を問われる競技プログラミングにおいてはprintの方がやや上回るかなという気がします。\n特に多次元リストをそのまま引数に入れることが出来るという点でprintは便利かなと。\n\nただpythonで競技プログラミングを行うとそれはそれでデメリットもあるので、print関数の仕様を真似てc++で実装していきます。\n\n# 実装\n```cpp:print.cpp\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cmap\u003e\n#include \u003cset\u003e\n\nusing namespace std;\n\ntemplate \u003cclass T\u003eostream \u0026operator\u003c\u003c(ostream \u0026o, const vector\u003cT\u003e\u0026obj) {\n\to \u003c\u003c \"{\"; for (int i = 0; i \u003c (int)obj.size(); ++i)o \u003c\u003c (i \u003e 0 ? \", \" : \"\") \u003c\u003c obj[i]; o \u003c\u003c \"}\"; return o;\n}\n\ntemplate \u003cclass T, class U\u003eostream \u0026operator\u003c\u003c(ostream \u0026o, const pair\u003cT, U\u003e\u0026obj) {\n\to \u003c\u003c \"{\" \u003c\u003c obj.first \u003c\u003c \", \" \u003c\u003c obj.second \u003c\u003c \"}\"; return o;\n}\n\ntemplate \u003cclass T, class U\u003eostream \u0026operator\u003c\u003c(ostream \u0026o, const map\u003cT, U\u003e\u0026obj) {\n\to \u003c\u003c \"{\"; for (auto itr = obj.begin(); itr != obj.end(); ++itr) o \u003c\u003c (itr != obj.begin() ? \", \" : \"\") \u003c\u003c *itr; o \u003c\u003c \"}\"; return o;\n}\n\ntemplate \u003cclass T\u003eostream \u0026operator\u003c\u003c(ostream \u0026o, const set\u003cT\u003e\u0026obj) {\n\to \u003c\u003c \"{\"; for (auto itr = obj.begin(); itr != obj.end(); ++itr) o \u003c\u003c (itr != obj.begin() ? \", \" : \"\") \u003c\u003c *itr; o \u003c\u003c \"}\"; return o;\n}\n\nvoid print(void) {\n\tcout \u003c\u003c endl;\n}\n\ntemplate \u003cclass Head\u003e void print(Head\u0026\u0026 head) {\n\tcout \u003c\u003c head;\n\tprint();\n}\n\ntemplate \u003cclass Head, class... Tail\u003e void print(Head\u0026\u0026 head, Tail\u0026\u0026... tail) {\n\tcout \u003c\u003c head \u003c\u003c \" \";\n\tprint(forward\u003cTail\u003e(tail)...);\n}\n```\n# 説明\n可変長引数と再帰関数、関数テンプレートとオペレーターのオーバーロードを利用して実装しました。\n実装に関して、似たことを先に考えていた人が記事にしていたので参考にしました。\n→[std::vectorの出力 - 赤コーダーになりたい](http://d.hatena.ne.jp/kusano_prog/20110127/1296128291)\nプリミティブ型、stringやvector、多次元vector、mapやsetを引数に受け取れます。\n以下に使用例を載せます。\n\n```cpp:main.cpp\n//上記のコード(print.cpp)は省略\n#include \u003cstring\u003e \n#include \u003cmap\u003e\n#include \u003cset\u003e\n\nint main() {\n\n//test1\nstring s = \"hoge\";\nvector\u003cdouble\u003e v(5, 7.3);\n\nprint(s, v);\n/*\nhoge {7.3, 7.3, 7.3, 7.3, 7.3}\n*/\n\n\n//test2\nvector\u003cvector\u003cint\u003e\u003e vv(2, vector\u003cint\u003e(3, 8));\n\nprint(vv);\n/*\n{{8, 8, 8}, {8, 8, 8}}\n*/\n\n       \n//test3 \nprint();\n/*\n\n*/\n\n\n//test4     \nmap\u003cstring, int\u003e mp;\nmp[\"two\"] = 2;\nmp[\"seven\"] = 7;\nmp[\"ten\"] = 10;\nmp[\"three\"] = 3;\n\nset\u003cint\u003e st;\nst.insert(1);\nst.insert(5);\nst.insert(324);\nst.insert(34);\n    \nvector\u003cmap\u003cint, int\u003e\u003e vmp(4);\nvmp[0][2] = 9;\nvmp[1][5] = 3;\nvmp[3][1] = 3;\nvmp[1][6] = 2;\n\nprint(mp, st, vmp);\n/*\n{{seven, 7}, {ten, 10}, {three, 3}, {two, 2}} {1, 5, 34, 324} {{{2, 9}}, {{5, 3}, {6, 2}}, {}, {{1, 3}}}\n*/\n\nreturn 0;\n}\n```\n\n# 問題点\nqueueやstackは受け取れないのが難点。\nオペレーターを定義すれば問題ないのでしょうがあまり使わないのでいいかなと。\n他にも気づいていないだけで良くない実装がありそう。\n\n# おわりに\ngistは[こちら](https://gist.github.com/ningenMe/ab60245989c43f539cf33bd2c18ff948)です。\n\n改良、あるいは上位互換の関数が作れそうな気がするので作った方がいれば教えてください。\nまた、間違っているところがあれば教えてください。\nご連絡は[@ningenMe](https://twitter.com/ningenMe)まで。\n\n# 追記 (2019/10/11)\nとりあえず動くものを使いたい人は下のテンプレを\nusing namespace std;とmain関数の間に置くと良い感じです。\n\n```cpp:main.cpp\ntemplate \u003cclass T, class U\u003eostream \u0026operator\u003c\u003c(ostream \u0026o, const map\u003cT, U\u003e\u0026obj) {o \u003c\u003c \"{\"; for (auto \u0026x : obj) o \u003c\u003c \" {\" \u003c\u003c x.first \u003c\u003c \" : \" \u003c\u003c x.second \u003c\u003c \"}\" \u003c\u003c \",\"; o \u003c\u003c \" }\"; return o;}\ntemplate \u003cclass T\u003eostream \u0026operator\u003c\u003c(ostream \u0026o, const set\u003cT\u003e\u0026obj) {o \u003c\u003c \"{\"; for (auto itr = obj.begin(); itr != obj.end(); ++itr) o \u003c\u003c (itr != obj.begin() ? \", \" : \"\") \u003c\u003c *itr; o \u003c\u003c \"}\"; return o;}\ntemplate \u003cclass T\u003eostream \u0026operator\u003c\u003c(ostream \u0026o, const multiset\u003cT\u003e\u0026obj) {o \u003c\u003c \"{\"; for (auto itr = obj.begin(); itr != obj.end(); ++itr) o \u003c\u003c (itr != obj.begin() ? \", \" : \"\") \u003c\u003c *itr; o \u003c\u003c \"}\"; return o;}\ntemplate \u003cclass T\u003eostream \u0026operator\u003c\u003c(ostream \u0026o, const vector\u003cT\u003e\u0026obj) {o \u003c\u003c \"{\"; for (int i = 0; i \u003c (int)obj.size(); ++i)o \u003c\u003c (i \u003e 0 ? \", \" : \"\") \u003c\u003c obj[i]; o \u003c\u003c \"}\"; return o;}\ntemplate \u003cclass T, class U\u003eostream \u0026operator\u003c\u003c(ostream \u0026o, const pair\u003cT, U\u003e\u0026obj) {o \u003c\u003c \"{\" \u003c\u003c obj.first \u003c\u003c \", \" \u003c\u003c obj.second \u003c\u003c \"}\"; return o;}\ntemplate \u003ctemplate \u003cclass tmp\u003e  class T, class U\u003e ostream \u0026operator\u003c\u003c(ostream \u0026o, const T\u003cU\u003e \u0026obj) {o \u003c\u003c \"{\"; for (auto itr = obj.begin(); itr != obj.end(); ++itr)o \u003c\u003c (itr != obj.begin() ? \", \" : \"\") \u003c\u003c *itr; o \u003c\u003c \"}\"; return o;}\nvoid print(void) {cout \u003c\u003c endl;}\ntemplate \u003cclass Head\u003e void print(Head\u0026\u0026 head) {cout \u003c\u003c head;print();}\ntemplate \u003cclass Head, class... Tail\u003e void print(Head\u0026\u0026 head, Tail\u0026\u0026... tail) {cout \u003c\u003c head \u003c\u003c \" \";print(forward\u003cTail\u003e(tail)...);}\n```\n\n","coediting":false,"comments_count":2,"created_at":"2018-09-30T02:13:35+09:00","group":null,"id":"652c3414a3152207ef43","likes_count":14,"private":false,"reactions_count":0,"stocks_count":6,"tags":[{"name":"C++","versions":[]},{"name":"template","versions":[]},{"name":"Python3","versions":[]},{"name":"競技プログラミング","versions":[]},{"name":"標準出力","versions":[]}],"title":"【競技プログラミング用】c++でpython3のprint関数を作ってみた。","updated_at":"2021-06-15T02:25:18+09:00","url":"https://qiita.com/ningenMe/items/652c3414a3152207ef43","user":{"description":"競技プログラミングとwebをしています。","facebook_id":"","followees_count":3,"followers_count":20,"github_login_name":null,"id":"ningenMe","items_count":11,"linkedin_id":"","location":"","name":"Taishi Furuta","organization":"","permanent_id":246454,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/246454/aa609ddea79514e0bd701c5adf0ea888f4dcbb9a/x_large.png?1680996654","team_only":false,"twitter_screen_name":null,"website_url":"https://ningenme.net"},"page_views_count":2242,"team_membership":null,"organization_url_name":null,"slide":false}]